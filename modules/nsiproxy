{
  "symbols": [
    "??_C@_13PNBDBPLL@?$AAA@",
    "??_C@_15DNGEKDKB@?$AAG?$AAR@",
    "??_C@_15ELMAKJHJ@?$AAW?$AAD@",
    "??_C@_15FCNJEDMF@?$AAG?$AAX@",
    "??_C@_15HPMIFLNA@?$AAG?$AAA@",
    "??_C@_15IGNKAAHD@?$AAR?$AAC@",
    "??_C@_15JMMBCOHI@?$AAW?$AAO@",
    "??_C@_15KLKFDJD@?$AAG?$AAW@",
    "??_C@_15NAFBOLGP@?$AAS?$AAD@",
    "??_C@_1BA@LDGHIHMO@?$AA?2?$AA?$DP?$AA?$DP?$AA?2?$AAN?$AAs?$AAi@",
    "??_C@_1BC@FCJNIDNL@?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy@",
    "??_C@_1BE@DJHAJDEM@?$AAE?$AAx?$AAc?$AAl?$AAu?$AAs?$AAi?$AAv?$AAe@",
    "??_C@_1BG@COALCEMK@?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAi?$AAe?$AAs@",
    "??_C@_1BG@KCOOGCNN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe@",
    "??_C@_1BG@OPOOGLJC@?$AAN?$AAo?$AAU?$AAs?$AAe?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "??_C@_1BI@BLCHOJPC@?$AA?2?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?2?$AAN?$AAs?$AAi@",
    "??_C@_1BO@DAOBINHA@?$AAN?$AAo?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "??_C@_1CK@LEEDIGFP@?$AAI?$AAo?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS@",
    "??_C@_1CM@DIJFBEC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AAa?$AAc?$AAt?$AAe?$AAr@",
    "??_C@_1EA@BAHCLPHE@?$AAI?$AAo?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc@",
    "??_C@_1GG@FCALANDO@?$AA?$HL?$AA?$CF?$AA0?$AA8?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX@",
    "??_C@_1GM@JINLDKKK@?$AAS?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@",
    "??_C@_1HC@DKINPPAJ@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@",
    "??_C@_1IA@DFKOADOP@?$AAD?$AA?3?$AAP?$AA?$CI?$AAA?$AA?$DL?$AA?$DL?$AAG?$AAX?$AA?$DL?$AA?$DL?$AA?$DL?$AAW?$AAD?$AA?$CJ@",
    "??_C@_1JI@BCEJBOO@?$AAD?$AA?3?$AAP?$AA?$CI?$AAA?$AA?$DL?$AA?$DL?$AAF?$AAA?$AA?$DL?$AA?$DL?$AA?$DL?$AAS?$AA?9?$AA1@",
    "??_C@_1M@OAHBGIFG@?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "AllocateCapabilitySid",
    "ApplySecurityToDeviceObject",
    "CmRegUtilCreateUcKey",
    "CmRegUtilCreateWstrKey",
    "CmRegUtilOpenExistingUcKey",
    "CmRegUtilOpenExistingWstrKey",
    "CmRegUtilUcValueGetDword",
    "CmRegUtilUcValueGetFullBuffer",
    "CmRegUtilUcValueSetUcString",
    "CmRegUtilWstrValueGetDword",
    "CmRegUtilWstrValueSetFullBuffer",
    "CmRegUtilWstrValueSetWstrString",
    "CmpRegUtilAllocateUnicodeString",
    "DriverEntry",
    "DrvDereferenceDriver",
    "DrvInitializeAllowUnloadEvent",
    "DrvWaitForAllowUnloadEvent",
    "DrvpAllowUnloadEvent",
    "DrvpReferenceCount",
    "GsDriverEntry",
    "IoDevObjCreateDeviceSecure",
    "IoDeviceObjectType",
    "IopDevObjApplyPostCreationSettings",
    "MmUserProbeAddress",
    "NsiProxyDeviceObject",
    "NsiServiceSecurityDescriptor",
    "NsippCancelChangeNotification",
    "NsippCancelChangeNotificationRoutine",
    "NsippChangeNotificationCallback",
    "NsippCleanup",
    "NsippCleanupNotification",
    "NsippCreateDevice",
    "NsippDeleteDevice",
    "NsippDeregisterChangeNotification",
    "NsippDeregisterWorker",
    "NsippDispatch",
    "NsippDispatchDeviceControl",
    "NsippEnumerateObjectsAllParameters",
    "NsippEnumerateObjectsAllPersistentParametersWithMask",
    "NsippFindIrp",
    "NsippFindNotificationHandle",
    "NsippGetAllParameters",
    "NsippGetAllPersistentParametersWithMask",
    "NsippGetParameter",
    "NsippIsCallerNsiService",
    "NsippIsMatchingObject",
    "NsippMoveList",
    "NsippNotificationHandleList",
    "NsippNotificationHandleListLock",
    "NsippProbeAndAllocateParameters",
    "NsippProbeForRead",
    "NsippProbeForWrite",
    "NsippRegisterChangeNotification",
    "NsippRequestChangeNotification",
    "NsippSetAllParameters",
    "NsippSetAllPersistentParametersWithMask",
    "NsippSetParameter",
    "NsippUnload",
    "PfnIoCreateDeviceSecure",
    "PiRegStateDiscriptor",
    "PiRegStateOpenClassKey",
    "PiRegStateReadStackCreationSettingsFromKey",
    "PiRegStateSysAllInherittedSecurityDescriptor",
    "PpRegStateReadCreateClassCreationSettings",
    "PpRegStateUpdateStackCreationSettings",
    "SeUtilSecurityInfoFromSecurityDescriptor",
    "SepSddlAddAceToAcl",
    "SepSddlDaclFromSDDLString",
    "SepSddlGetAclForString",
    "SepSddlGetSidForString",
    "SepSddlLookupAccessMaskInTable",
    "SepSddlParseWideStringUlong",
    "SepSddlSecurityDescriptorFromSDDLString",
    "WdmlibInit",
    "WdmlibInitialized",
    "WdmlibIoCreateDeviceSecure",
    "WdmlibRtlInitUnicodeStringEx",
    "__@@_PchSym_@00@KxulyqvxgPillgKxunrmrlUmvgrlUmhrUpvimvoUkilcbUlyquivUznwGEUmhrkkOlyq@nsiproxy",
    "__C_specific_handler",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__IMPORT_DESCRIPTOR_NDIS",
    "__IMPORT_DESCRIPTOR_NETIO",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_ExAllocatePoolWithQuotaTag",
    "__imp_ExAllocatePoolWithTag",
    "__imp_ExFreePoolWithTag",
    "__imp_ExRaiseAccessViolation",
    "__imp_IoAcquireCancelSpinLock",
    "__imp_IoAllocateWorkItem",
    "__imp_IoCreateDevice",
    "__imp_IoCreateSymbolicLink",
    "__imp_IoDeleteDevice",
    "__imp_IoDeleteSymbolicLink",
    "__imp_IoDeviceObjectType",
    "__imp_IoFreeWorkItem",
    "__imp_IoGetFileObjectGenericMapping",
    "__imp_IoIs32bitProcess",
    "__imp_IoIsWdmVersionAvailable",
    "__imp_IoQueueWorkItem",
    "__imp_IoReleaseCancelSpinLock",
    "__imp_IofCompleteRequest",
    "__imp_KeAcquireSpinLockAtDpcLevel",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeInitializeEvent",
    "__imp_KeInitializeSpinLock",
    "__imp_KeReleaseSpinLock",
    "__imp_KeReleaseSpinLockFromDpcLevel",
    "__imp_KeSetEvent",
    "__imp_KeWaitForSingleObject",
    "__imp_MmGetSystemRoutineAddress",
    "__imp_MmUserProbeAddress",
    "__imp_NdisGetThreadObjectCompartmentId",
    "__imp_NsiDeregisterChangeNotificationEx",
    "__imp_NsiEnumerateObjectsAllParametersEx",
    "__imp_NsiEnumerateObjectsAllPersistentParametersWithMask",
    "__imp_NsiGetAllParametersEx",
    "__imp_NsiGetAllPersistentParametersWithMask",
    "__imp_NsiGetModuleHandle",
    "__imp_NsiGetParameterEx",
    "__imp_NsiRegisterChangeNotificationEx",
    "__imp_NsiSetAllParametersEx",
    "__imp_NsiSetAllPersistentParametersWithMask",
    "__imp_NsiSetParameterEx",
    "__imp_ObGetObjectSecurity",
    "__imp_ObOpenObjectByPointer",
    "__imp_ObReleaseObjectSecurity",
    "__imp_ProbeForWrite",
    "__imp_PsGetCurrentProcess",
    "__imp_RtlAbsoluteToSelfRelativeSD",
    "__imp_RtlAddAccessAllowedAce",
    "__imp_RtlCreateAcl",
    "__imp_RtlCreateSecurityDescriptor",
    "__imp_RtlFreeUnicodeString",
    "__imp_RtlGetDaclSecurityDescriptor",
    "__imp_RtlGetGroupSecurityDescriptor",
    "__imp_RtlGetOwnerSecurityDescriptor",
    "__imp_RtlGetSaclSecurityDescriptor",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlInitializeSid",
    "__imp_RtlLengthRequiredSid",
    "__imp_RtlLengthSecurityDescriptor",
    "__imp_RtlLengthSid",
    "__imp_RtlSetDaclSecurityDescriptor",
    "__imp_RtlSubAuthoritySid",
    "__imp_SeAccessCheck",
    "__imp_SeCaptureSecurityDescriptor",
    "__imp_SeCaptureSubjectContextEx",
    "__imp_SeConvertStringSecurityDescriptorToSecurityDescriptor",
    "__imp_SeExports",
    "__imp_SeLockSubjectContext",
    "__imp_SeReleaseSubjectContext",
    "__imp_SeUnlockSubjectContext",
    "__imp_ZwClose",
    "__imp_ZwCreateKey",
    "__imp_ZwOpenKey",
    "__imp_ZwQueryValueKey",
    "__imp_ZwSetSecurityObject",
    "__imp_ZwSetValueKey",
    "__imp___C_specific_handler",
    "__imp__snwprintf",
    "__imp__wcsnicmp",
    "__imp_wcschr",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "memcmp",
    "memcpy",
    "memmove",
    "memset",
    "\u007fNDIS_NULL_THUNK_DATA",
    "\u007fNETIO_NULL_THUNK_DATA",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}