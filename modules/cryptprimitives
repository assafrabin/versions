{
  "symbols": [
    "??_C@_02FLHDKHAB@hr?$AA@",
    "??_C@_04HIBGFPH@NULL?$AA@",
    "??_C@_06DJIHEMFI@status?$AA@",
    "??_C@_06PGDKHFME@Status?$AA@",
    "??_C@_07HNMNMMHJ@?$AG?$AF?$CL?$AO?$AD?$AC?$BK?$AA@",
    "??_C@_08OCLNAKPD@NTE_FAIL?$AA@",
    "??_C@_09GKOEPDAC@?$AG?$AF?$CL?$AO?$AD?$AC?$BK?$AF?$AA?$AA@",
    "??_C@_0BA@KCAHHFDJ@ecvp_dsa?5pubkey?$AA@",
    "??_C@_0BB@NKBGLBFK@STATUS_NO_MEMORY?$AA@",
    "??_C@_0BD@CMDAHBGJ@ecc_point_on_curve?$AA@",
    "??_C@_0BF@HMOLCHII@ERROR_INTERNAL_ERROR?$AA@",
    "??_C@_0BK@LNPCEGJA@GetSeedFromIumKernelState?$AA@",
    "??_C@_0BO@CAMHFNIB@GetFipsModeFromIumKernelState?$AA@",
    "??_C@_0DA@DGFCILKD@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DA@GMJHFILN@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DA@MGHCPNPB@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DC@MAFAKNGB@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DE@CFHFFGFI@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DF@JFJJKFPD@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DF@PFBCMCEO@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DG@DJMLOCCF@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DG@MGGGFAJC@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DG@MGPEPCAM@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DG@NAPNDKCF@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DH@DLOLNNAB@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DH@NICEJPOP@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DI@BPBILKHH@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DJ@KHPFPMCE@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DM@CMNDCODL@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DN@HLFACPJI@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DN@KEJHJBBD@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DO@JCLGAMGM@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DO@KKFBAOEJ@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DO@MMNEGDNM@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0DP@GJGKEPFK@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0EB@BOKAELLD@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0EB@DNMLMPJI@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0EK@CMAHMFCL@onecore?2ds?2security?2cryptoapi?2nc@",
    "??_C@_0L@CEBBPIKE@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF?$AA@",
    "??_C@_0L@DNAKMJOF@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AE?$AA@",
    "??_C@_0L@GLFAGOGD@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AC?$AA@",
    "??_C@_0M@CJJJLON@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB?$AA@",
    "??_C@_0M@CJLEMICO@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC?$AA@",
    "??_C@_0M@DAKPPJGP@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD?$AA@",
    "??_C@_0N@HPMGOFDJ@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF?$AF?$AA?$AA@",
    "??_C@_0N@MHHKICFM@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AE?$AF?$AA?$AA@",
    "??_C@_0N@OCBBNNIA@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AC?$AF?$AA?$AA@",
    "??_C@_0O@CAMPMPJE@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD?$AF?$AA?$AA@",
    "??_C@_0O@IKMGAHBP@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB?$AF?$AA?$AA@",
    "??_C@_0O@JIHDKIPB@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC?$AF?$AA?$AA@",
    "??_C@_15IEFEGGPE@?$AAD?$AAH?$AA?$AA@",
    "??_C@_15IIAMFFIG@?$AAI?$AAV?$AA?$AA@",
    "??_C@_17CEGMJBCM@?$AAR?$AAS?$AAA?$AA?$AA@",
    "??_C@_17FODAJMMF@?$AAR?$AAC?$AA2?$AA?$AA@",
    "??_C@_17HLFLMDBJ@?$AAR?$AAC?$AA4?$AA?$AA@",
    "??_C@_17HLHJLHED@?$AAM?$AAD?$AA5?$AA?$AA@",
    "??_C@_17JOLIKJIA@?$AAD?$AAS?$AAA?$AA?$AA@",
    "??_C@_17LBCHNHBC@?$AAD?$AAE?$AAS?$AA?$AA@",
    "??_C@_17LOEPNPLF@?$AAR?$AAN?$AAG?$AA?$AA@",
    "??_C@_17MDMFNACG@?$AAM?$AAD?$AA4?$AA?$AA@",
    "??_C@_17OGKOIPPK@?$AAM?$AAD?$AA2?$AA?$AA@",
    "??_C@_17PJMHNJHG@?$AAA?$AAE?$AAS?$AA?$AA@",
    "??_C@_19CIJIHAKK@?$AAN?$AAU?$AAL?$AAL?$AA?$AA@",
    "??_C@_19DILNDFJH@?$AAS?$AAH?$AAA?$AA1?$AA?$AA@",
    "??_C@_19GOCFCJPL@?$AAH?$AAM?$AAA?$AAC?$AA?$AA@",
    "??_C@_19GOPKKBMO@?$AAD?$AAE?$AAS?$AAX?$AA?$AA@",
    "??_C@_19JJNKGML@?$AAE?$AAC?$AAD?$AAH?$AA?$AA@",
    "??_C@_19KAJFBICF@?$AAH?$AAA?$AAS?$AAH?$AA?$AA@",
    "??_C@_19LEELFJDG@?$AA3?$AAD?$AAE?$AAS?$AA?$AA@",
    "??_C@_1BA@EPFFOHL@?$AAX?$AAT?$AAS?$AA?9?$AAA?$AAE?$AAS?$AA?$AA@",
    "??_C@_1BA@MNIFFOHH@?$AAT?$AAL?$AAS?$AA_?$AAP?$AAR?$AAF?$AA?$AA@",
    "??_C@_1BA@NPJPKIM@?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@",
    "??_C@_1BC@BGEMHNMH@?$AAn?$AAi?$AAs?$AAt?$AAP?$AA3?$AA8?$AA4?$AA?$AA@",
    "??_C@_1BC@EGGGKHBE@?$AAn?$AAi?$AAs?$AAt?$AAP?$AA5?$AA2?$AA1?$AA?$AA@",
    "??_C@_1BC@HHLBCJHC@?$AAR?$AAS?$AAA?$AA_?$AAS?$AAI?$AAG?$AAN?$AA?$AA@",
    "??_C@_1BC@HLHNFODP@?$AAn?$AAi?$AAs?$AAt?$AAP?$AA2?$AA2?$AA4?$AA?$AA@",
    "??_C@_1BC@JJAOHLOL@?$AAT?$AAR?$AAU?$AAN?$AAC?$AAA?$AAT?$AAE?$AA?$AA@",
    "??_C@_1BC@LKFOPGMD@?$AAn?$AAi?$AAs?$AAt?$AAP?$AA1?$AA9?$AA2?$AA?$AA@",
    "??_C@_1BC@MHLDAMHA@?$AAA?$AAE?$AAS?$AA?9?$AAG?$AAM?$AAA?$AAC?$AA?$AA@",
    "??_C@_1BC@MMHBKGAM@?$AAn?$AAi?$AAs?$AAt?$AAP?$AA2?$AA5?$AA6?$AA?$AA@",
    "??_C@_1BC@MOFIKMAK@?$AAA?$AAE?$AAS?$AA?9?$AAC?$AAM?$AAA?$AAC?$AA?$AA@",
    "??_C@_1BC@NEGGPAMC@?$AAC?$AAA?$AAP?$AAI?$AA_?$AAK?$AAD?$AAF?$AA?$AA@",
    "??_C@_1BC@OBELMIOB@?$AA3?$AAD?$AAE?$AAS?$AA_?$AA1?$AA1?$AA2?$AA?$AA@",
    "??_C@_1BE@BLMFOOJL@?$AAs?$AAe?$AAc?$AAP?$AA2?$AA2?$AA4?$AAk?$AA1?$AA?$AA@",
    "??_C@_1BE@BONDBNND@?$AAe?$AAc?$AA1?$AA9?$AA2?$AAw?$AAa?$AAp?$AAi?$AA?$AA@",
    "??_C@_1BE@DGEFKCD@?$AAs?$AAe?$AAc?$AAP?$AA5?$AA2?$AA1?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@DPBMLNMI@?$AAs?$AAe?$AAc?$AAP?$AA2?$AA2?$AA4?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@FCNEMOBL@?$AAs?$AAe?$AAc?$AAP?$AA1?$AA9?$AA2?$AAk?$AA1?$AA?$AA@",
    "??_C@_1BE@FGBADLPC@?$AAK?$AAe?$AAy?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1BE@FNCFBHFO@?$AAE?$AAC?$AAD?$AAH?$AA_?$AAP?$AA3?$AA8?$AA4?$AA?$AA@",
    "??_C@_1BE@HGANJNEI@?$AAs?$AAe?$AAc?$AAP?$AA1?$AA9?$AA2?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@IHBIMMJF@?$AAE?$AAC?$AAD?$AAH?$AA_?$AAP?$AA2?$AA5?$AA6?$AA?$AA@",
    "??_C@_1BE@JPOFKBMM@?$AAs?$AAe?$AAc?$AAP?$AA2?$AA5?$AA6?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@LDJLGBGO@?$AAs?$AAe?$AAc?$AAP?$AA3?$AA8?$AA4?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@LLDMPCJP@?$AAs?$AAe?$AAc?$AAP?$AA2?$AA5?$AA6?$AAk?$AA1?$AA?$AA@",
    "??_C@_1BE@MFCDMBLI@?$AAs?$AAe?$AAc?$AAP?$AA1?$AA6?$AA0?$AAr?$AA1?$AA?$AA@",
    "??_C@_1BE@NAPMNIN@?$AAE?$AAC?$AAD?$AAH?$AA_?$AAP?$AA5?$AA2?$AA1?$AA?$AA@",
    "??_C@_1BE@NHJGGOFG@?$AAs?$AAe?$AAc?$AAP?$AA1?$AA6?$AA0?$AAr?$AA2?$AA?$AA@",
    "??_C@_1BE@OBPKJCOL@?$AAs?$AAe?$AAc?$AAP?$AA1?$AA6?$AA0?$AAk?$AA1?$AA?$AA@",
    "??_C@_1BE@OJGOOAHF@?$AAD?$AAU?$AAA?$AAL?$AAE?$AAC?$AAR?$AAN?$AAG?$AA?$AA@",
    "??_C@_1BG@BCHGKIHP@?$AAn?$AAu?$AAm?$AAs?$AAP?$AA2?$AA5?$AA6?$AAt?$AA1?$AA?$AA@",
    "??_C@_1BG@DAALJHBJ@?$AAT?$AAL?$AAS?$AA1?$AA_?$AA2?$AA_?$AAK?$AAD?$AAF?$AA?$AA@",
    "??_C@_1BG@DHGBBHDO@?$AAP?$AAr?$AAi?$AAv?$AAK?$AAe?$AAy?$AAV?$AAa?$AAl?$AA?$AA@",
    "??_C@_1BG@DOAIGINN@?$AAn?$AAu?$AAm?$AAs?$AAP?$AA3?$AA8?$AA4?$AAt?$AA1?$AA?$AA@",
    "??_C@_1BG@EDNMAGPK@?$AAM?$AAD?$AAM?$AAE?$AAn?$AAa?$AAb?$AAl?$AAe?$AAd?$AA?$AA@",
    "??_C@_1BG@EHJFEFOJ@?$AAT?$AAL?$AAS?$AA1?$AA_?$AA1?$AA_?$AAK?$AAD?$AAF?$AA?$AA@",
    "??_C@_1BG@ENBCHBDA@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA2?$AA3?$AA9?$AAv?$AA2?$AA?$AA@",
    "??_C@_1BG@FPKHNONO@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA2?$AA3?$AA9?$AAv?$AA1?$AA?$AA@",
    "??_C@_1BG@GCHBIALB@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA1?$AA9?$AA2?$AAv?$AA1?$AA?$AA@",
    "??_C@_1BG@HAMECPFP@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA1?$AA9?$AA2?$AAv?$AA2?$AA?$AA@",
    "??_C@_1BG@HBKGJMOF@?$AAE?$AAC?$AAD?$AAS?$AAA?$AA_?$AAP?$AA2?$AA5?$AA6?$AA?$AA@",
    "??_C@_1BG@HJOCMCND@?$AAc?$AAu?$AAr?$AAv?$AAe?$AA2?$AA5?$AA5?$AA1?$AA9?$AA?$AA@",
    "??_C@_1BG@HPKCIHOF@?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BG@ILJJLMDF@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA2?$AA5?$AA6?$AAv?$AA1?$AA?$AA@",
    "??_C@_1BG@KLJLEHCO@?$AAE?$AAC?$AAD?$AAS?$AAA?$AA_?$AAP?$AA3?$AA8?$AA4?$AA?$AA@",
    "??_C@_1BG@MIHIEIDK@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA1?$AA9?$AA2?$AAv?$AA3?$AA?$AA@",
    "??_C@_1BG@OLEPOPHA@?$AAn?$AAu?$AAm?$AAs?$AAP?$AA5?$AA1?$AA2?$AAt?$AA1?$AA?$AA@",
    "??_C@_1BG@OOALDDHJ@?$AAK?$AAe?$AAy?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AAs?$AA?$AA@",
    "??_C@_1BG@PFKOBGFF@?$AAx?$AA9?$AA6?$AA2?$AAP?$AA2?$AA3?$AA9?$AAv?$AA3?$AA?$AA@",
    "??_C@_1BG@PGIGMDPA@?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BG@PLLBJNPN@?$AAE?$AAC?$AAD?$AAS?$AAA?$AA_?$AAP?$AA5?$AA2?$AA1?$AA?$AA@",
    "??_C@_1BI@CCGJAGHD@?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BI@DDDAFHFK@?$AAH?$AAa?$AAs?$AAh?$AAO?$AAI?$AAD?$AAL?$AAi?$AAs?$AAt?$AA?$AA@",
    "??_C@_1BI@DMBABOCJ@?$AAI?$AAs?$AAK?$AAe?$AAy?$AAe?$AAd?$AAH?$AAa?$AAs?$AAh?$AA?$AA@",
    "??_C@_1BI@HICLDAFN@?$AA?2?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?2?$AAC?$AAN?$AAG?$AA?$AA@",
    "??_C@_1BI@HLPJMFNK@?$AAK?$AAe?$AAy?$AAS?$AAt?$AAr?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1BI@JJDKEEML@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1BI@LGNMLKEH@?$AAi?$AAu?$AAm?$AAb?$AAa?$AAs?$AAe?$AA?4?$AAd?$AAl?$AAl?$AA?$AA@",
    "??_C@_1BI@NNGJONND@?$AAK?$AAe?$AAy?$AAD?$AAa?$AAt?$AAa?$AAB?$AAl?$AAo?$AAb?$AA?$AA@",
    "??_C@_1BK@BCJKEJJO@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AA?$AA@",
    "??_C@_1BK@GCPILPMB@?$AAD?$AAH?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BK@GEFOMDOG@?$AAD?$AAh?$AAQ?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AA?$AA@",
    "??_C@_1BK@GPNIFMAA@?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1BK@LNENCKNM@?$AAE?$AAC?$AAC?$AAC?$AAu?$AAr?$AAv?$AAe?$AAN?$AAa?$AAm?$AAe?$AA?$AA@",
    "??_C@_1BK@OLNMPLNE@?$AAD?$AAH?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BM@BJJGGDHH@?$AAR?$AAS?$AAA?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BM@EIBLDFCE@?$AAB?$AAl?$AAo?$AAc?$AAk?$AAS?$AAi?$AAz?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$AA@",
    "??_C@_1BM@GMOELGKK@?$AAA?$AAl?$AAg?$AAo?$AAr?$AAi?$AAt?$AAh?$AAm?$AAN?$AAa?$AAm?$AAe?$AA?$AA@",
    "??_C@_1BM@HFKJNGID@?$AAE?$AAC?$AAC?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BM@HHFLMOJ@?$AAD?$AAS?$AAA?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BM@HNKOKJLO@?$AAF?$AAI?$AAP?$AAS?$AA1?$AA8?$AA6?$AAD?$AAS?$AAA?$AAR?$AAN?$AAG?$AA?$AA@",
    "??_C@_1BM@IOFBPIPM@?$AAD?$AAS?$AAA?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BM@IONODPC@?$AAO?$AAp?$AAa?$AAq?$AAu?$AAe?$AAK?$AAe?$AAy?$AAB?$AAl?$AAo?$AAb?$AA?$AA@",
    "??_C@_1BM@PLIDECBB@?$AAD?$AAH?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BM@PMINJCJG@?$AAE?$AAC?$AAC?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BM@PNAKGHPG@?$AAA?$AAu?$AAt?$AAh?$AAT?$AAa?$AAg?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1BO@DPNHNIIM@?$AAD?$AAS?$AAA?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BO@GIOLPOFC@?$AAI?$AAs?$AAR?$AAe?$AAu?$AAs?$AAa?$AAb?$AAl?$AAe?$AAH?$AAa?$AAs?$AAh?$AA?$AA@",
    "??_C@_1BO@KDHHGEPN@?$AAP?$AAa?$AAd?$AAd?$AAi?$AAn?$AAg?$AAS?$AAc?$AAh?$AAe?$AAm?$AAe?$AAs?$AA?$AA@",
    "??_C@_1BO@MGHJKOLO@?$AAR?$AAS?$AAA?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1BO@NKCKBDL@?$AAE?$AAC?$AAC?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1CA@CEHBGPJC@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA2?$AA2?$AA4?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@CMJOPBMK@?$AAH?$AAa?$AAs?$AAh?$AAB?$AAl?$AAo?$AAc?$AAk?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CA@DLJOCNAH@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA3?$AA2?$AA0?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@FCNBJAIL@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA2?$AA5?$AA6?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@FGJFGDLB@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAN?$AA?1?$AAA?$AA?$AA@",
    "??_C@_1CA@GGHMBPCI@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAE?$AAC?$AAB?$AA?$AA@",
    "??_C@_1CA@GNGAEPBC@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA1?$AA9?$AA2?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@HMDKAIAD@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAG?$AAC?$AAM?$AA?$AA@",
    "??_C@_1CA@HNLBDEJJ@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA5?$AA1?$AA2?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@HOKPFACJ@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA3?$AA8?$AA4?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@IBHPAPP@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA1?$AA6?$AA0?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@IEIIHDJG@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA2?$AA5?$AA6?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@KIPGLDDE@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA3?$AA8?$AA4?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@KLOINHIE@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA5?$AA1?$AA2?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@LLDJKMAP@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA1?$AA9?$AA2?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@NDPDKCGP@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAC?$AAB?$AAC?$AA?$AA@",
    "??_C@_1CA@NOEOBDOC@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA1?$AA6?$AA0?$AAt?$AA1?$AA?$AA@",
    "??_C@_1CA@OBDAGJIG@?$AAS?$AAi?$AAg?$AAn?$AAa?$AAt?$AAu?$AAr?$AAe?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CA@ONMHMOBK@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA3?$AA2?$AA0?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@PAHHMOMA@?$AAP?$AAu?$AAb?$AAl?$AAi?$AAc?$AAK?$AAe?$AAy?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CA@PANOIHBM@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAC?$AAF?$AAB?$AA?$AA@",
    "??_C@_1CA@PCCIIMIP@?$AAb?$AAr?$AAa?$AAi?$AAn?$AAp?$AAo?$AAo?$AAl?$AAP?$AA2?$AA2?$AA4?$AAr?$AA1?$AA?$AA@",
    "??_C@_1CA@PIHAAGPJ@?$AAC?$AAh?$AAa?$AAi?$AAn?$AAi?$AAn?$AAg?$AAM?$AAo?$AAd?$AAe?$AAC?$AAC?$AAM?$AA?$AA@",
    "??_C@_1CC@DMMMEHOM@?$AAH?$AAa?$AAs?$AAh?$AAD?$AAi?$AAg?$AAe?$AAs?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CC@EDCHMEIM@?$AAE?$AAC?$AAC?$AAC?$AAu?$AAr?$AAv?$AAe?$AAN?$AAa?$AAm?$AAe?$AAL?$AAi?$AAs?$AAt?$AA?$AA@",
    "??_C@_1CC@MMGMOOPO@?$AAS?$AAP?$AA8?$AA0?$AA0?$AA_?$AA5?$AA6?$AAA?$AA_?$AAC?$AAO?$AAN?$AAC?$AAA?$AAT?$AA?$AA@",
    "??_C@_1CE@KCKPAMHI@?$AAE?$AAC?$AAC?$AAF?$AAU?$AAL?$AAL?$AAP?$AAU?$AAB?$AAL?$AAI?$AAC?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1CE@PIIJDGMM@?$AAM?$AAu?$AAl?$AAt?$AAi?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CG@BCLLFFNM@?$AAS?$AAe?$AAl?$AAf?$AAT?$AAe?$AAs?$AAt?$AAA?$AAl?$AAg?$AAo?$AAr?$AAi?$AAt?$AAh?$AAm?$AAs?$AA?$AA@",
    "??_C@_1CG@GKFGHMMK@?$AAS?$AAP?$AA8?$AA0?$AA0?$AA_?$AA1?$AA0?$AA8?$AA_?$AAC?$AAT?$AAR?$AA_?$AAH?$AAM?$AAA?$AAC?$AA?$AA@",
    "??_C@_1CG@HHCKKMCI@?$AAR?$AAf?$AAc?$AA3?$AA5?$AA6?$AA5?$AAK?$AAe?$AAy?$AAW?$AAr?$AAa?$AAp?$AAB?$AAl?$AAo?$AAb?$AA?$AA@",
    "??_C@_1CG@JKHJNPKD@?$AAE?$AAf?$AAf?$AAe?$AAc?$AAt?$AAi?$AAv?$AAe?$AAK?$AAe?$AAy?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CG@JMOMHFIB@?$AAE?$AAC?$AAC?$AAF?$AAU?$AAL?$AAL?$AAP?$AAR?$AAI?$AAV?$AAA?$AAT?$AAE?$AAB?$AAL?$AAO?$AAB?$AA?$AA@",
    "??_C@_1CG@ONBEMBCH@?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AAB?$AAl?$AAo?$AAc?$AAk?$AAL?$AAe?$AAn?$AAg?$AAt?$AAh?$AA?$AA@",
    "??_C@_1CI@FGKEIGLD@?$AAF?$AAi?$AAp?$AAs?$AAA?$AAl?$AAg?$AAo?$AAr?$AAi?$AAt?$AAh?$AAm?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?$AA@",
    "??_C@_1CK@EALPIICH@?$AAS?$AAe?$AAc?$AAr?$AAe?$AAt?$AAA?$AAg?$AAr?$AAe?$AAe?$AAm?$AAe?$AAn?$AAt?$AAP?$AAa?$AAr?$AAa?$AAm?$AA?$AA@",
    "??_C@_1DK@HJHMGPGD@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAP?$AAr?$AAi?$AAm?$AAi?$AAt?$AAi?$AAv?$AAe?$AA?5?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@",
    "??_C@_1GO@BNNKBEEN@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi?$AAn?$AAe?$AA?2?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt@",
    "??_C@_1HI@KLHHGBAG@?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AAS?$AAe?$AAt?$AA?2?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl@",
    "??_C@_1JG@MJIPHKMM@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi?$AAn?$AAe?$AA?2?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt@",
    "??_C@_1LC@JHMCANEA@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi?$AAn?$AAe?$AA?2?$AAS?$AAY?$AAS?$AAT?$AAE?$AAM?$AA?2?$AAC?$AAu?$AAr?$AAr?$AAe?$AAn?$AAt@",
    "??_C@_1M@EMFEHOIK@?$AAw?$AAt?$AAl?$AAs?$AA7?$AA?$AA@",
    "??_C@_1M@FNACMMMF@?$AAE?$AAC?$AAD?$AAS?$AAA?$AA?$AA@",
    "??_C@_1M@KMILAJLJ@?$AAw?$AAt?$AAl?$AAs?$AA9?$AA?$AA@",
    "??_C@_1O@BMNGGMBC@?$AA?$CF?$AA?$CF?$AA?$CF?$AA?$CF?$AA?$CF?$AAd?$AA?$AA@",
    "??_C@_1O@GKBAHMNF@?$AAS?$AAH?$AAA?$AA5?$AA1?$AA2?$AA?$AA@",
    "??_C@_1O@HECGKAIN@?$AAS?$AAH?$AAA?$AA2?$AA5?$AA6?$AA?$AA@",
    "??_C@_1O@JNLJINNB@?$AAP?$AAB?$AAK?$AAD?$AAF?$AA2?$AA?$AA@",
    "??_C@_1O@KOBLHLEG@?$AAS?$AAH?$AAA?$AA3?$AA8?$AA4?$AA?$AA@",
    "??_C@_1O@PKKKLDJJ@?$AAw?$AAt?$AAl?$AAs?$AA1?$AA2?$AA?$AA@",
    "?StringCchPrintfW@@YAJPEAG_KPEBGZZ",
    "AesCbc",
    "AesCcm",
    "AesCfb",
    "AesEcb",
    "AesGcmFn",
    "AesRNGState_generate",
    "AesRNGState_init",
    "AesRNGState_reseed",
    "AesRNGState_root_reseed",
    "AesRNGState_select",
    "AesRNGState_wipe",
    "AlgorithmCheck",
    "AllocateGenericEccKey",
    "AssignGenericDomainParameters",
    "AssignPrimeDomainParameters",
    "BCryptFree",
    "BCryptGetFipsAlgorithmMode",
    "BCryptPrimitivesAuditFailure",
    "BCryptPrimitivesAuditSuccess",
    "BignumSwapDigitsConditional",
    "ConvertFromBytesToDigitsModP",
    "ConvertFromDigitsModPToBytes",
    "CreateAndInitializeNewKey",
    "Curve25519GenPrivKey",
    "DSA_FIPS186_3_C1_iterations",
    "DSA_build_fullkey_ex",
    "DSA_check_g",
    "DSA_convert_pgy",
    "DSA_exponentiator_default",
    "DSA_gen_x",
    "DSA_gen_x_and_y",
    "DSA_key_generation_ex",
    "DSA_parameter_verification_ex",
    "DSA_sign_ex",
    "DSA_signature_verification_ex",
    "DebugTraceError",
    "DeriveKeyCAPI_KDF",
    "DeriveKeyPBKDF2",
    "DeriveKeySP800108_CTR_HMAC",
    "DeriveKeySP80056A_CONCAT",
    "DeriveKeyTLS_KDF",
    "DesCbc",
    "DesCfb",
    "DesEcb",
    "DesxCbc",
    "DesxCfb",
    "DesxEcb",
    "DhGenDhPrivKeyFromTemplate",
    "DhMatchParameters",
    "DhPairWiseCheck",
    "DllMain",
    "DsaSignAndVerify",
    "EmergencyRng",
    "EnumerateAndHashBufferType",
    "ExportEccKeyBlobWithParameters",
    "ExportEccKeyBlobWithoutParameters",
    "ExportLittleModularDigitToBigBytes",
    "ExportV1KeyBlob",
    "ExportV2KeyBlob",
    "FE2IP",
    "Fips186_3GenEccPrivExpon",
    "FreeGenericEccKeyParameters",
    "GenRandomAes",
    "Generate_PrivateKey",
    "GetAsymmetricEncryptionInterface",
    "GetCipherInterface",
    "GetCngHandle",
    "GetCurveNameList",
    "GetDHGroupParam",
    "GetGenericEccParametersFromCurve",
    "GetHashInterface",
    "GetKeyBitLength",
    "GetKeyDerivationInterface",
    "GetKeyMagicForAlgId",
    "GetPtrPtrToPerCpuState",
    "GetRngInterface",
    "GetRsaProperty",
    "GetSecretAgreementInterface",
    "GetSeedFromKernelState",
    "GetSignatureInterface",
    "ImportBigBytesToLittleModularDigit",
    "ImportDHKeyPairWithCheck",
    "ImportEccKeyBlobWithParameters",
    "ImportEccKeyBlobWithoutParameters",
    "ImportLittleModulusToKey",
    "ImportV1KeyBlob",
    "ImportV2KeyBlob",
    "InitUmRootRngState",
    "InsideVsm",
    "InternalVerifyStackAvailable",
    "IsAllZeros",
    "IsDsaKeyPrivate",
    "IsDsaV2KeyBlob",
    "IsModulusCreated",
    "IsSelfTestEnabled",
    "KdfRouterMapping",
    "Kequaler_default",
    "Kfdesc_initialize",
    "Kfree",
    "Kfrobenius_default",
    "Kimmediate",
    "Kinitialize_prime",
    "Kinvert",
    "Kinvert_many",
    "Kiszeroer_default",
    "Kmul_many",
    "Kmuladd",
    "Kmulsub",
    "Ksquare_default",
    "Kzeroizer_default",
    "LoadCurve",
    "LoadCurveInUserMode",
    "LookupHashFunction",
    "MSBlockDecrypt",
    "MSBlockEncrypt",
    "MSCipherFunctionTable",
    "MSCryptAesKeyUnwrap",
    "MSCryptAesKeyWrap",
    "MSCryptAlloc",
    "MSCryptAuditCheckSecureZero",
    "MSCryptAuditPrimitiveFailure",
    "MSCryptCloseDHProvider",
    "MSCryptCloseHashProvider",
    "MSCryptCloseRngProvider",
    "MSCryptCloseRsaProvider",
    "MSCryptCloseSymmetricProvider",
    "MSCryptCreateHash",
    "MSCryptCreateMultiHash",
    "MSCryptCreateSecret",
    "MSCryptDHSP80056AConCatKDFTest",
    "MSCryptDHSecretAgreement",
    "MSCryptDecrypt",
    "MSCryptDeriveKey",
    "MSCryptDestroyDHKeyPair",
    "MSCryptDestroyHash",
    "MSCryptDestroyKey",
    "MSCryptDestroyKeyPair",
    "MSCryptDestroySecret",
    "MSCryptDsaCloseProvider",
    "MSCryptDsaDestroyKeyPair",
    "MSCryptDsaExportKeyPair",
    "MSCryptDsaFinalizeKeyPair",
    "MSCryptDsaGenerateKeyPair",
    "MSCryptDsaGetAlgProperty",
    "MSCryptDsaGetKeyPairProperty",
    "MSCryptDsaGetProperty",
    "MSCryptDsaImportKeyPair",
    "MSCryptDsaOpenProvider",
    "MSCryptDsaSetKeyPairProperty",
    "MSCryptDsaSetProperty",
    "MSCryptDsaSignHash",
    "MSCryptDsaVerifySignature",
    "MSCryptDuplicateHash",
    "MSCryptDuplicateKey",
    "MSCryptECDHSP80056AConCatKDFTest",
    "MSCryptEcDhCloseProvider",
    "MSCryptEcDhDestroyKeyPair",
    "MSCryptEcDhExportKeyPair",
    "MSCryptEcDhFinalizeKeyPair",
    "MSCryptEcDhGenerateKeyPair",
    "MSCryptEcDhGetProperty",
    "MSCryptEcDhImportKeyPair",
    "MSCryptEcDhOpenProvider",
    "MSCryptEcDhSecretAgreement",
    "MSCryptEcDhSetProperty",
    "MSCryptEcDsaCloseProvider",
    "MSCryptEcDsaDestroyKeyPair",
    "MSCryptEcDsaExportKeyPair",
    "MSCryptEcDsaFinalizeKeyPair",
    "MSCryptEcDsaGenerateKeyPair",
    "MSCryptEcDsaGetProperty",
    "MSCryptEcDsaImportKeyPair",
    "MSCryptEcDsaOpenProvider",
    "MSCryptEcDsaSetProperty",
    "MSCryptEcDsaSignHash",
    "MSCryptEcDsaVerifySignature",
    "MSCryptEccCloseProvider",
    "MSCryptEccDestroyKeyPair",
    "MSCryptEccExportKeyPair",
    "MSCryptEccFinalizeKeyPair",
    "MSCryptEccGenerateKeyPair",
    "MSCryptEccGetAlgProperty",
    "MSCryptEccGetKeyProperty",
    "MSCryptEccGetProperty",
    "MSCryptEccImportKeyPair",
    "MSCryptEccOpenProvider",
    "MSCryptEccSetAlgProperty",
    "MSCryptEccSetKeyProperty",
    "MSCryptEccSetProperty",
    "MSCryptEncrypt",
    "MSCryptExportDHKeyPair",
    "MSCryptExportKey",
    "MSCryptExportKeyOpaque",
    "MSCryptExportKeyPair",
    "MSCryptFinalizeDHKeyPair",
    "MSCryptFinalizeKeyPair",
    "MSCryptFinishHash",
    "MSCryptFree",
    "MSCryptGenRandom",
    "MSCryptGenerateDHKeyPair",
    "MSCryptGenerateKeyPair",
    "MSCryptGenerateSymmetricKey",
    "MSCryptGetAlgProperty",
    "MSCryptGetDHAlgProperty",
    "MSCryptGetDHKeyPairProperty",
    "MSCryptGetDHProperty",
    "MSCryptGetHashProperty",
    "MSCryptGetKeyData",
    "MSCryptGetKeyProperty",
    "MSCryptGetProperty",
    "MSCryptGetRngProperty",
    "MSCryptGetRsaProperty",
    "MSCryptGetRsaSignProperty",
    "MSCryptHashData",
    "MSCryptHashDataInternal",
    "MSCryptHashResultInternal",
    "MSCryptImportDHKeyPair",
    "MSCryptImportKey",
    "MSCryptImportKeyOpaque",
    "MSCryptImportKeyPair",
    "MSCryptKDCloseProvider",
    "MSCryptKDDestroyKey",
    "MSCryptKDDuplicateKey",
    "MSCryptKDExportKey",
    "MSCryptKDF_HASH",
    "MSCryptKDF_HMAC",
    "MSCryptKDF_SP800_56A",
    "MSCryptKDF_TLS_PRF",
    "MSCryptKDF_TRUNCATE",
    "MSCryptKDGenerateSymmetricKey",
    "MSCryptKDGetAlgProperty",
    "MSCryptKDGetKeyProperty",
    "MSCryptKDGetProperty",
    "MSCryptKDImportKey",
    "MSCryptKDKeyDerivation",
    "MSCryptKDOpenProvider",
    "MSCryptKDSetProperty",
    "MSCryptOpenDHProvider",
    "MSCryptOpenHashProvider",
    "MSCryptOpenRngProvider",
    "MSCryptOpenRsaProvider",
    "MSCryptOpenSymmetricProvider",
    "MSCryptProcessMultiHashOperations",
    "MSCryptRsaDecrypt",
    "MSCryptRsaEncrypt",
    "MSCryptRsaPairWiseCheck",
    "MSCryptRsaSignHash",
    "MSCryptRsaVerifySignature",
    "MSCryptSetAlgProperty",
    "MSCryptSetDHKeyPairProperty",
    "MSCryptSetDHProperty",
    "MSCryptSetHashProperty",
    "MSCryptSetKeyProperty",
    "MSCryptSetProperty",
    "MSCryptSetRngProperty",
    "MSCryptSetRsaProperty",
    "MSCryptValidateSecret",
    "MSCryptValidateSecretHandle",
    "MSDHSecretAgreementTable",
    "MSDsaSignFunctionTable",
    "MSECDHSecretAgreementTable",
    "MSEcDsaSignFunctionTable",
    "MSHashFunctionTable",
    "MSKeyDerivationFunctionTable",
    "MSRngFunctionTable",
    "MSRsaEncryptFunctionTable",
    "MSRsaSignatureFunctionTable",
    "MapBignumErrnoToStatus",
    "ModularMultiplication_amd64_asm",
    "ModularMultiplication_amd64_asm_1024",
    "ModularMultiplication_amd64_asm_256",
    "MontgomeryDoubleAndAdd",
    "MontgomeryPointMultiply",
    "MsCryptApplyEncryptionPadding",
    "MsCryptApplyOAEPPaddingSeeded",
    "MsCryptApplyPKCS1SigningFormat",
    "MsCryptApplyPSSPaddingSalted",
    "MsCryptApplySignaturePadding",
    "MsCryptCheckEncryptionPadding",
    "MsCryptCheckOAEPPadding",
    "MsCryptCheckPSSPadding",
    "MsCryptCheckSignaturePadding",
    "MsCryptMaskGeneration",
    "MsCryptVerifyPKCS1SigningFormat",
    "MsProviderStart",
    "MsProviderStop",
    "Multiply_256x256_amd64_asm",
    "NtTerminateProcess",
    "OS2IP",
    "PRF",
    "PairwiseConsistencySecretAgreement",
    "PairwiseConsistencySignature",
    "PrepareScalarAndPointMultiply",
    "ProcessMultiHashOperations",
    "ProcessPrng",
    "ProcessPrngGuid",
    "QueryParameterList",
    "Rc2Cbc",
    "Rc2Cfb",
    "Rc2Ecb",
    "ReverseMemCopy",
    "RtlCaptureContext",
    "RtlLookupFunctionEntry",
    "RtlUnhandledExceptionFilter",
    "RtlVirtualUnwind",
    "SHA1Hash",
    "SHA1HashFunc",
    "SHA256Hash",
    "SHA256HashFunc",
    "SafeAllocaAllocateFromHeap",
    "SafeAllocaFreeToHeap",
    "SafeAllocaInitialize",
    "SelftestReport",
    "SetEccPrivateKeyVal",
    "SetHashFunctionContext",
    "SetKeyPropertiesBasedOnKeyLength",
    "SetParameterV1Format",
    "SetParameterV2Format",
    "SetPrivateKeyVal",
    "StringCbLengthW",
    "StringCchCopyW",
    "SymCrypt3DesBlockCipher_default",
    "SymCrypt3DesDecrypt",
    "SymCrypt3DesEncrypt",
    "SymCrypt3DesExpandKey",
    "SymCrypt3DesSelftest",
    "SymCryptAes4Sbox",
    "SymCryptAesBlockCipherNoOpt",
    "SymCryptAesBlockCipher_Fast",
    "SymCryptAesCbcDecrypt",
    "SymCryptAesCbcDecryptAsm",
    "SymCryptAesCbcDecryptXmm",
    "SymCryptAesCbcEncrypt",
    "SymCryptAesCbcEncryptAsm",
    "SymCryptAesCbcEncryptXmm",
    "SymCryptAesCbcMac",
    "SymCryptAesCbcMacXmm",
    "SymCryptAesCmac",
    "SymCryptAesCmacAlgorithm",
    "SymCryptAesCmacAlgorithm_fast",
    "SymCryptAesCmacAppend",
    "SymCryptAesCmacExpandKey",
    "SymCryptAesCmacInit",
    "SymCryptAesCmacResult",
    "SymCryptAesCmacSelftest",
    "SymCryptAesCtrMsb64",
    "SymCryptAesCtrMsb64Asm",
    "SymCryptAesCtrMsb64Xmm",
    "SymCryptAesDecrypt",
    "SymCryptAesDecryptAsm",
    "SymCryptAesDecryptAsmInternal",
    "SymCryptAesEcbDecrypt",
    "SymCryptAesEcbEncrypt",
    "SymCryptAesEcbEncryptAsm",
    "SymCryptAesEcbEncryptXmm",
    "SymCryptAesEncrypt",
    "SymCryptAesEncryptAsm",
    "SymCryptAesEncryptAsmInternal",
    "SymCryptAesExpandKey",
    "SymCryptAesExpandKeyInternal",
    "SymCryptAesInvMatrixMult",
    "SymCryptAesInvSbox",
    "SymCryptAesInvSboxMatrixMult",
    "SymCryptAesKeyCopy",
    "SymCryptAesNistTestVector128Ciphertext",
    "SymCryptAesSboxMatrixMult",
    "SymCryptAesSelftest",
    "SymCryptCbcDecrypt",
    "SymCryptCbcEncrypt",
    "SymCryptCbcMac",
    "SymCryptCcmAddMacData",
    "SymCryptCcmDecrypt",
    "SymCryptCcmDecryptFinal",
    "SymCryptCcmDecryptPart",
    "SymCryptCcmEncrypt",
    "SymCryptCcmEncryptDecryptPart",
    "SymCryptCcmEncryptFinal",
    "SymCryptCcmEncryptPart",
    "SymCryptCcmInit",
    "SymCryptCcmPadMacData",
    "SymCryptCcmSelftest",
    "SymCryptCfbDecrypt",
    "SymCryptCfbEncrypt",
    "SymCryptCmacMunge",
    "SymCryptCtrMsb64",
    "SymCryptDesBlockCipher_default",
    "SymCryptDesDecrypt",
    "SymCryptDesEncrypt",
    "SymCryptDesExpandKey",
    "SymCryptDesExpandSingleKey",
    "SymCryptDesKeySelect",
    "SymCryptDesSpbox",
    "SymCryptDesxBlockCipher_default",
    "SymCryptDesxDecrypt",
    "SymCryptDesxEncrypt",
    "SymCryptDesxExpandKey",
    "SymCryptDetectCpuFeaturesByCpuid",
    "SymCryptEcbDecrypt",
    "SymCryptEcbEncrypt",
    "SymCryptFatalHang",
    "SymCryptGHashAppendDataC",
    "SymCryptGHashAppendDataPclmulqdq",
    "SymCryptGHashAppendDataXmm",
    "SymCryptGHashExpandKeyC",
    "SymCryptGHashExpandKeyPclmulqdq",
    "SymCryptGcmAddMacData",
    "SymCryptGcmAuthPart",
    "SymCryptGcmComputeTag",
    "SymCryptGcmDecrypt",
    "SymCryptGcmDecryptFinal",
    "SymCryptGcmDecryptPart",
    "SymCryptGcmEncrypt",
    "SymCryptGcmEncryptDecryptPart",
    "SymCryptGcmEncryptFinal",
    "SymCryptGcmEncryptPart",
    "SymCryptGcmExpandKey",
    "SymCryptGcmInit",
    "SymCryptGcmKeyCopy",
    "SymCryptGcmPadMacData",
    "SymCryptGcmSelftest",
    "SymCryptHashAppendInternal",
    "SymCryptHashCommonPaddingMd4Style",
    "SymCryptHmacMd5",
    "SymCryptHmacMd5Algorithm_default",
    "SymCryptHmacMd5Append",
    "SymCryptHmacMd5ExpandKey",
    "SymCryptHmacMd5Init",
    "SymCryptHmacMd5Result",
    "SymCryptHmacMd5StateCopy",
    "SymCryptHmacSha1",
    "SymCryptHmacSha1Algorithm_default",
    "SymCryptHmacSha1Append",
    "SymCryptHmacSha1ExpandKey",
    "SymCryptHmacSha1Init",
    "SymCryptHmacSha1Result",
    "SymCryptHmacSha1Selftest",
    "SymCryptHmacSha1StateCopy",
    "SymCryptHmacSha256",
    "SymCryptHmacSha256Algorithm",
    "SymCryptHmacSha256Algorithm_default",
    "SymCryptHmacSha256Append",
    "SymCryptHmacSha256ExpandKey",
    "SymCryptHmacSha256Init",
    "SymCryptHmacSha256Result",
    "SymCryptHmacSha256Selftest",
    "SymCryptHmacSha256StateCopy",
    "SymCryptHmacSha384Algorithm",
    "SymCryptHmacSha384Algorithm_default",
    "SymCryptHmacSha384Append",
    "SymCryptHmacSha384ExpandKey",
    "SymCryptHmacSha384Init",
    "SymCryptHmacSha384Result",
    "SymCryptHmacSha384StateCopy",
    "SymCryptHmacSha512",
    "SymCryptHmacSha512Algorithm",
    "SymCryptHmacSha512Algorithm_default",
    "SymCryptHmacSha512Append",
    "SymCryptHmacSha512ExpandKey",
    "SymCryptHmacSha512Init",
    "SymCryptHmacSha512Result",
    "SymCryptHmacSha512Selftest",
    "SymCryptHmacSha512StateCopy",
    "SymCryptInitEnvWindowsUsermodeWin8_1nLater",
    "SymCryptMd2Algorithm_default",
    "SymCryptMd2Append",
    "SymCryptMd2AppendBlocks",
    "SymCryptMd2Init",
    "SymCryptMd2Result",
    "SymCryptMd2STable",
    "SymCryptMd4Algorithm_default",
    "SymCryptMd4Append",
    "SymCryptMd4AppendBlocks",
    "SymCryptMd4Init",
    "SymCryptMd4Result",
    "SymCryptMd5Algorithm_default",
    "SymCryptMd5Append",
    "SymCryptMd5AppendBlocks",
    "SymCryptMd5Init",
    "SymCryptMd5Result",
    "SymCryptParallelHashProcess",
    "SymCryptParallelHashProcess_serial",
    "SymCryptParallelHashSetNextWork",
    "SymCryptParallelSha256Algorithm_default",
    "SymCryptParallelSha256Append",
    "SymCryptParallelSha256AppendBlocks_xmm",
    "SymCryptParallelSha256AppendBlocks_ymm",
    "SymCryptParallelSha256AppendBytes_serial",
    "SymCryptParallelSha256Init",
    "SymCryptParallelSha256Process",
    "SymCryptParallelSha256Result1",
    "SymCryptParallelSha256Result2",
    "SymCryptParallelSha256ResultDone",
    "SymCryptParallelSha256Selftest",
    "SymCryptParallelSha384Algorithm_default",
    "SymCryptParallelSha384Process",
    "SymCryptParallelSha384ResultDone",
    "SymCryptParallelSha512Algorithm_default",
    "SymCryptParallelSha512Append",
    "SymCryptParallelSha512AppendBlocks_xmm",
    "SymCryptParallelSha512AppendBlocks_ymm",
    "SymCryptParallelSha512AppendBytes_serial",
    "SymCryptParallelSha512Init",
    "SymCryptParallelSha512Process",
    "SymCryptParallelSha512Result1",
    "SymCryptParallelSha512Result2",
    "SymCryptParallelSha512ResultDone",
    "SymCryptParallelSha512Selftest",
    "SymCryptParallelSha512Sha384Process",
    "SymCryptRc2BlockCipher_default",
    "SymCryptRc2Decrypt",
    "SymCryptRc2Encrypt",
    "SymCryptRc2ExpandKey",
    "SymCryptRc2ExpandKeyEx",
    "SymCryptRc4Crypt",
    "SymCryptRc4Init",
    "SymCryptRngAesCheckBlocksNotIdentical",
    "SymCryptRngAesDf",
    "SymCryptRngAesFips140_2Instantiate",
    "SymCryptRngAesGenerate",
    "SymCryptRngAesGenerateBlocks",
    "SymCryptRngAesGenerateSelftest",
    "SymCryptRngAesGenerateSmall",
    "SymCryptRngAesInstantiate",
    "SymCryptRngAesInstantiateSelftest",
    "SymCryptRngAesReseed",
    "SymCryptRngAesReseedSelftest",
    "SymCryptRngAesTestGenerate",
    "SymCryptRngAesTestReseed",
    "SymCryptRngAesTestUninstantiate",
    "SymCryptRngAesUninstantiate",
    "SymCryptRngAesUpdate",
    "SymCryptSha1",
    "SymCryptSha1Append",
    "SymCryptSha1AppendBlocks",
    "SymCryptSha1Init",
    "SymCryptSha1Result",
    "SymCryptSha256",
    "SymCryptSha256Algorithm_default",
    "SymCryptSha256Append",
    "SymCryptSha256AppendBlocks",
    "SymCryptSha256AppendBlocks_shani",
    "SymCryptSha256AppendBlocks_ul1",
    "SymCryptSha256Init",
    "SymCryptSha256K",
    "SymCryptSha256KATAnswer",
    "SymCryptSha256Result",
    "SymCryptSha384Algorithm_default",
    "SymCryptSha384Append",
    "SymCryptSha384Init",
    "SymCryptSha384InitialState",
    "SymCryptSha384Result",
    "SymCryptSha512Algorithm_default",
    "SymCryptSha512Append",
    "SymCryptSha512AppendBlocks",
    "SymCryptSha512AppendBlocks_ull",
    "SymCryptSha512Init",
    "SymCryptSha512InitialState",
    "SymCryptSha512K",
    "SymCryptSha512KATAnswer",
    "SymCryptSha512Result",
    "SymCryptTestKey32",
    "SymCryptTestMsg16",
    "SymCryptTestMsg3",
    "SymCryptTlsPrf1_1",
    "SymCryptTlsPrf1_1Derive",
    "SymCryptTlsPrf1_2",
    "SymCryptTlsPrf1_2Derive",
    "SymCryptTlsPrfMac",
    "SymCryptTlsPrfPHash",
    "SymCryptWipeAsm",
    "SymCryptWipeAsmT0",
    "SymCryptWipeAsmT1",
    "SymCryptWipeAsmT10",
    "SymCryptWipeAsmT11",
    "SymCryptWipeAsmT12",
    "SymCryptWipeAsmT13",
    "SymCryptWipeAsmT14",
    "SymCryptWipeAsmT15",
    "SymCryptWipeAsmT2",
    "SymCryptWipeAsmT3",
    "SymCryptWipeAsmT4",
    "SymCryptWipeAsmT5",
    "SymCryptWipeAsmT6",
    "SymCryptWipeAsmT7",
    "SymCryptWipeAsmT8",
    "SymCryptWipeAsmT9",
    "SymCryptXorBytes",
    "SymCryptXtsAesDecrypt",
    "SymCryptXtsAesDecryptAsm",
    "SymCryptXtsAesDecryptDataUnitXmm",
    "SymCryptXtsAesDecryptXmm",
    "SymCryptXtsAesEncrypt",
    "SymCryptXtsAesEncryptAsm",
    "SymCryptXtsAesEncryptDataUnitXmm",
    "SymCryptXtsAesEncryptXmm",
    "SymCryptXtsAesExpandKey",
    "SymCryptXtsAesSelftest",
    "SymCryptXtsDecryptDataUnit",
    "SymCryptXtsEncryptDataUnit",
    "TearDownRNGStates",
    "TearDownRNGStatesCommon",
    "TestDhPairWise",
    "TestDsaPairWise",
    "TestEcdhPairWise",
    "TestEcdsaPairWise",
    "TestIfNistDomainParameters",
    "TestIfParametersAreEqual",
    "TestKdf",
    "TestKdfPbkdf2",
    "TestKdfSp800_108",
    "TestRsaPairWise",
    "TripleDesCbc",
    "TripleDesCfb",
    "TripleDesEcb",
    "ValidateCurveName",
    "ValidateDHAlgorithm",
    "ValidateDHKey",
    "ValidateDSAAlgorithm",
    "ValidateDSAKey",
    "ValidateDSAKeyBlobV1Format",
    "ValidateDSAKeyBlobV2Format",
    "ValidateEccAlgorithm",
    "ValidateEccKey",
    "ValidateEccObject",
    "ValidateKeyDerivationAlgorithm",
    "ValidateKeyDerivationKey",
    "ValidateKeyDerivationObject",
    "Validate_Modulus",
    "Validate_PublicKey",
    "VerifyRsaPrivateBlob",
    "VerifyRsaPublicBlob",
    "VerifyStackAvailable",
    "WPP_33d668f5ddff3a8d051b3c01470e284a_Traceguids",
    "WPP_43f04a3c11323e2c560c791808c6cabe_Traceguids",
    "WPP_GLOBAL_Control",
    "WPP_MAIN_CB",
    "WPP_REGISTRATION_GUIDS",
    "WPP_SF_qS",
    "WPP_SF_qSL",
    "WPP_SF_sDsd",
    "WPP_ThisDir_CTLGUID_CNGTraceControlGuid",
    "WppCleanupUm",
    "WppControlCallback",
    "WppInitUm",
    "X931_keygen_B4",
    "X931_keygen_allocate_arrays",
    "_CapiKDF",
    "_DllMainCRTStartupForGS2",
    "_PBKDF2",
    "_SP800_56A_KDF",
    "_TLS_KDF",
    "__C_specific_handler",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__GSHandlerCheck_SEH",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-errorhandling-l1-1-1",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-handle-l1-1-0",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-io-l1-1-1",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-libraryloader-l1-2-0",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-libraryloader-l1-2-2",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-memory-l1-1-2",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-processthreads-l1-1-2",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-registry-l1-1-0",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-synch-l1-2-0",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-sysinfo-l1-2-1",
    "__IMPORT_DESCRIPTOR_api-ms-win-core-xstate-l2-1-0",
    "__IMPORT_DESCRIPTOR_ntdll",
    "__NULL_IMPORT_DESCRIPTOR",
    "__chkstk",
    "__dynamic_value_reloc_table",
    "__ecprojective_add_helper",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_CloseHandle",
    "__imp_DeleteCriticalSection",
    "__imp_DeviceIoControl",
    "__imp_DisableThreadLibraryCalls",
    "__imp_EnterCriticalSection",
    "__imp_EtwGetTraceEnableFlags",
    "__imp_EtwGetTraceEnableLevel",
    "__imp_EtwGetTraceLoggerHandle",
    "__imp_EtwRegisterTraceGuidsW",
    "__imp_EtwTraceMessage",
    "__imp_EtwUnregisterTraceGuids",
    "__imp_GetCurrentProcess",
    "__imp_GetEnabledXStateFeatures",
    "__imp_GetModuleFileNameW",
    "__imp_GetProcAddress",
    "__imp_GetSystemInfo",
    "__imp_InitializeCriticalSection",
    "__imp_LdrAddRefDll",
    "__imp_LeaveCriticalSection",
    "__imp_LoadLibraryW",
    "__imp_NtClose",
    "__imp_NtOpenFile",
    "__imp_NtOpenKey",
    "__imp_NtQueryInformationProcess",
    "__imp_NtQueryValueKey",
    "__imp_NtTerminateProcess",
    "__imp_RegCloseKey",
    "__imp_RegEnumKeyExW",
    "__imp_RegOpenKeyExW",
    "__imp_RegQueryInfoKeyW",
    "__imp_RegQueryValueExW",
    "__imp_RtlAllocateHeap",
    "__imp_RtlCaptureContext",
    "__imp_RtlFreeHeap",
    "__imp_RtlGetCurrentProcessorNumberEx",
    "__imp_RtlImageNtHeader",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlLookupFunctionEntry",
    "__imp_RtlUnhandledExceptionFilter",
    "__imp_RtlVirtualUnwind",
    "__imp_SetLastError",
    "__imp_SetThreadStackGuarantee",
    "__imp_TerminateProcess",
    "__imp_VirtualAlloc",
    "__imp_VirtualProtect",
    "__imp_VirtualQuery",
    "__imp___C_specific_handler",
    "__imp___chkstk",
    "__imp__local_unwind",
    "__imp__vsnwprintf",
    "__imp__wcsicmp",
    "__imp_memcmp",
    "__imp_memcpy",
    "__imp_memmove",
    "__imp_memset",
    "__imp_qsort",
    "__imp_wcscmp",
    "__imp_wcscpy_s",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "__security_init_cookie_ex",
    "__xmm@00000000000000000000000000000001",
    "__xmm@00000000000000000000000000000002",
    "__xmm@00000000000000000000000000000003",
    "__xmm@00000001000000010000000100000001",
    "__xmm@00000001000000010000000100000087",
    "__xmm@000102030405060708090a0b0c0d0e0f",
    "__xmm@08090a0b0c0d0e0f0001020304050607",
    "__xmm@0c0d0e0f08090a0b0405060700010203",
    "__xmm@36363636363636363636363636363636",
    "__xmm@6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a6a",
    "__ymm@08090a0b0c0d0e0f000102030405060708090a0b0c0d0e0f0001020304050607",
    "__ymm@0c0d0e0f08090a0b04050607000102030c0d0e0f08090a0b0405060700010203",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "_local_unwind",
    "_resetstkoflw_static",
    "accumulate",
    "add_256_amd64_asm",
    "add_diff",
    "add_full",
    "add_immediate",
    "add_mod",
    "add_mod_256_amd64_asm",
    "add_same",
    "add_same_amd64_asm",
    "algorithmID",
    "bits_in_absolute_difference",
    "bits_when_squared",
    "compareRequestSize",
    "compare_diff",
    "compare_same",
    "cpuidBitInfo",
    "create_modulus",
    "create_modulus_select_arithmetic",
    "dblint_ogcd",
    "dblint_sqrt",
    "decumulate",
    "digit_allocate_many",
    "digit_ogcd",
    "digit_sqrt",
    "digits_to_endian_bytes",
    "div21",
    "div21_fast",
    "divide",
    "divide_immediate",
    "divide_precondition_1",
    "ec_free",
    "ec_initialize",
    "ecaffine_exp_multi_via_projective",
    "ecaffine_is_infinite",
    "ecaffine_on_curve",
    "ecaffine_projectivize",
    "ecaffine_set_infinite",
    "ecc_initialize_prime_curve",
    "ecc_montgomery_point_is_identity",
    "ecc_montgomery_point_multiplication",
    "ecc_montgomery_point_on_curve",
    "ecc_point_is_identity",
    "ecc_set_point_multiplication_function",
    "ecc_ted_double_and_add",
    "ecc_ted_extend_point",
    "ecc_ted_masked_copy",
    "ecc_ted_normalize_point",
    "ecc_ted_point_add",
    "ecc_ted_point_double",
    "ecc_twisted_edwards_multi_point_multiplication",
    "ecc_twisted_edwards_point_is_identity",
    "ecc_twisted_edwards_point_on_curve",
    "ecprojective_affinize",
    "ecprojective_affinize_many_in_place",
    "ecprojective_double",
    "ecprojective_set_infinite",
    "ecsp_dsa_ex",
    "ecurve_general_exponentiation_single",
    "ecvp_dsa",
    "endian_bytes_to_digits",
    "estimated_quotient_1",
    "from_modular",
    "g_AesStatesTable",
    "g_RsaSignVerifyHash",
    "g_Sha256Name",
    "g_SymCryptCpuFeaturesNotPresent",
    "g_SymCryptCpuFeaturesPresentCheck",
    "g_SymCryptCpuid1",
    "g_SymCryptFlags",
    "g_UlonglongOne",
    "g_fProviderStarted",
    "g_fSelftest",
    "g_fSelftestsRunning",
    "g_fUseRngLite",
    "g_fVsmFlags",
    "g_hCNGDriver",
    "g_hIumBase",
    "g_kdfParamBuffers",
    "g_kdfParameters",
    "g_kdfTestKey",
    "g_pAuditingFuncs",
    "g_pGetSeedFunction",
    "g_pbkdf2TestResult",
    "g_pfnAllocate",
    "g_pfnFree",
    "g_rgdig_small_prod",
    "g_rgdig_small_prod_recip",
    "g_rgdwr_small_prod_recip_shift",
    "g_rngState",
    "g_rootAesRngState",
    "g_sp800108TestResult",
    "g_ulAdditionalProbeSize",
    "g_ulMaxStackAllocSize",
    "gcDSA_TestPrimality",
    "gcdex_jacobi",
    "generate_full_length_random",
    "low_prime_divisibility",
    "low_prime_prod_construction",
    "memcmp",
    "memcpy",
    "memset",
    "miller_rabin_prob_prime_test_fips186_3_C31",
    "mod_Lucas",
    "mod_LucasUV",
    "mod_exp2006",
    "mod_exp_multi",
    "mod_exp_x64",
    "mod_exp_x64_1024",
    "mod_exp_x64_2048",
    "mod_mul",
    "mod_mul_immediate",
    "mod_mul_no_range_checks",
    "mod_shift",
    "mod_sqrt",
    "modmul_choices1",
    "modmul_from_right_CIOS",
    "modmul_temps_count",
    "modular_exponentiation",
    "mp_alloc_temp",
    "mp_copybits",
    "mp_gcd",
    "mp_gcdex",
    "mp_invert",
    "mp_mul22s",
    "mp_mul22u",
    "mp_population_count",
    "mp_remove2",
    "mp_scrambled_fetch",
    "mp_scrambled_store",
    "mp_shift",
    "mp_shift_lost",
    "mp_significant_bit_count",
    "mp_sqrt",
    "mp_thread_initialize",
    "mp_trailing_zero_count",
    "multiply",
    "multiply_immediate",
    "neg_mod",
    "partyUInfo",
    "partyVInfo",
    "possible_digit_allocate_named",
    "prime_generation_rsa_fips186_3_C9",
    "prime_search_successive",
    "prime_test_handler",
    "probable_prime",
    "random_bits_seeded",
    "random_bytes",
    "random_dword_interval",
    "random_mod",
    "random_mod_inverse",
    "random_mod_nonzero",
    "rgHashAlgorithmDefaults",
    "rgSymmAlgorithmDefaults",
    "rgbDh1024PrivateKey_for_pairwise",
    "rgbDh2048PrivateKey",
    "rgbDh256DerivedKey",
    "rgbDh256PrivateKey_u",
    "rgbDh256PrivateKey_v",
    "rgbDhalgorithmID",
    "rgbDhpartyUInfo",
    "rgbDhpartyVInfo",
    "rgbDsa2048PrivateKey",
    "rgbEcDhDerivedKey256",
    "rgbEcDhPrivKey256",
    "rgbEcDhPrivKey256_e",
    "rgbEcDhPrivKey256_for_pairwise",
    "rgbEcDhPrivKey256_s",
    "rgbEcDsaPrivKey256",
    "rgbKnownSignature",
    "rgbRsa2048PrivateKey",
    "rgbRsa2048PublicKey",
    "rgbRsaSignVerifyHash",
    "rgbWtls9",
    "rgdwDefaultMsgBlockSize",
    "rgpszChainModeNameArray",
    "rsa_allocate_fields",
    "rsa_construction_1",
    "rsa_construction_X931",
    "rsa_construction_fips186_3",
    "rsa_construction_fips186_3_B36",
    "rsa_crt_constants",
    "rsa_decryption",
    "rsa_destruction",
    "rsa_encryption",
    "rsa_export",
    "rsa_export_sizes",
    "rsa_fips186_3_C3_iterations",
    "rsa_fips186_3_table_B1_check_bitlens",
    "rsa_fips186_3_table_B1_default_bitlen",
    "rsa_import",
    "rsa_import_prime",
    "rsa_initialize_private_key_fields",
    "rsa_initialize_private_key_prime",
    "rsa_prime_private_exponent",
    "significant_bit_count",
    "small_prime_check",
    "sub_256_amd64_asm",
    "sub_diff",
    "sub_diff_if_greater",
    "sub_immediate",
    "sub_mod",
    "sub_mod_256_amd64_asm",
    "sub_same",
    "sub_same_amd64_asm",
    "to_modular",
    "trailing_zero_count",
    "two_adic_inverse",
    "uncreate_modulus",
    "validateAuthCipherModeInfo",
    "validateMSCryptHash",
    "validateMSCryptHashAlgorithm",
    "validateMSCryptRngHandle",
    "validateMSCryptRsaAlgorithm",
    "validateMSCryptRsaKey",
    "validateMSCryptSymmAlgorithm",
    "validateMSCryptSymmKey",
    "validateMSCryptSymmObject",
    "validate_modular_data1a",
    "validate_modular_data2a",
    "wcscmp",
    "\u007fapi-ms-win-core-errorhandling-l1-1-1_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-handle-l1-1-0_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-io-l1-1-1_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-libraryloader-l1-2-0_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-libraryloader-l1-2-2_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-memory-l1-1-2_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-processthreads-l1-1-2_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-registry-l1-1-0_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-synch-l1-2-0_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-sysinfo-l1-2-1_NULL_THUNK_DATA",
    "\u007fapi-ms-win-core-xstate-l2-1-0_NULL_THUNK_DATA",
    "\u007fntdll_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}