{
  "symbols": [
    "??_C@_00CNPNBAHC@@",
    "??_C@_04DEAGFDMC@?4pdb@",
    "??_C@_04HIBGFPH@NULL@",
    "??_C@_09EEKGDCPH@?$DMunknown?$DO@",
    "??_C@_09HGLDDODP@DriverLog@",
    "??_C@_0BA@LHPDLGND@WppRecorder?4sys@",
    "??_C@_0DD@LBNLIDLL@Error?3?5failed?5to?5allocate?5memor@",
    "??_C@_0DF@GHECMGCH@Error?3?5failed?5to?5allocate?5memor@",
    "??_C@_0DG@EHCCBILH@Error?3?5failed?5to?5re?9allocate?5me@",
    "??_C@_1BC@JJOIPLPH@?$AAL?$AAo?$AAg?$AAP?$AAa?$AAg?$AAe?$AAs@",
    "??_C@_1BE@BNPGOOBN@?$AAT?$AAE?$AAL?$AAA?$AAS?$AAS?$AAE?$AAR?$AAT@",
    "??_C@_1BE@GNDHNNGJ@?$AAV?$AAe?$AAr?$AAb?$AAo?$AAs?$AAe?$AAO?$AAn@",
    "??_C@_1BG@PGIGMDPA@?$AAP?$AAa?$AAr?$AAa?$AAm?$AAe?$AAt?$AAe?$AAr?$AAs@",
    "??_C@_1BI@FHPPGEKG@?$AAW?$AAp?$AAp?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAe?$AAr@",
    "??_C@_1BK@DHLDGJM@?$AAP?$AAs?$AAG?$AAe?$AAt?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@",
    "??_C@_1BM@CJMKDOJH@?$AAE?$AAt?$AAw?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr@",
    "??_C@_1CA@OFIBBPKJ@?$AAW?$AAm?$AAi?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@",
    "??_C@_1CI@IHDMNONM@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAL?$AAo?$AAg?$AAs?$AAI?$AAn?$AAM?$AAi?$AAn?$AAi@",
    "??_C@_1CM@LAHCDCDP@?$AAW?$AAp?$AAp?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAe?$AAr?$AA_?$AAT?$AAr?$AAa@",
    "??_C@_1CO@FFNJJJBD@?$AAF?$AAo?$AAr?$AAc?$AAe?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAd?$AAC?$AAr@",
    "??_C@_1DC@DOCOAJH@?$AAW?$AAm?$AAi?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAn@",
    "??_C@_1DC@OAPHKEJN@?$AAR?$AAt?$AAl?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr@",
    "??_C@_1DE@HMCCLJNL@?$AAR?$AAt?$AAl?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAI@",
    "??_C@_1DE@PGLNGHPB@?$AAW?$AAp?$AAp?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAe?$AAr?$AA_?$AAR?$AAe?$AAp@",
    "??_C@_1DG@PFOPAIND@?$AAE?$AAt?$AAw?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa?$AAs@",
    "??_C@_1DM@FBCHJDJE@?$AAW?$AAp?$AAp?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAe?$AAr?$AA_?$AAP?$AAe?$AAr@",
    "??_C@_1DM@LMEEHLAB@?$AAW?$AAp?$AAp?$AAR?$AAe?$AAc?$AAo?$AAr?$AAd?$AAe?$AAr?$AA_?$AAP?$AAe?$AAr@",
    "??_C@_1EA@EMDNLLOB@?$AAR?$AAe?$AAc?$AAe?$AAn?$AAt?$AAl?$AAy?$AAU?$AAn?$AAl?$AAo?$AAa?$AAd?$AAe@",
    "??_C@_1HO@GCGFOCLM@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@",
    "AuxKlibInitialize",
    "AuxKlibQueryModuleInformation",
    "DllInitialize",
    "DllUnload",
    "DriverEntry",
    "GetWppAutoLogRegistrySettings",
    "GsDriverEntry",
    "KiBugCheckData",
    "MicrosoftTelemetryAssertTriggeredArgsKM",
    "MicrosoftTelemetryAssertTriggeredWorker",
    "RtlpImageNtHeader",
    "SetWppAutoLogRegistrySettings",
    "TraceLoggingRegister",
    "WPPTraceSuite",
    "WPP_844f4431103636d0db8dffdfa8a57bdb_Traceguids",
    "WPP_GLOBAL_Control",
    "WPP_MAIN_CB",
    "WPP_RECORDER_INITIALIZED",
    "WPP_RECORDER_SF_dd",
    "WPP_RECORDER_SF_ds",
    "WPP_RECORDER_SF_dscs",
    "WPP_RECORDER_SF_s",
    "WPP_RECORDER_SF_sd",
    "WPP_ThisDir_CTLGUID_TestTraceGuid",
    "WppAutoLogCreateLog",
    "WppAutoLogCreateLogSnapshot",
    "WppAutoLogDeleteAutoLogContext",
    "WppAutoLogDeleteLog",
    "WppAutoLogGetBugCheckDataForLog",
    "WppAutoLogGetPdbInfo",
    "WppAutoLogSendRecordsToWpp",
    "WppAutoLogStart",
    "WppAutoLogStop",
    "WppAutoLogTrace",
    "WppAutoLogValidateLogHeader",
    "WppAutoLogpBugCheckCallbackFilter",
    "WppAutoLogpBugCheckCallbackForDriver",
    "WppAutoLogpBugCheckCallbackForLog",
    "WppAutoLogpGetImageBase",
    "WppAutoLogpMoveContextToRecentlyUnloadedList",
    "WppClassicProviderCallback",
    "WppCleanupKm",
    "WppInitKm",
    "WppLoadTracingSupport",
    "WppRecorderGlobals",
    "WppTraceCallback",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertDiagTrackProv",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertDiagTrack_KMProv",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertProv",
    "_TlgEnableCallback",
    "_TlgWrite",
    "_TraceLoggingMetadata",
    "_TraceLoggingMetadataEnd",
    "__C_specific_handler",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__GSHandlerCheck_SEH",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_DbgPrint",
    "__imp_DbgkWerCaptureLiveKernelDump",
    "__imp_EtwRegister",
    "__imp_EtwSetInformation",
    "__imp_EtwUnregister",
    "__imp_EtwWriteTransfer",
    "__imp_ExAllocatePoolWithQuotaTag",
    "__imp_ExAllocatePoolWithTag",
    "__imp_ExFreePoolWithTag",
    "__imp_IoWMIRegistrationControl",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeDeregisterBugCheckReasonCallback",
    "__imp_KeInitializeEvent",
    "__imp_KeInitializeSpinLock",
    "__imp_KeQueryTimeIncrement",
    "__imp_KeRegisterBugCheckReasonCallback",
    "__imp_KeReleaseSpinLock",
    "__imp_KeSetEvent",
    "__imp_KeWaitForSingleObject",
    "__imp_KiBugCheckData",
    "__imp_MmGetSystemRoutineAddress",
    "__imp_PsGetVersion",
    "__imp_RtlFreeUnicodeString",
    "__imp_RtlGetVersion",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlQueryRegistryValues",
    "__imp_RtlStringFromGUID",
    "__imp_WmiTraceMessage",
    "__imp_ZwClose",
    "__imp_ZwOpenKey",
    "__imp_ZwQuerySystemInformation",
    "__imp_ZwSetValueKey",
    "__imp___C_specific_handler",
    "__imp__stricmp",
    "__imp_strrchr",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "g_AssertSpinLock",
    "g_AssertsOperational",
    "g_IsDllDisabled",
    "g_MicrosoftTelemetryAssertsTriggeredList",
    "g_ModuleName",
    "imp_WppRecorderConfigure",
    "imp_WppRecorderDumpLiveDriverData",
    "imp_WppRecorderGetCounterHandle",
    "imp_WppRecorderGetTriageInfo",
    "imp_WppRecorderIsDefaultLogAvailable",
    "imp_WppRecorderLinkCounters",
    "imp_WppRecorderLogCreate",
    "imp_WppRecorderLogDelete",
    "imp_WppRecorderLogDumpLiveData",
    "imp_WppRecorderLogGetDefault",
    "imp_WppRecorderLogSetIdentifier",
    "imp_WppRecorderReplay",
    "memcpy",
    "memmove",
    "memset",
    "pfnEtwRegisterClassicProvider",
    "pfnEtwUnregister",
    "pfnWppGetVersion",
    "pfnWppQueryTraceInformation",
    "pfnWppTraceMessage",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}