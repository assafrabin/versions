{
  "symbols": [
    "??_C@_02OLOABKKD@ID?$AA@",
    "??_C@_04GNAHIFHK@_DSD?$AA@NNGAKEGL@",
    "??_C@_04HIBGFPH@NULL?$AA@FNODOBFM@",
    "??_C@_06HKFEAHGA@BUFFER?$AA@FNODOBFM@",
    "??_C@_06IGECGLFO@STRING?$AA@FNODOBFM@",
    "??_C@_07EHCIHKNF@INTEGER?$AA@FNODOBFM@",
    "??_C@_07FABLKDFK@PACKAGE?$AA@FNODOBFM@",
    "??_C@_07NFANNNEC@UNKNOWN?$AA@FNODOBFM@",
    "??_C@_08PIFIEIFC@HidUsage?$AA@",
    "??_C@_08PJFDLDED@VendorID?$AA@",
    "??_C@_09IHHILKBJ@ProductID?$AA@",
    "??_C@_0BD@EDCHILAI@ParentCollectionID?$AA@",
    "??_C@_0M@OAHJFDNC@HIDINT_DATA?$AA@",
    "??_C@_0N@DABCKLMJ@HidUsagePage?$AA@",
    "??_C@_0O@MKOKJLBM@VersionNumber?$AA@",
    "??_C@_0P@FAAFBCOF@InterruptIndex?$AA@",
    "??_C@_0P@KJOKCEGM@INTERRUPT_DATA?$AA@",
    "??_C@_17BODHOPJC@?$AA1?$AA?4?$AA0?$AA?$AA@",
    "??_C@_1BE@DEAPIJA@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?$AA@",
    "??_C@_1BI@BJCKEEDJ@?$AAK?$AAm?$AAd?$AAf?$AAL?$AAi?$AAb?$AAr?$AAa?$AAr?$AAy?$AA?$AA@",
    "??_C@_1BK@DHLDGJM@?$AAP?$AAs?$AAG?$AAe?$AAt?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@NNGAKEGL@",
    "??_C@_1BM@CJMKDOJH@?$AAE?$AAt?$AAw?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AA?$AA@NNGAKEGL@",
    "??_C@_1CA@OFIBBPKJ@?$AAW?$AAm?$AAi?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe?$AA?$AA@NNGAKEGL@",
    "??_C@_1DC@DOCOAJH@?$AAW?$AAm?$AAi?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAn?$AAf?$AAo?$AAr?$AAm?$AAa?$AAt?$AAi?$AAo?$AAn?$AA?$AA@NNGAKEGL@",
    "??_C@_1DG@PFOPAIND@?$AAE?$AAt?$AAw?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa?$AAs?$AAs?$AAi?$AAc?$AAP?$AAr?$AAo?$AAv?$AAi?$AAd?$AAe?$AAr?$AA?$AA@NNGAKEGL@",
    "??_C@_1EC@MIBBDAMP@?$AAH?$AAI?$AAD?$AA?5?$AAB?$AAu?$AAt?$AAt?$AAo?$AAn?$AA?5?$AAo?$AAv?$AAe?$AAr?$AA?5?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?5?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr@",
    "?FxStubBindClasses@@YAJPEAU_WDF_BIND_INFO@@@Z",
    "?FxStubDriverUnloadCommon@@YAXXZ",
    "?FxStubInitTypes@@YAJXZ",
    "?FxStubUnbindClasses@@YAXPEAU_WDF_BIND_INFO@@@Z",
    "?__KMDF_CLASS_BIND_END@@3PEAXEA",
    "?__KMDF_CLASS_BIND_START@@3U_MARKER_TYPE@@A",
    "?__KMDF_TYPE_INIT_END@@3PEAXEA",
    "?__KMDF_TYPE_INIT_START@@3U_MARKER_TYPE@@A",
    "ACPI_EvaluateMethod",
    "ACPI_HID_BUTTON_DEVICE_DATA_DESCRIPTOR_GUID",
    "ACPI_ParseArguments",
    "ACPI_TEST_CONFIG_USE_VHF_NO_BUFFERING_GUID",
    "ACPI_TEST_CONFIG_USE_VHF_WITH_BUFFERING_GUID",
    "AcpiParseULong",
    "AcpiParseUShort",
    "BitMap_ClearAllBits",
    "BitMap_Create",
    "BitMap_SetAllBits",
    "CollectionParseTable",
    "ControlParseTable",
    "DeviceParseTable",
    "DriverEntry",
    "DriverUnload",
    "FxDriverEntry",
    "FxDriverEntryWorker",
    "FxStubDriverMiniportUnload",
    "FxStubDriverUnload",
    "GetObjectTypeName",
    "HIDINT_CompleteReadReports",
    "HIDINT_EvtDeviceAdd",
    "HIDINT_EvtDeviceCleanupCallback",
    "HIDINT_EvtDevicePrepareHardware",
    "HIDINT_EvtDeviceReleaseHardware",
    "HIDINT_EvtDeviceSelfManagedIoCleanup",
    "HIDINT_EvtDeviceSelfManagedIoInit",
    "HIDINT_EvtInterruptDpc",
    "HIDINT_EvtInterruptIsr",
    "HIDINT_EvtVhfGetFeature",
    "HIDINT_EvtVhfGetInputReport",
    "HIDINT_EvtVhfReadyForNextReadReport",
    "HIDINT_EvtVhfSetFeature",
    "HIDINT_GetReportRequest",
    "HIDINT_GetSetReport",
    "HIDINT_OnControlStateToggle",
    "HIDINT_ParseDeviceSpecificData",
    "HIDINT_ParseHidButtonDeviceDataDescriptor",
    "HIDINT_ParseHidButtonInfo",
    "HIDINT_ProcessHidButtonInfo",
    "HIDINT_ReadReport",
    "HIDINT_ReadReportReadyNotification",
    "HIDINT_ReadReportRequest",
    "HIDINT_SetReportRequest",
    "HIDINT_VhfInitialize",
    "HIDINT_VhfSubmitReadReport",
    "HID_GenerateReportDescriptor",
    "HID_GetDeviceAttributes",
    "HID_GetHidDescriptor",
    "HID_GetReportDescriptor",
    "HID_GetString",
    "HID_InternalDeviceControl",
    "HID_TemplateApplicationCollectionEnd",
    "HID_TemplateApplicationCollectionStart",
    "HID_TemplateLogicalCollection",
    "HID_TemplateLogicalCollectionWithPadding",
    "HID_TemplateReport",
    "Pump_ClientRequestComplete",
    "Pump_PendNotifyToVhf",
    "Pump_Stop",
    "Pump_VhfNotifyComplete",
    "Pump_VhfRequestComplete",
    "Queue_Clear",
    "Queue_Create",
    "Queue_DeleteDuplicatePair",
    "Queue_Pop",
    "VhfAsyncOperationComplete",
    "VhfCreate",
    "VhfDelete",
    "VhfStart",
    "Vhfi_Cleanup",
    "Vhfi_CleanupOnDeleteComplete",
    "Vhfi_Delete",
    "Vhfi_DeleteComplete",
    "Vhfi_InvokeAsyncOperationCallback",
    "Vhfi_InvokeReadyForNextReadReportCallback",
    "Vhfi_SubmitReadReport",
    "Vhfi_SubmitReadReportComplete",
    "WPPTraceSuite",
    "WPP_0a254073a3c433ed9fd763366e444abb_Traceguids",
    "WPP_3d4d32095dcd3bdc405ebd77aae22eef_Traceguids",
    "WPP_3ebb5a1354553867d270ec737ad12d9a_Traceguids",
    "WPP_53f4ab4603243dd8522e2e8a7db36154_Traceguids",
    "WPP_7552f21039bb310a28a4916b35e2d8ce_Traceguids",
    "WPP_89ddfcb6a6793bd42aa314fab9469a26_Traceguids",
    "WPP_GLOBAL_Control",
    "WPP_MAIN_CB",
    "WPP_RECORDER_SF_",
    "WPP_RECORDER_SF_D",
    "WPP_RECORDER_SF_DD",
    "WPP_RECORDER_SF_DDD",
    "WPP_RECORDER_SF_DDDD",
    "WPP_RECORDER_SF_DDDDDDD",
    "WPP_RECORDER_SF_DqDDDDD",
    "WPP_RECORDER_SF_PP",
    "WPP_RECORDER_SF__guid__guid_",
    "WPP_RECORDER_SF_d",
    "WPP_RECORDER_SF_dDDDDD",
    "WPP_RECORDER_SF_q",
    "WPP_RECORDER_SF_qDd",
    "WPP_RECORDER_SF_qDq",
    "WPP_RECORDER_SF_qd",
    "WPP_RECORDER_SF_qdD",
    "WPP_RECORDER_SF_sD",
    "WPP_RECORDER_SF_sd",
    "WPP_RECORDER_SF_ss",
    "WPP_RECORDER_SF_sss",
    "WPP_SF_",
    "WPP_SF_Ld",
    "WPP_SF_c",
    "WPP_SF_d",
    "WPP_ThisDir_CTLGUID_HIDINTERRUPT",
    "WdfDriverGlobals",
    "WdfDriverMiniportUnloadOverride",
    "WdfFunctions_01015",
    "WdfVersionBind",
    "WdfVersionBindClass",
    "WdfVersionUnbind",
    "WdfVersionUnbindClass",
    "WppClassicProviderCallback",
    "WppCleanupKm",
    "WppInitKm",
    "WppLoadTracingSupport",
    "WppTraceCallback",
    "_WDF_HIDINT_DATA_TYPE_INFO",
    "_WDF_INTERRUPT_DATA_TYPE_INFO",
    "__@@_PchSym_@00@lmvxlivUwirevihUrmkfgUsrwUnrmrklighUesuUhixUoryUpvimvoUlyquivUznwGEUkxsOlyq@VhfKm",
    "__@@_PchSym_@00@lmvxlivUwirevihUrmkfgUsrwUnrmrklighUsrwrmgviifkgUhixUlyquivUznwGEUkxsOlyq@hidinterrupt",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__IMPORT_DESCRIPTOR_WDFLDR",
    "__IMPORT_DESCRIPTOR_WppRecorder",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__dynamic_value_reloc_table",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_ExAllocatePoolWithTag",
    "__imp_ExFreePoolWithTag",
    "__imp_IoAllocateIrp",
    "__imp_IoAllocateMdl",
    "__imp_IoBuildDeviceIoControlRequest",
    "__imp_IoCancelIrp",
    "__imp_IoFreeIrp",
    "__imp_IoFreeMdl",
    "__imp_IoGetLowerDeviceObject",
    "__imp_IoReuseIrp",
    "__imp_IoWMIRegistrationControl",
    "__imp_IofCallDriver",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeGetCurrentProcessorNumberEx",
    "__imp_KeInitializeEvent",
    "__imp_KeInitializeSpinLock",
    "__imp_KeReleaseSpinLock",
    "__imp_KeSetEvent",
    "__imp_KeWaitForSingleObject",
    "__imp_MmBuildMdlForNonPagedPool",
    "__imp_MmGetSystemRoutineAddress",
    "__imp_ObfDereferenceObject",
    "__imp_RtlCompareMemory",
    "__imp_RtlCopyUnicodeString",
    "__imp_RtlInitUnicodeString",
    "__imp_WdfVersionBind",
    "__imp_WdfVersionBindClass",
    "__imp_WdfVersionUnbind",
    "__imp_WdfVersionUnbindClass",
    "__imp_WppAutoLogStart",
    "__imp_WppAutoLogStop",
    "__imp_WppAutoLogTrace",
    "__imp_imp_WppRecorderConfigure",
    "__imp_imp_WppRecorderReplay",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_init_cookie",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "memcpy",
    "memmove",
    "memset",
    "pfnEtwRegisterClassicProvider",
    "pfnEtwUnregister",
    "pfnWppGetVersion",
    "pfnWppQueryTraceInformation",
    "pfnWppTraceMessage",
    "typeWDF_IFR_HEADER",
    "\u007fWDFLDR_NULL_THUNK_DATA",
    "\u007fWppRecorder_NULL_THUNK_DATA",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}