{
  "symbols": [
    "??_C@_00CNPNBAHC@@",
    "??_C@_09EEKGDCPH@?$DMunknown?$DO@",
    "??_C@_0CB@EIGAEHCM@Outstanding?5ref?5on?5Tunnel?5drive@",
    "??_C@_13PNBDBPLL@?$AAA@",
    "??_C@_15DNGEKDKB@?$AAG?$AAR@",
    "??_C@_15ELMAKJHJ@?$AAW?$AAD@",
    "??_C@_15FCNJEDMF@?$AAG?$AAX@",
    "??_C@_15HPMIFLNA@?$AAG?$AAA@",
    "??_C@_15IGNKAAHD@?$AAR?$AAC@",
    "??_C@_15JMMBCOHI@?$AAW?$AAO@",
    "??_C@_15KLKFDJD@?$AAG?$AAW@",
    "??_C@_15NAFBOLGP@?$AAS?$AAD@",
    "??_C@_1BC@FCJNIDNL@?$AAS?$AAe?$AAc?$AAu?$AAr?$AAi?$AAt?$AAy@",
    "??_C@_1BE@BNPGOOBN@?$AAT?$AAE?$AAL?$AAA?$AAS?$AAS?$AAE?$AAR?$AAT@",
    "??_C@_1BE@DJHAJDEM@?$AAE?$AAx?$AAc?$AAl?$AAu?$AAs?$AAi?$AAv?$AAe@",
    "??_C@_1BG@COALCEMK@?$AAP?$AAr?$AAo?$AAp?$AAe?$AAr?$AAt?$AAi?$AAe?$AAs@",
    "??_C@_1BG@KCOOGCNN@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAT?$AAy?$AAp?$AAe@",
    "??_C@_1BG@OPOOGLJC@?$AAN?$AAo?$AAU?$AAs?$AAe?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "??_C@_1BK@DHLDGJM@?$AAP?$AAs?$AAG?$AAe?$AAt?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@",
    "??_C@_1BM@CJMKDOJH@?$AAE?$AAt?$AAw?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr@",
    "??_C@_1BO@DAOBINHA@?$AAN?$AAo?$AAD?$AAi?$AAs?$AAp?$AAl?$AAa?$AAy?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "??_C@_1CA@OFIBBPKJ@?$AAW?$AAm?$AAi?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@",
    "??_C@_1CK@LEEDIGFP@?$AAI?$AAo?$AAC?$AAr?$AAe?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAS@",
    "??_C@_1CM@BKDBPINP@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAT?$AAu?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAS@",
    "??_C@_1CM@DAMKCELK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAC?$AAo?$AAr?$AAp?$AAo@",
    "??_C@_1CM@DIJFBEC@?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAC?$AAh?$AAa?$AAr?$AAa?$AAc?$AAt?$AAe?$AAr@",
    "??_C@_1CM@LHALHIPI@?$AA?2?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?2?$AAT?$AAu?$AAn?$AAn?$AAe?$AAl?$AAC@",
    "??_C@_1CO@NECCMIEK@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAT?$AAu?$AAn?$AAn?$AAe?$AAl?$AA?5?$AAS@",
    "??_C@_1DC@DOCOAJH@?$AAW?$AAm?$AAi?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAn@",
    "??_C@_1DG@PFOPAIND@?$AAE?$AAt?$AAw?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa?$AAs@",
    "??_C@_1DM@KIMGBAPO@?$AAK?$AAe?$AAr?$AAn?$AAe?$AAl?$AA?9?$AAO?$AAn?$AAe?$AAC?$AAo?$AAr?$AAe?$AA?9@",
    "??_C@_1EA@BAHCLPHE@?$AAI?$AAo?$AAV?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAe?$AAD?$AAe?$AAv?$AAi?$AAc@",
    "??_C@_1EA@CKKLDOIB@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAF?$AAl?$AAo?$AAw?$AA?9?$AAE?$AAs?$AAt@",
    "??_C@_1EG@IKNIOGDD@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAD?$AAa?$AAt?$AAa?$AAg?$AAr?$AAa?$AAm@",
    "??_C@_1FC@LDDELAKA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAc?$AAe?$AAp?$AAt?$AAs?$AA?5?$AAt?$AAu?$AAn?$AAn@",
    "??_C@_1FC@NIHJDNLI@?$AAS?$AAe?$AAs?$AAs?$AAi?$AAo?$AAn?$AA?5?$AAu?$AAs?$AAe?$AAd?$AA?5?$AAb?$AAy@",
    "??_C@_1FC@OHDHIKBF@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAF?$AAl?$AAo?$AAw?$AA?9?$AAE?$AAs?$AAt@",
    "??_C@_1FE@MFCOKNHN@?$AAS?$AAu?$AAb?$AAl?$AAa?$AAy?$AAe?$AAr?$AA?5?$AAu?$AAs?$AAe?$AAd?$AA?5?$AAb@",
    "??_C@_1FG@BMALLKN@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAF?$AAl?$AAo?$AAw?$AA?9?$AAE?$AAs?$AAt@",
    "??_C@_1FI@BJAKFCAO@?$AAT?$AAe?$AAr?$AAe?$AAd?$AAo?$AA?5?$AAD?$AAa?$AAt?$AAa?$AAg?$AAr?$AAa?$AAm@",
    "??_C@_1GA@OCKINLFK@?$AAM?$AAi?$AAc?$AAr?$AAo?$AAs?$AAo?$AAf?$AAt?$AA?5?$AAW?$AAi?$AAn?$AAd?$AAo@",
    "??_C@_1GC@FHHEMNFD@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAc?$AAe?$AAp?$AAt?$AAs?$AA?5?$AAf?$AAl?$AAo?$AAw@",
    "??_C@_1GG@FCALANDO@?$AA?$HL?$AA?$CF?$AA0?$AA8?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX?$AA?9?$AA?$CF?$AA0?$AA4?$AAX@",
    "??_C@_1GM@JINLDKKK@?$AAS?$AAe?$AAC?$AAo?$AAn?$AAv?$AAe?$AAr?$AAt?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg@",
    "??_C@_1HA@PJPOINNA@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAc?$AAe?$AAp?$AAt?$AAs?$AA?5?$AAi?$AAn?$AAb?$AAo@",
    "??_C@_1HC@DKINPPAJ@?$AA?2?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAr?$AAy?$AA?2?$AAM?$AAa?$AAc?$AAh?$AAi@",
    "??_C@_1HC@EEJNIEGG@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAc?$AAe?$AAp?$AAt?$AAs?$AA?5?$AAo?$AAu?$AAt?$AAb@",
    "??_C@_1IC@NIOHINHL@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAc?$AAe?$AAp?$AAt?$AAs?$AA?5?$AAa?$AAn?$AAd?$AA?5@",
    "??_C@_1M@OAHBGIFG@?$AAC?$AAl?$AAa?$AAs?$AAs@",
    "??_C@_1O@ECOIBMJK@?$AAt?$AAu?$AAn?$AAn?$AAe?$AAl@",
    "ActivityTransfer",
    "CmRegUtilCreateUcKey",
    "CmRegUtilCreateWstrKey",
    "CmRegUtilOpenExistingUcKey",
    "CmRegUtilOpenExistingWstrKey",
    "CmRegUtilUcValueGetDword",
    "CmRegUtilUcValueGetFullBuffer",
    "CmRegUtilUcValueSetUcString",
    "CmRegUtilWstrValueGetDword",
    "CmRegUtilWstrValueSetFullBuffer",
    "CmRegUtilWstrValueSetWstrString",
    "CmpRegUtilAllocateUnicodeString",
    "DriverEntry",
    "EVENT_TUNNEL_DRIVER_ENTRY",
    "EVENT_TUNNEL_FAILED_COPY_BUFFER_TO_MDL",
    "EVENT_TUNNEL_ICMP_SOURCE_NOT_FOUND",
    "EVENT_TUNNEL_INTERFACE_MEDIA_STATUS",
    "EVENT_TUNNEL_INTERFACE_NOT_FOUND_FOR_ICMP",
    "EVENT_TUNNEL_INTERFACE_NOT_FOUND_FOR_PACKET",
    "EVENT_TUNNEL_INTERFACE_OP",
    "EVENT_TUNNEL_INTERFACE_PAUSE_COMPLETE",
    "EVENT_TUNNEL_INTERFACE_POWER_COMPLETE",
    "EVENT_TUNNEL_INTERFACE_READ_ERROR",
    "EVENT_TUNNEL_INTERFACE_RECEIVES_DISABLED",
    "EVENT_TUNNEL_INTERFACE_UPDATE_NOTIFICATION",
    "EVENT_TUNNEL_MINIPORT_INITIALIZED",
    "EVENT_TUNNEL_MINIPORT_INIT_FAILED",
    "EVENT_TUNNEL_NON_IPV6_PACKET",
    "EVENT_TUNNEL_NON_TEREDO_FLOW_SKIPPED",
    "EVENT_TUNNEL_OFFLOADED_SEND_NBL",
    "EVENT_TUNNEL_PACKET_INTEGRITY_CHECK_FAILED",
    "EVENT_TUNNEL_PACKET_WITH_INCOMPLETE_INNER_IP_HEADER",
    "EVENT_TUNNEL_SEND_FAILED_INVALID_DEVICE_STATE",
    "EVENT_TUNNEL_TEREDOWFP_REGISTRATION",
    "EVENT_TUNNEL_TEREDO_CALLOUT_WRITE_NOT_PERMITTED",
    "EVENT_TUNNEL_TEREDO_FLOW_FREED",
    "EVENT_TUNNEL_TEREDO_V4FLOW_CREATED",
    "EVENT_TUNNEL_TEREDO_V6FLOW_CREATED",
    "EVENT_TUNNEL_TEREDO_WFP_CLONE_LIST_NULL",
    "EVENT_TUNNEL_UNKNOWN_INTERFACE",
    "EVENT_TUNNEL_V4ADDRESS_ASSOCIATED_WITH_INTERFACE",
    "EtwEx_tidActivityInfoTransfer",
    "FWPM_CONDITION_DIRECTION",
    "FWPM_LAYER_ALE_FLOW_ESTABLISHED_V4",
    "FWPM_LAYER_DATAGRAM_DATA_V4",
    "GsDriverEntry",
    "HashTableUninitializedEvent",
    "IN6_IS_ADDR_ISATAP",
    "IN6_IS_ADDR_TEREDO",
    "IN6_IS_ADDR_V4COMPAT",
    "IPHTTPS_INTERFACE_GUID",
    "IoDevObjCreateDeviceSecure",
    "IoDeviceObjectType",
    "IopDevObjApplyPostCreationSettings",
    "LwDequeueAll",
    "LwEnqueue",
    "LwInitializeQueue",
    "LwLockQueue",
    "LwUninitializeQueue",
    "LwUnlockQueue",
    "LwWorker",
    "MS_TUNNEL_DRIVER_PROVIDER_ID",
    "MS_TUNNEL_DRIVER_PROVIDER_ID_Context",
    "McGenControlCallbackV2",
    "McGenEventRegister",
    "McGenEventUnregister",
    "McGenEventWrite",
    "McTemplateK0",
    "McTemplateK0q",
    "McTemplateK0qbr0br0",
    "McTemplateK0qq",
    "McTemplateK0qqhh",
    "McTemplateK0qqq",
    "McTemplateK0qqqbr0br0q",
    "McTemplateK0qqqqq",
    "McTemplateK0xxx",
    "MicrosoftTelemetryAssertTriggeredMsgKM",
    "MicrosoftTelemetryAssertTriggeredWorker",
    "Microsoft_Windows_Networking_CorrelationEnabled",
    "Microsoft_Windows_Networking_CorrelationHandle",
    "Microsoft_Windows_Networking_CorrelationId",
    "Microsoft_Windows_Networking_CorrelationTraceActivityPayload",
    "Microsoft_Windows_Networking_Correlation_EtwEnableCallback",
    "Microsoft_Windows_Networking_ProviderId",
    "Microsoft_Windows_TunnelDriverEnableBits",
    "Microsoft_Windows_TunnelDriverKeywords",
    "Microsoft_Windows_TunnelDriverLevels",
    "NPI_MS_IPV4_MODULEID",
    "NPI_MS_IPV6_MODULEID",
    "NPI_MS_NDIS_MODULEID",
    "NPI_MS_TUN_MODULEID",
    "NPI_NETWORK_LAYER_ID",
    "NetioExpandKernelStackAndCallout",
    "NetioRetreatNetBuffer",
    "PfnIoCreateDeviceSecure",
    "PiRegStateDiscriptor",
    "PiRegStateOpenClassKey",
    "PiRegStateReadStackCreationSettingsFromKey",
    "PiRegStateSysAllInherittedSecurityDescriptor",
    "PnpRecordIndex",
    "PnpRecords",
    "PpRegStateReadCreateClassCreationSettings",
    "PpRegStateUpdateStackCreationSettings",
    "RoDereferenceEx",
    "RoReferenceEx",
    "RtlAcquireReadLock",
    "RtlAcquireWriteLock",
    "RtlReleaseWriteLock",
    "SIXTOFOUR_INTERFACE_GUID",
    "SeSddlSecurityDescriptorFromSDDL",
    "SeUtilSecurityInfoFromSecurityDescriptor",
    "SepSddlAddAceToAcl",
    "SepSddlDaclFromSDDLString",
    "SepSddlGetAclForString",
    "SepSddlGetSidForString",
    "SepSddlLookupAccessMaskInTable",
    "SepSddlParseWideStringUlong",
    "SepSddlSecurityDescriptorFromSDDLString",
    "TEREDO_INTERFACE_GUID",
    "TEREDO_WFP_CALLOUT_V4",
    "TEREDO_WFP_FLOW_ESTABLISHED_CALLOUT_V4",
    "TEREDO_WFP_SUBLAYER",
    "TUNNEL_DEVICE_CLASS_GUID",
    "TUNNEL_DEVICE_OBJECT_SDDL",
    "TUNNEL_DEVICE_OBJECT_SDDL_buffer",
    "TUNNEL_IPTLS_DISPATCH_TABLE",
    "TUNNEL_TEREDO_DEVICE_OBJECT_SDDL",
    "TUNNEL_TEREDO_DEVICE_OBJECT_SDDL_buffer",
    "TeredoInitializeHashTable",
    "TeredoRegisterWithWfp",
    "TeredoUninitializeHashTable",
    "TeredoUnregisterWithWfp",
    "TeredoWfpDereferenceFlowContextImp",
    "TeredoWfpEnableOffload",
    "TeredoWfpIndicationWorker",
    "TeredoWfpInjectComplete",
    "TeredoWfpInjectPacket",
    "TeredoWfpInjectionWorker",
    "TeredoWfpInsertHashEntryInLockedBucket",
    "TeredoWfpLocateOrCreateV4Flow",
    "TeredoWfpLocateOrCreateV6Flow",
    "TeredoWfpOffloadSendNbl",
    "TeredoWfpProviderGuid",
    "TeredoWfpQueryCachedState",
    "TeredoWfpQueryDelegatedState",
    "TeredoWfpRemoveHashEntry",
    "TeredoWfpTerminateOffload",
    "TeredoWfpTryToOffloadFlow",
    "TeredoWfpV6AddressTupleToHash",
    "TraceLoggingUnregister",
    "Tunnel6to4PacketIntegrityCheck",
    "TunnelCompletePendingNdisAppSends",
    "TunnelControlDeviceUserPath",
    "TunnelControlDeviceUserPath_buffer",
    "TunnelConvertInterfaceIndexToLuid",
    "TunnelDereferenceDriver",
    "TunnelDriverDispatchCleanup",
    "TunnelDriverDispatchClose",
    "TunnelDriverDispatchCreate",
    "TunnelDriverDispatchDevControl",
    "TunnelDriverDispatchRead",
    "TunnelDriverDispatchUnsupported",
    "TunnelDriverDispatchWrite",
    "TunnelDriverUnload",
    "TunnelGetDlAddressFromNblHelper",
    "TunnelGetTunnelFromGuid",
    "TunnelGetTunnelInterfaceSize",
    "TunnelGetTunnelTypeParameters",
    "TunnelGlobal",
    "TunnelIndicateStatus",
    "TunnelInitNetworkAddress",
    "TunnelInitOpenNdisConfiguration",
    "TunnelInitSetGeneralAttributes",
    "TunnelInitializeDriver",
    "TunnelInitializeTimer",
    "TunnelInitializeWorkQueue",
    "TunnelInsertPhysicalInterfaceAssociationForTunnel",
    "TunnelInsertPotentialRouterForTunnel",
    "TunnelInterfaceDereferenceExImp",
    "TunnelIpTlsInitializeSpecific",
    "TunnelIsNlLocalAddressAssociatedWithTunnel",
    "TunnelIsPhysicalInterfaceAssociatedWithTunnel",
    "TunnelIsPotentialRouterAssociatedWithTunnel",
    "TunnelIsV4AddressAssociatedWithPhysicalInterface",
    "TunnelIsatapPacketIntegrityCheck",
    "TunnelMiniportCancelDirectOidRequest",
    "TunnelMiniportCancelOidRequest",
    "TunnelMiniportCancelSend",
    "TunnelMiniportCleanupOrphanLWMs",
    "TunnelMiniportDirectOidRequest",
    "TunnelMiniportHaltLWM",
    "TunnelMiniportInitializeLWM",
    "TunnelMiniportOidRequest",
    "TunnelMiniportPause",
    "TunnelMiniportRestart",
    "TunnelMiniportReturnNetBufferLists",
    "TunnelMiniportSendNetBufferLists",
    "TunnelNlCloseNlClient",
    "TunnelNlCompleteSendNetBufferListChain",
    "TunnelNlDereferenceNlBinding",
    "TunnelNlDeregisterNlClient",
    "TunnelNlFindReceiver",
    "TunnelNlGetCurrentAddress",
    "TunnelNlGetIndexForLocalAddress",
    "TunnelNlGetNextHopInterface",
    "TunnelNlGetPhysicalInterface",
    "TunnelNlGetSourceAddressForSend",
    "TunnelNlGetSourceAndDestinationV4",
    "TunnelNlGetSourceAndDestinationV6",
    "TunnelNlGetUnconstrainedPreferredSourceAddressForSendHelper",
    "TunnelNlHaltTunnel",
    "TunnelNlInitializeLocalAddressObject",
    "TunnelNlMapIcmpStub",
    "TunnelNlMapIcmpv4ToIcmpv6",
    "TunnelNlMapInnerSourceToOuter",
    "TunnelNlPauseTunnel",
    "TunnelNlPowerTransition",
    "TunnelNlQueryMediaConnectStatus",
    "TunnelNlReceiveHelper",
    "TunnelNlRegisterNlClient",
    "TunnelNlReturnNetBufferLists",
    "TunnelNlSendNetBufferList",
    "TunnelNlSendNetBufferListCalloutRoutine",
    "TunnelNlSendSingleNetBufferList",
    "TunnelNlSetCurrentAddress",
    "TunnelNlcAddAddressNotification",
    "TunnelNlcAttachNlProvider",
    "TunnelNlcCleanupNlProviderContext",
    "TunnelNlcDeleteAddressNotification",
    "TunnelNlcDetachNlProvider",
    "TunnelNlcDispatch",
    "TunnelNlcNotify",
    "TunnelNlcReceiveControlMessage",
    "TunnelNlcReceiveDatagrams",
    "TunnelNlcUpdateInterfaceNotification",
    "TunnelP2mpInitializeSpecific",
    "TunnelP2mpQueryAcceptPacket",
    "TunnelP2pGetPhysicalInterface",
    "TunnelP2pInitializeSpecific",
    "TunnelP2pMapInnerSourceToOuter",
    "TunnelP2pPacketIntegrityCheck",
    "TunnelP2pQueryAcceptPacket",
    "TunnelPnpLogRequestCancellation",
    "TunnelPnpLogRequestCompletion",
    "TunnelProcessorAddCallback",
    "TunnelQueryInformation",
    "TunnelReferenceDriver",
    "TunnelReferenceLocalAddressByRequest",
    "TunnelRegisterDevice",
    "TunnelRemoveAllPhysicalInterfaceAssociationForTunnel",
    "TunnelRemoveAllPotentialRoutersForTunnel",
    "TunnelRemovePhysicalInterfaceAssociationForTunnel",
    "TunnelRemoveV4AddressAssociationForTunnel",
    "TunnelRunningOnXboxOne",
    "TunnelServiceReadRequests",
    "TunnelSetDirectInformation",
    "TunnelSetInformation",
    "TunnelSetInitialize",
    "TunnelStopEtwTrace",
    "TunnelSupportedOidArray",
    "TunnelTelemetryDriverInitialization",
    "TunnelTelemetryMiniportInitialization",
    "TunnelTeredoDispatchIoControl",
    "TunnelTeredoGetPhysicalInterface",
    "TunnelTeredoInitializeSpecific",
    "TunnelTeredoOffloadSendNbl",
    "TunnelTeredoReclaimInactiveFlows",
    "TunnelTeredoSetCurrentAddress",
    "TunnelTeredoSupportsOffload",
    "TunnelTeredoWfpDereference",
    "TunnelTimeoutRoutine",
    "TunnelTimeoutWorkItemRoutine",
    "TunnelTrimOffloadableSendNbls",
    "TunnelUninitializeTimer",
    "TunnelUninitializeWorkQueue",
    "TunnelUpdateLinkSpeed",
    "TunnelUserAllocateNblForIndication",
    "TunnelUserAllocateNblsForIrp",
    "TunnelUserAllocatePacketPools",
    "TunnelUserBatchedWriteFile",
    "TunnelUserCancelPendingReads",
    "TunnelUserCleanupFile",
    "TunnelUserCreateFile",
    "TunnelUserDequeueReadIrp",
    "TunnelUserDequeueWriteIrp",
    "TunnelUserDestroyDevice",
    "TunnelUserDispatchIoControl",
    "TunnelUserFreePacketPools",
    "TunnelUserFreeWorkItem",
    "TunnelUserGetCurrentAddress",
    "TunnelUserGetNextHopInterfaceV4",
    "TunnelUserGetNextReadIrp",
    "TunnelUserGetPacketLength",
    "TunnelUserGetPhysicalInterface",
    "TunnelUserGetSourceAndDestination",
    "TunnelUserGetTunnelForDevice",
    "TunnelUserHaltTunnel",
    "TunnelUserIoCancelIrp",
    "TunnelUserIoCancelRead",
    "TunnelUserIoCancelWrite",
    "TunnelUserMapIcmpStub",
    "TunnelUserMapInnerSourceToOuter",
    "TunnelUserOffloadSendNbl",
    "TunnelUserPacketIntegrityCheck",
    "TunnelUserPauseOrPowerDown",
    "TunnelUserPauseTunnel",
    "TunnelUserPowerTransition",
    "TunnelUserQueryAcceptPacket",
    "TunnelUserQueryMediaConnectStatus",
    "TunnelUserReadFile",
    "TunnelUserReceiveIndicationWorker",
    "TunnelUserReclaimInactiveFlows",
    "TunnelUserRestoreAndFreeNblAndNbState",
    "TunnelUserReturnNetBufferLists",
    "TunnelUserSatisfyRead",
    "TunnelUserSendNBLDpc",
    "TunnelUserSendNetBufferList",
    "TunnelUserServiceBatchedReadRequests",
    "TunnelUserServiceWriteRequest",
    "TunnelUserSetCurrentAddress",
    "TunnelUserSignalCloseComplete",
    "TunnelUserSnapshotNblAndNbState",
    "TunnelUserSupportsOffload",
    "TunnelUserTimeoutHandler",
    "TunnelUserValidateRwIrp",
    "TunnelUserWriteFile",
    "TunnelWorkQueueRoutine",
    "TwCalloutIdV4",
    "TwKernelOffloadV4FlowParams",
    "TwOffloadCounters",
    "TwUdpHeaderPool",
    "TwUdpHeaderPoolInitialized",
    "WPPTraceSuite",
    "WPP_085f9a43e63b369d61fb0308324d7e3f_Traceguids",
    "WPP_GLOBAL_Control",
    "WPP_MAIN_CB",
    "WPP_SF_",
    "WPP_SF_D",
    "WPP_SF_DD",
    "WPP_SF_DDD",
    "WPP_SF_Ddd",
    "WPP_SF_qD",
    "WPP_ThisDir_CTLGUID_NETIO",
    "WPP_e9624925511a3b35fb6ec80170aceab9_Traceguids",
    "WPP_f2e0cfa3496e3344d1c04e92ad82061b_Traceguids",
    "WdmlibInit",
    "WdmlibInitialized",
    "WdmlibIoCreateDeviceSecure",
    "WdmlibRtlInitUnicodeStringEx",
    "WppClassicProviderCallback",
    "WppCleanupKm",
    "WppInitKm",
    "WppIsEqualGuid",
    "WppLoadTracingSupport",
    "WppTraceCallback",
    "_TlgCreateSz",
    "_TlgDefineProvider_annotation__Tlgg_TunnelTelemetryProviderProv",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertDiagTrackProv",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertDiagTrack_KMProv",
    "_TlgDefineProvider_annotation__Tlgmtakm_hTelemetryAssertProv",
    "_TlgEnableCallback",
    "_TlgWrite",
    "_TraceLoggingMetadata",
    "_TraceLoggingMetadataEnd",
    "__@@_PchSym_@00@KxulyqvxgPillgKxulmvxlivfzkUmvgUmvgrlUrksokhexUgfmmvoUmgUlyquivUznwGEUkivxlnkOlyq@tunnel",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__IMPORT_DESCRIPTOR_NDIS",
    "__IMPORT_DESCRIPTOR_NETIO",
    "__IMPORT_DESCRIPTOR_fwpkclnt",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_ConvertInterfaceGuidToLuid",
    "__imp_ConvertInterfaceLuidToIndex",
    "__imp_DbgkWerCaptureLiveKernelDump",
    "__imp_EtwRegister",
    "__imp_EtwSetInformation",
    "__imp_EtwUnregister",
    "__imp_EtwWriteTransfer",
    "__imp_ExAllocatePoolWithTag",
    "__imp_ExDeleteNPagedLookasideList",
    "__imp_ExFreePoolWithTag",
    "__imp_ExInitializeNPagedLookasideList",
    "__imp_ExQueryDepthSList",
    "__imp_ExpInterlockedPopEntrySList",
    "__imp_ExpInterlockedPushEntrySList",
    "__imp_FwpiParseIPv6Protocol0",
    "__imp_FwpmCalloutAdd0",
    "__imp_FwpmEngineClose0",
    "__imp_FwpmEngineOpen0",
    "__imp_FwpmFilterAdd0",
    "__imp_FwpmProviderAdd0",
    "__imp_FwpmSubLayerAdd0",
    "__imp_FwpmTransactionAbort0",
    "__imp_FwpmTransactionBegin0",
    "__imp_FwpmTransactionCommit0",
    "__imp_FwpsAllocateCloneNetBufferList0",
    "__imp_FwpsCalloutRegister0",
    "__imp_FwpsCalloutUnregisterById0",
    "__imp_FwpsDereferenceNetBufferList0",
    "__imp_FwpsFlowAssociateContext0",
    "__imp_FwpsFlowRemoveContext0",
    "__imp_FwpsFreeCloneNetBufferList0",
    "__imp_FwpsInjectTransportSendAsync0",
    "__imp_FwpsInjectionHandleCreate0",
    "__imp_FwpsInjectionHandleDestroy0",
    "__imp_FwpsQueryPacketInjectionState0",
    "__imp_FwpsReferenceNetBufferList0",
    "__imp_IoAllocateWorkItem",
    "__imp_IoBuildPartialMdl",
    "__imp_IoCreateDevice",
    "__imp_IoCreateSymbolicLink",
    "__imp_IoDeleteDevice",
    "__imp_IoDeleteSymbolicLink",
    "__imp_IoDeviceObjectType",
    "__imp_IoFreeWorkItem",
    "__imp_IoInitializeWorkItem",
    "__imp_IoIsWdmVersionAvailable",
    "__imp_IoQueueWorkItem",
    "__imp_IoQueueWorkItemEx",
    "__imp_IoReleaseCancelSpinLock",
    "__imp_IoSizeofWorkItem",
    "__imp_IoUninitializeWorkItem",
    "__imp_IoWMIRegistrationControl",
    "__imp_IofCompleteRequest",
    "__imp_KeAcquireInStackQueuedSpinLock",
    "__imp_KeAcquireInStackQueuedSpinLockAtDpcLevel",
    "__imp_KeAcquireSpinLockAtDpcLevel",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeCancelTimer",
    "__imp_KeEnterCriticalRegion",
    "__imp_KeExpandKernelStackAndCalloutEx",
    "__imp_KeFlushQueuedDpcs",
    "__imp_KeGetCurrentProcessorNumberEx",
    "__imp_KeInitializeDpc",
    "__imp_KeInitializeEvent",
    "__imp_KeInitializeMutex",
    "__imp_KeInitializeSpinLock",
    "__imp_KeInitializeTimerEx",
    "__imp_KeInsertQueueDpc",
    "__imp_KeLeaveCriticalRegion",
    "__imp_KeLowerIrql",
    "__imp_KeQueryTimeIncrement",
    "__imp_KeReleaseInStackQueuedSpinLock",
    "__imp_KeReleaseInStackQueuedSpinLockFromDpcLevel",
    "__imp_KeReleaseMutex",
    "__imp_KeReleaseSpinLock",
    "__imp_KeReleaseSpinLockFromDpcLevel",
    "__imp_KeResetEvent",
    "__imp_KeSetCoalescableTimer",
    "__imp_KeSetEvent",
    "__imp_KeSetImportanceDpc",
    "__imp_KeTestSpinLock",
    "__imp_KeWaitForSingleObject",
    "__imp_KfRaiseIrql",
    "__imp_MmBuildMdlForNonPagedPool",
    "__imp_MmGetSystemRoutineAddress",
    "__imp_MmMapLockedPagesSpecifyCache",
    "__imp_NdisAdjustNetBufferCurrentMdl",
    "__imp_NdisAdvanceNetBufferDataStart",
    "__imp_NdisAllocateCloneNetBufferList",
    "__imp_NdisAllocateNetBufferList",
    "__imp_NdisAllocateNetBufferListPool",
    "__imp_NdisCloseConfiguration",
    "__imp_NdisConvertNdisStatusToNtStatus",
    "__imp_NdisFreeCloneNetBufferList",
    "__imp_NdisFreeNetBufferList",
    "__imp_NdisFreeNetBufferListPool",
    "__imp_NdisGetDataBuffer",
    "__imp_NdisLWMDeregisterMiniportDriver",
    "__imp_NdisLWMInitializeNetworkInterface",
    "__imp_NdisLWMRegisterMiniportDriver",
    "__imp_NdisLWMStartNetworkInterface",
    "__imp_NdisLWMUninitializeNetworkInterface",
    "__imp_NdisMIndicateReceiveNetBufferLists",
    "__imp_NdisMIndicateStatusEx",
    "__imp_NdisMOidRequestComplete",
    "__imp_NdisMPauseComplete",
    "__imp_NdisMSendNetBufferListsComplete",
    "__imp_NdisMSetMiniportAttributes",
    "__imp_NdisOpenConfigurationEx",
    "__imp_NdisReadNetworkAddress",
    "__imp_NdisRetreatNetBufferDataStart",
    "__imp_NetioAllocateAndInitializeStackBlock",
    "__imp_NetioAllocateAndReferenceCloneNetBufferListEx",
    "__imp_NetioAllocateAndReferenceCopyNetBufferListEx",
    "__imp_NetioAllocateMdl",
    "__imp_NetioCompleteCopyNetBufferListChain",
    "__imp_NetioDereferenceNetBufferList",
    "__imp_NetioDereferenceNetBufferListChain",
    "__imp_NetioFreeCloneNetBufferList",
    "__imp_NetioFreeMdl",
    "__imp_NetioFreeStackBlock",
    "__imp_NetioInitializeNetBufferListLibrary",
    "__imp_NetioRegisterProcessorAddCallback",
    "__imp_NetioStackBlockProcessorAddHandler",
    "__imp_NetioUnInitializeNetBufferListLibrary",
    "__imp_NetioUnRegisterProcessorAddCallback",
    "__imp_NmrClientAttachProvider",
    "__imp_NmrClientDetachProviderComplete",
    "__imp_NmrDeregisterClient",
    "__imp_NmrRegisterClient",
    "__imp_NmrWaitForClientDeregisterComplete",
    "__imp_NsiGetAllParameters",
    "__imp_NsiGetParameter",
    "__imp_ObOpenObjectByPointer",
    "__imp_RtlAbsoluteToSelfRelativeSD",
    "__imp_RtlAddAccessAllowedAce",
    "__imp_RtlCopyBufferToMdl",
    "__imp_RtlCopyMdlToBuffer",
    "__imp_RtlCopyMdlToMdl",
    "__imp_RtlCreateSecurityDescriptor",
    "__imp_RtlFreeUnicodeString",
    "__imp_RtlGetDaclSecurityDescriptor",
    "__imp_RtlGetGroupSecurityDescriptor",
    "__imp_RtlGetOwnerSecurityDescriptor",
    "__imp_RtlGetSaclSecurityDescriptor",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlLengthSecurityDescriptor",
    "__imp_RtlLengthSid",
    "__imp_RtlSetDaclSecurityDescriptor",
    "__imp_SeCaptureSecurityDescriptor",
    "__imp_SeExports",
    "__imp_WfpNblInfoClone",
    "__imp_WfpNblInfoSetFlags",
    "__imp_ZwClose",
    "__imp_ZwCreateKey",
    "__imp_ZwOpenKey",
    "__imp_ZwQueryLicenseValue",
    "__imp_ZwQueryObject",
    "__imp_ZwQueryValueKey",
    "__imp_ZwSetSecurityObject",
    "__imp_ZwSetValueKey",
    "__imp__snwprintf",
    "__imp__wcsnicmp",
    "__imp_wcschr",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "g_AssertSpinLock",
    "g_AssertsOperational",
    "g_MicrosoftTelemetryAssertsTriggeredList",
    "g_ModuleName",
    "g_TeredoWfpValueIndices",
    "g_TunnelIpTlsNtDevicePath",
    "g_TunnelIpTlsNtDevicePath_buffer",
    "g_TunnelIpTlsUserDevicePath",
    "g_TunnelIpTlsUserDevicePath_buffer",
    "g_TunnelTeredoNtDevicePath",
    "g_TunnelTeredoNtDevicePath_buffer",
    "g_TunnelTeredoUserDevicePath",
    "g_TunnelTeredoUserDevicePath_buffer",
    "in6addr_6to4prefix",
    "in6addr_teredoprefix",
    "in6addr_teredoprefix_old",
    "in6addr_v4mappedprefix",
    "memcmp",
    "memcpy",
    "memmove",
    "memset",
    "pfnEtwRegisterClassicProvider",
    "pfnEtwUnregister",
    "pfnWppGetVersion",
    "pfnWppQueryTraceInformation",
    "pfnWppTraceMessage",
    "\u007fNDIS_NULL_THUNK_DATA",
    "\u007fNETIO_NULL_THUNK_DATA",
    "\u007ffwpkclnt_NULL_THUNK_DATA",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}