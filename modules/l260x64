{
  "symbols": [
    "??_C@_08NBKJEDGC@ATTCLxxx?$AA@FNODOBFM@",
    "??_C@_08PLBGEIEH@ATTCL002?$AA@FNODOBFM@",
    "??_C@_1BC@DBFPMDMI@?$AAM?$AAo?$AAd?$AAe?$AAr?$AAa?$AAt?$AAe?$AA?$AA@",
    "??_C@_1BE@IIEFMAJ@?$AAM?$AAe?$AAd?$AAi?$AAa?$AAT?$AAy?$AAp?$AAe?$AA?$AA@",
    "??_C@_1BI@DFOPNFAC@?$AAM?$AAa?$AAx?$AAR?$AAx?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@",
    "??_C@_1BI@DLJDGJIH@?$AAM?$AAa?$AAx?$AAT?$AAx?$AAB?$AAu?$AAf?$AAf?$AAe?$AAr?$AA?$AA@",
    "??_C@_1BI@JDCIAHNE@?$AAF?$AAl?$AAo?$AAw?$AAC?$AAo?$AAn?$AAt?$AAr?$AAo?$AAl?$AA?$AA@",
    "??_C@_1BK@GKKOBGH@?$AAM?$AAa?$AAx?$AAI?$AAn?$AAt?$AAe?$AAr?$AAr?$AAu?$AAp?$AAt?$AA?$AA@",
    "??_C@_1BK@NLAAICDP@?$AAS?$AAh?$AAu?$AAt?$AAd?$AAo?$AAw?$AAn?$AAW?$AAa?$AAk?$AAe?$AA?$AA@",
    "??_C@_1CA@EJNDNJBE@?$AAB?$AAI?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAl?$AA?$AA@",
    "??_C@_1CA@MGLBEOED@?$AAB?$AAI?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAh?$AA?$AA@",
    "??_C@_1CE@EMAFJEBD@?$AA?2?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AA?2?$AAH?$AAy?$AAp?$AAe?$AAr?$AAi?$AAo?$AAn?$AA?4?$AA?$AA@FNODOBFM@",
    "??_C@_1CG@GPPDECPD@?$AAW?$AAa?$AAk?$AAe?$AAU?$AAp?$AAC?$AAa?$AAp?$AAa?$AAb?$AAi?$AAl?$AAi?$AAt?$AAi?$AAe?$AAs?$AA?$AA@",
    "??_C@_1CK@GHHGENOO@?$AAU?$AAS?$AAE?$AAR?$AAD?$AAE?$AAF?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAl?$AA?$AA@",
    "??_C@_1CK@OIBENKLJ@?$AAU?$AAS?$AAE?$AAR?$AAD?$AAE?$AAF?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAh?$AA?$AA@",
    "??_C@_1CM@GKDPHBMF@?$AA?2?$AAD?$AAo?$AAs?$AAD?$AAe?$AAv?$AAi?$AAc?$AAe?$AAs?$AA?2?$AAH?$AAy?$AAp?$AAe?$AAr?$AAi?$AAo?$AAn?$AA?4?$AA?$AA@FNODOBFM@",
    "??_C@_1DA@FCDDOMJB@?$AAs?$AAt?$AAr?$AAU?$AAS?$AAE?$AAR?$AAD?$AAE?$AAF?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAh?$AA?$AA@",
    "??_C@_1DA@NNFBHLMG@?$AAs?$AAt?$AAr?$AAU?$AAS?$AAE?$AAR?$AAD?$AAE?$AAF?$AAM?$AAa?$AAc?$AAA?$AAd?$AAd?$AAd?$AAr?$AAe?$AAs?$AAs?$AA_?$AAl?$AA?$AA@",
    "??_C@_1O@LLICMBKN@?$AAV?$AAl?$AAa?$AAn?$AAI?$AAd?$AA?$AA@",
    "??_C@_1O@OFBIJOJC@?$AA?$CF?$AAs?$AA?$CF?$AA0?$AA2?$AAd?$AA?$AA@FNODOBFM@",
    "AdapterInitialize",
    "AdapterReadRegConfiguration",
    "AdapterUninitialize",
    "ControlDeviceObject",
    "DeviceCreate",
    "DispatchIoControl",
    "DmaAllocateDescriptor",
    "DmaFreeBuffer",
    "DmaFreeDescriptor",
    "DmaInitialize",
    "DmaReceiveData",
    "DmaReturnNetBufferLists",
    "DmaSendComplete",
    "DmaSendNetBufferList",
    "DriverEntry",
    "GsDriverEntry",
    "HardwareAddWakeUpPattern",
    "HardwareEnableInterrupt",
    "HardwareGetGeneralInfo",
    "HardwareGetMacAddress",
    "HardwareInit",
    "HardwareIssueReset",
    "HardwarePowerDown",
    "HardwarePowerSavingWithoutWOL",
    "HardwarePowerUp",
    "HardwareQueryInterrupt",
    "HardwareReadPhyRegister",
    "HardwareRefreshLinkStatus",
    "HardwareRegisterTest",
    "HardwareRemoveWakeUpPattern",
    "HardwareReset",
    "HardwareStart",
    "HardwareStop",
    "HardwareUpdateMailBox",
    "HardwareUpdateMulticastList",
    "HardwareUpdatePacketFilter",
    "HardwareUpdateWakeUpOption",
    "HardwareWritePhyRegister",
    "HotPatchBuffer",
    "IoControl",
    "MiniportCancelOidRequest",
    "MiniportCancelSendPackets",
    "MiniportCheckForHang",
    "MiniportCount",
    "MiniportDisableInterrupt",
    "MiniportDriverContext",
    "MiniportEnableInterrupt",
    "MiniportHalt",
    "MiniportHandleInterrupt",
    "MiniportInitializeEx",
    "MiniportIsr",
    "MiniportOidRequest",
    "MiniportPause",
    "MiniportPnPEventNotify",
    "MiniportQueryInformation",
    "MiniportQueryStatisticInfo",
    "MiniportReset",
    "MiniportRestart",
    "MiniportReturnNetBufferLists",
    "MiniportSendNetBufferLists",
    "MiniportSetInformation",
    "MiniportShutdown",
    "MiniportUnload",
    "MpCopyNetBuffer",
    "NICSupportedOids",
    "NdisDeviceHandle",
    "NdisMiniportDriverHandle",
    "PhyCdtTest",
    "PhyInit",
    "PhyRefreshStatus",
    "PhyReset",
    "RegTable",
    "RtlUnicodeStringPrintf",
    "SaveHWMactoWinMac",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__IMPORT_DESCRIPTOR_HAL",
    "__IMPORT_DESCRIPTOR_NDIS",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__imp_IofCompleteRequest",
    "__imp_KeAcquireSpinLockAtDpcLevel",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeBugCheckEx",
    "__imp_KeReleaseSpinLock",
    "__imp_KeReleaseSpinLockFromDpcLevel",
    "__imp_KeStallExecutionProcessor",
    "__imp_MmMapLockedPagesSpecifyCache",
    "__imp_NdisAllocateMdl",
    "__imp_NdisAllocateMemoryWithTagPriority",
    "__imp_NdisAllocateNetBufferAndNetBufferList",
    "__imp_NdisAllocateNetBufferListPool",
    "__imp_NdisCloseConfiguration",
    "__imp_NdisFreeMdl",
    "__imp_NdisFreeMemory",
    "__imp_NdisFreeNetBufferList",
    "__imp_NdisFreeNetBufferListPool",
    "__imp_NdisGetDeviceReservedExtension",
    "__imp_NdisMAllocateSharedMemory",
    "__imp_NdisMDeregisterInterruptEx",
    "__imp_NdisMDeregisterMiniportDriver",
    "__imp_NdisMDeregisterScatterGatherDma",
    "__imp_NdisMFreeSharedMemory",
    "__imp_NdisMGetBusData",
    "__imp_NdisMIndicateReceiveNetBufferLists",
    "__imp_NdisMIndicateStatusEx",
    "__imp_NdisMMapIoSpace",
    "__imp_NdisMRegisterInterruptEx",
    "__imp_NdisMRegisterMiniportDriver",
    "__imp_NdisMRegisterScatterGatherDma",
    "__imp_NdisMSendNetBufferListsComplete",
    "__imp_NdisMSetBusData",
    "__imp_NdisMSetMiniportAttributes",
    "__imp_NdisMSleep",
    "__imp_NdisMSynchronizeWithInterruptEx",
    "__imp_NdisMUnmapIoSpace",
    "__imp_NdisOpenConfigurationEx",
    "__imp_NdisReadConfiguration",
    "__imp_NdisReadNetworkAddress",
    "__imp_NdisRegisterDeviceEx",
    "__imp_NdisWriteConfiguration",
    "__imp_NdisWriteErrorLogEntry",
    "__imp__vsnwprintf",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "memcmp",
    "memcpy",
    "memmove",
    "memset",
    "strBIMacAdddress_h",
    "strBIMacAdddress_l",
    "strUSERDEFMacAdddress_h",
    "strUSERDEFMacAdddress_l",
    "\u007fHAL_NULL_THUNK_DATA",
    "\u007fNDIS_NULL_THUNK_DATA",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}