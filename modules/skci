{
  "symbols": [
    "??_C@_07HNMNMMHJ@?$AG?$AF?$CL?$AO?$AD?$AC?$BK@",
    "??_C@_09GKOEPDAC@?$AG?$AF?$CL?$AO?$AD?$AC?$BK?$AF?$AA@",
    "??_C@_0BC@ECLGBJGA@1?43?46?41?45?45?47?43?43@",
    "??_C@_0BC@ECLGBJGA@1?43?46?41?45?45?47?43?43@LBKOJDO@",
    "??_C@_0BC@KBECMAKL@1?43?46?41?45?45?47?43?48@LBKOJDO@",
    "??_C@_0BH@BJBPIJJA@1?43?46?41?44?41?4311?410?43?45@",
    "??_C@_0BH@BPPLBNLC@1?43?46?41?44?41?4311?476?48?41@",
    "??_C@_0BH@DCDCNKFD@1?43?46?41?44?41?4311?410?43?46@",
    "??_C@_0BH@MIPKJKLD@1?43?46?41?44?41?4311?476?43?41@",
    "??_C@_0BH@ONJBMFGP@1?43?46?41?44?41?4311?476?45?41@",
    "??_C@_0BH@OOFPJJAG@1?43?46?41?44?41?4311?461?44?41@",
    "??_C@_0BI@BDCPPHI@1?43?46?41?44?41?4311?410?43?423@",
    "??_C@_0BI@BICJMODJ@1?43?46?41?44?41?4311?410?43?422@",
    "??_C@_0BI@BMKELCIL@1?43?46?41?44?41?4311?410?43?442@",
    "??_C@_0BI@CKBPKMLL@1?43?46?41?44?41?4311?410?43?420@",
    "??_C@_0BI@DDAEJNPK@1?43?46?41?44?41?4311?410?43?421@",
    "??_C@_0BI@DHIJOBEI@1?43?46?41?44?41?4311?410?43?441@",
    "??_C@_0BI@EOHDGJLP@1?43?46?41?44?41?4311?410?43?424@",
    "??_C@_0BI@FHGIFIPO@1?43?46?41?44?41?4311?410?43?425@",
    "??_C@_0BI@GEJMFAEL@1?43?46?41?44?41?4311?410?43?437@",
    "??_C@_0BI@HMEFALDN@1?43?46?41?44?41?4311?410?43?426@",
    "??_C@_0BI@PJJLKJKL@1?43?46?41?44?41?4311?410?43?419@",
    "??_C@_0BI@PKBPHNMF@1?43?46?41?44?41?4311?410?43?439@",
    "??_C@_0L@CEBBPIKE@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF@",
    "??_C@_0M@CJJJLON@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB@",
    "??_C@_0M@CJLEMICO@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC@",
    "??_C@_0M@DAKPPJGP@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD@",
    "??_C@_0N@HPMGOFDJ@?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF?$AF?$AA@",
    "??_C@_0O@CAMPMPJE@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD?$AF?$AA@",
    "??_C@_0O@IKMGAHBP@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB?$AF?$AA@",
    "??_C@_0O@JIHDKIPB@?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC?$AF?$AA@",
    "??_C@_11LOCGONAA@@",
    "??_C@_13BBDEGPLJ@?$AA?$CK@",
    "??_C@_17NAJJNGIB@?$AAT?$AAB?$AAS@",
    "??_C@_19DFNIBDOA@?$AAE?$AAK?$AAU?$AAs@",
    "??_C@_19JKJDFOC@?$AA?4?$AAC?$AAI?$AAP@",
    "??_C@_19POHNNAHL@?$AAH?$AAa?$AAs?$AAh@",
    "??_C@_1BC@POKDNDGF@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm@",
    "??_C@_1BE@FJPJKHMN@?$AAK?$AAn?$AAo?$AAw?$AAn?$AAR?$AAo?$AAo?$AAt@",
    "??_C@_1BG@BGOGGINE@?$AAC?$AAI?$AA?2?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs@",
    "??_C@_1BG@CLIFBBMA@?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAI?$AAn?$AAf?$AAo@",
    "??_C@_1BI@CHOGEPIN@?$AAC?$AAI?$AA?2?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?2@",
    "??_C@_1BI@CJGIOPAN@?$AAP?$AAr?$AAo?$AAd?$AAu?$AAc?$AAt?$AAN?$AAa?$AAm?$AAe@",
    "??_C@_1BI@DAOJINKM@?$AAT?$AAe?$AAs?$AAt?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs@",
    "??_C@_1BI@LJHFMFCG@?$AAV?$AAa?$AAr?$AAF?$AAi?$AAl?$AAe?$AAI?$AAn?$AAf?$AAo@",
    "??_C@_1BK@GOJKBFDA@?$AAS?$AAi?$AAg?$AAn?$AAe?$AAd?$AAS?$AAc?$AAr?$AAi?$AAp?$AAt@",
    "??_C@_1BK@OCJLMIBB@?$AAI?$AAn?$AAt?$AAe?$AAr?$AAn?$AAa?$AAl?$AAN?$AAa?$AAm?$AAe@",
    "??_C@_1BM@FKHBBMAN@?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@",
    "??_C@_1BO@DGJAOBID@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA8@",
    "??_C@_1BO@FJCNABOH@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA2@",
    "??_C@_1BO@GOPDPBNF@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA7@",
    "??_C@_1BO@HMEGFODL@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA4@",
    "??_C@_1BO@IOCMIGOG@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA9@",
    "??_C@_1BO@MEPKDJFO@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA5@",
    "??_C@_1BO@NGEPJGLA@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA6@",
    "??_C@_1BO@OBJBGGIC@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA3@",
    "??_C@_1BO@PBBNDBNF@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAF?$AAi?$AAl?$AAe?$AAI?$AAn?$AAf?$AAo@",
    "??_C@_1CA@BAIHIGJP@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA0@",
    "??_C@_1CA@CDCCJHB@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CA@CHFJHGKN@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA5@",
    "??_C@_1CA@FOECMPGO@?$AAV?$AAS?$AA_?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA_?$AAI?$AAN?$AAF?$AAO@",
    "??_C@_1CA@JGBAIPOO@?$AAF?$AAi?$AAl?$AAe?$AAD?$AAe?$AAs?$AAc?$AAr?$AAi?$AAp?$AAt?$AAi?$AAo?$AAn@",
    "??_C@_1CA@JPCHJAPP@?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@",
    "??_C@_1CA@JPOFBBMI@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA4@",
    "??_C@_1CA@KIDLOBPK@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA1@",
    "??_C@_1CA@LKIOEOBE@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA2@",
    "??_C@_1CC@BJGKBCPB@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CC@CHBCEHAO@?$AAO?$AAr?$AAi?$AAg?$AAi?$AAn?$AAa?$AAl?$AAF?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm@",
    "??_C@_1CC@DMABENCN@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CC@IELNCKEI@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CC@JGAIIFKG@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CC@LDGDNKHK@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3@",
    "??_C@_1CE@GMLFPMDI@?$AAP?$AAr?$AAo?$AAd?$AAu?$AAc?$AAt?$AAi?$AAo?$AAn?$AAS?$AAi?$AAg?$AAn?$AAe@",
    "??_C@_1CG@CNALLOMA@?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs@",
    "??_C@_1CG@DAHIIJOI@?$AAW?$AAi?$AAn?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs@",
    "??_C@_1CG@HBJMKEGC@?$AAA?$AAT?$AAP?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs@",
    "??_C@_1CG@JLKGFBBD@?$AAT?$AAe?$AAs?$AAt?$AAs?$AAi?$AAg?$AAn?$AAi?$AAn?$AAg?$AAS?$AAi?$AAg?$AAn@",
    "??_C@_1CI@EDAEBDOB@?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAi?$AAg@",
    "??_C@_1CM@FGGCIMGD@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV@",
    "??_C@_1CM@NABDHEDK@?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS@",
    "??_C@_1CO@JFPCPMII@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAL?$AAi?$AAf?$AAe?$AAt?$AAi?$AAm?$AAe@",
    "??_C@_1DC@DODCOFOB@?$AAA?$AAT?$AAP?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa@",
    "??_C@_1DC@FBLHHCNL@?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa@",
    "??_C@_1DC@OCKBKPP@?$AAW?$AAi?$AAn?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa@",
    "??_C@_1DE@NKKELDJI@?$AAN?$AAo?$AAR?$AAe?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAi?$AAo?$AAn?$AAU@",
    "??_C@_1DI@HBNNJEFM@?$AAD?$AAr?$AAi?$AAv?$AAe?$AAr?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU@",
    "??_C@_1DO@LPBBDPCN@?$AAN?$AAo?$AAR?$AAe?$AAv?$AAa?$AAl?$AAi?$AAd?$AAa?$AAt?$AAi?$AAo?$AAn?$AAU@",
    "??_C@_1IK@GKAHCNJE@?$AA?2?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AAR?$AAo?$AAo?$AAt?$AA?2?$AAS?$AAy?$AAs@",
    "??_C@_1M@NBCIMFHI@?$AAC?$AAo?$AAu?$AAn?$AAt@",
    "??_C@_1O@JABJGAKP@?$AAL?$AAe?$AAv?$AAe?$AAl?$AAs@",
    "?CharMappings@?1??UCharTo2Chars@@9@9",
    "?MinCryptCopyAsn1IntToFixedBuffer@@YAJPEBEKPEAEK@Z",
    "?g_pEcurveP256@@3PEAU_SYMCRYPT_ECURVE@@EA",
    "?g_pEcurveP384@@3PEAU_SYMCRYPT_ECURVE@@EA",
    "?rgb2005DMDPreviewReleaseRoot_Name@@3QBEB",
    "?rgb2005DMDPreviewReleaseRoot_PubKeyInfo@@3QBEB",
    "?rgb2005DMDRoot_Name@@3QBEB",
    "?rgb2005DMDRoot_PubKeyInfo@@3QBEB",
    "?rgbMFDMDTestRoot_Name@@3QBEB",
    "?rgbMFDMDTestRoot_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftFlightRoot1_Name@@3QBEB",
    "?rgbMicrosoftFlightRoot1_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot0_Name@@3QBEB",
    "?rgbMicrosoftRoot0_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot1_Name@@3QBEB",
    "?rgbMicrosoftRoot1_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot2_Name@@3QBEB",
    "?rgbMicrosoftRoot2_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot3_Name@@3QBEB",
    "?rgbMicrosoftRoot3_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot4_Name@@3QBEB",
    "?rgbMicrosoftRoot4_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftRoot5_Name@@3QBEB",
    "?rgbMicrosoftRoot5_PubKeyInfo@@3QBEB",
    "?rgbMicrosoftThirdPartyMarketplaceRoot_Name@@3QBEB",
    "?rgbMicrosoftThirdPartyMarketplaceRoot_PubKeyInfo@@3QBEB",
    "?rgbTestRoot0_Name@@3QBEB",
    "?rgbTestRoot0_PubKeyInfo@@3QBEB",
    "?rgbTestRoot1_Name@@3QBEB",
    "?rgbTestRoot1_PubKeyInfo@@3QBEB",
    "CatNameValueOIDBlob",
    "CiAddPagesToPageHashContext",
    "CiAddSectionDataToVerificationContext",
    "CiCalculateAuthorID",
    "CiCalculateFirstPageHash",
    "CiCalculatePackedPolicySize",
    "CiCalculateUniqueID",
    "CiCheckPolicyBits",
    "CiCompareSigningLevels",
    "CiCreateImageHashContext",
    "CiCreatePageHashContextForImageMapping",
    "CiCreateVerificationContextForImageGeneratedPageHashes",
    "CiDeinitializeCatalogs",
    "CiDeleteCatalogEntry",
    "CiDeserializePolicyFileData",
    "CiEvaluatePolicyInfo",
    "CiFindFileOrHeaderHashInLoadedCatalogs",
    "CiFipsCheck",
    "CiFreeImageVerificationInfo",
    "CiFreeParallelHashingContexts",
    "CiGetCurrentSiloState",
    "CiGetFileOffsetAfterLastRawSectionData",
    "CiGetNextSignatureVerification",
    "CiInitializeCatalogs",
    "CiInitializeParallelHashingContexts",
    "CiInitializePolicyFromPolicies",
    "CiInitializeValidationContext",
    "CiIsFlightRootTrustDisabled",
    "CiIsSignatureTrustedForIum",
    "CiIsSignatureTrustedForVsmEnclaves",
    "CiIsSignatureWhqlBio",
    "CiPackPolicy",
    "CiParseRevocationList",
    "CiReleaseValidationContext",
    "CiSortAndCopyImageSectionTable",
    "CiUpdatePersistentVariablesAndUnregisterSigners",
    "CiValidateAndSetRevocationList",
    "CiValidateFullImagePages",
    "CiValidateImageHeaderMapping",
    "CiValidateImagePages",
    "CiVerifyAndAddCatalogToLoadedListWithID",
    "CiVerifyFileHashInLoadedCatalogs",
    "CiVerifyFileHashSignedFile",
    "CiVerifyPageHashInLoadedCatalogs",
    "CiVerifyPageHashSignedFile",
    "CipAllocateAndQuerySecureBootPolicyValue",
    "CipApplySiPolicyEx",
    "CipCompareCatalogListEntryByID",
    "CipComparePageHashes",
    "CipDeserializeWeakCryptoPolicies",
    "CipFileHashSearchCompareRoutineSHA1",
    "CipFileHashSearchCompareRoutineSHA256",
    "CipFileHashSortCompareRoutineSHA1",
    "CipFileHashSortCompareRoutineSHA256",
    "CipForceImageRevalidation",
    "CipFreeCatalog",
    "CipGetAcceptedRootKeys",
    "CipGetHashAlgorithmForLegacyScenario",
    "CipGetMinimumAlgorithmForAllScenarios",
    "CipInitializePolicy",
    "CipInitializeSiPolicy",
    "CipInsertCatalogIntoTable",
    "CipIsCustomSigningPolicyActive",
    "CipIsFileHashPossiblyWeak",
    "CipIsRuntimeSignerAlreadyRegistered",
    "CipMinCryptToSigningLevel",
    "CipReadCustomSigningPolicy",
    "CipRefreshPolicies",
    "CipRegisterSigningInformationEx",
    "CipRemoveCatalogFromTable",
    "CipSetPlatformManifestFromPackageName",
    "CipShouldLockdownPolicyBeActive",
    "CipSiPolicyAuditModeEnabled",
    "CipUnregisterSiPolicySigners",
    "CipUnregisterSigner",
    "CipUpdateCiSettingsFromPolicies",
    "CipV1PageHashSearchCompareRoutine",
    "CipV1PageHashSortCompareRoutine",
    "CipValidateChainAgainstSigner",
    "CipValidateFirstPage",
    "CipValidateSigningPolicyForRuntimeSigners",
    "CipValidateSigningPolicyForScenario",
    "CipValidateSigningPolicyForSigningLevel",
    "CipWhqlEnforcementEnabled",
    "DriverEntry",
    "GsDriverEntry",
    "HashKComputeFirstPageHash",
    "HashKComputeMemoryHash",
    "HashKGetCertificateInfo",
    "HashKGetHashLength",
    "HashKGetHashLengthLegacyCrypto",
    "HashpAddExcludeRange",
    "HashpEmitExcludeRange",
    "HashpFinalizeHash",
    "HashpHashBytes",
    "HashpHashMemory",
    "HashpInitHash",
    "HashpInitializeCrypto",
    "HashpPadHash",
    "HashpParsePEHeader",
    "HashpUnInitializeCrypto",
    "HashpVerifyEcdsaSignature",
    "HashpVerifyPkcs1Signature",
    "I_AllocatePageHashes",
    "I_Base64Decode",
    "I_FindFileOrHeaderHashInLoadedCatalogs",
    "I_FindPETrustedAttribute",
    "I_GetNamedCatalogAttributeValue",
    "I_HashSearchCompareRoutineSHA256",
    "I_LocateCatalogPageHashesBlob",
    "I_MapFileHashes",
    "I_MapPageHashes",
    "I_MinAsn1ParseSingleAttribute",
    "I_MinCryptBuildErrorPolicy",
    "I_MinCryptCheckCertHashWeakCrypto",
    "I_MinCryptCheckEKU",
    "I_MinCryptCheckEKURequirements",
    "I_MinCryptFindIssuerCertificateByName",
    "I_MinCryptFindRootByKey",
    "I_MinCryptFindSignerCertificateByIssuerAndSerialNumber",
    "I_MinCryptGetCertificateEKUs",
    "I_MinCryptGetCommonName",
    "I_MinCryptGetHashAlgorithmFromSignature",
    "I_MinCryptGetSigningTime",
    "I_MinCryptIsHashAlgPossiblyWeak",
    "I_MinCryptVerifyAuthenticodeTimeStamp",
    "I_MinCryptVerifyRFC3161TimeStamp",
    "I_MinCryptVerifySignerAuthenticatedAttributes",
    "I_MincryptAddChainInfo",
    "I_MincryptRebaseChainInfo",
    "I_ParseCatalog",
    "I_ParseCatalogAndMapHashes",
    "I_TruncatePageHashesBlob",
    "I_ValidatePageHashesBlob",
    "IndirectDataEncodedOIDBlob",
    "MinAsn1DecodeGeneralizedTime",
    "MinAsn1DecodeTime",
    "MinAsn1DecodeUtcTime",
    "MinAsn1ExtractContent",
    "MinAsn1ExtractValues",
    "MinAsn1FindExtensionMatchingValue",
    "MinAsn1FindPageHashesAttribute",
    "MinAsn1ParseAlgorithmIdentifier",
    "MinAsn1ParseAndDecodeRDNComponent",
    "MinAsn1ParseCertificate",
    "MinAsn1ParseExtensions",
    "MinAsn1ParseIndirectData",
    "MinAsn1ParseNestedSignature",
    "MinAsn1ParseOIDSequence",
    "MinAsn1ParsePublicKeyInfo",
    "MinAsn1ParseRSAPublicKey",
    "MinAsn1ParseRfc3161TimeStampToken",
    "MinAsn1ParseSignedData",
    "MinAsn1ParseSignedDataCertificatesEx",
    "MinAsn1ParseSignerInfo",
    "MinAsn1ParseSingleAttribute",
    "MinAsn1ParseSingleAttributeValue",
    "MinAsn1ParseSingleExtensionValue",
    "MinAsn1ParseSpcOpusInfo",
    "MinAsn1StringToOid",
    "MinCrypK_FindPageHashesInSignedCert",
    "MinCrypK_GetHashLength",
    "MinCrypK_GetHashLengthLegacyCrypto",
    "MinCrypK_HashMemory",
    "MinCrypK_VerifySignedDataKMode",
    "MinCrypK_VerifySignedDataKModeEx",
    "MinCryptCheckCertsAndKeys",
    "MinCryptDecodeHashAlgorithmIdentifier",
    "MinCryptDecodeOid",
    "MinCryptFreeSignature",
    "MinCryptGetHashAlgorithmFromSignature",
    "MinCryptGetHashAlgorithmFromWinCertificate",
    "MinCryptGetNextSignature",
    "MinCryptIsCertPresent",
    "MinCryptIsFileRevoked",
    "MinCryptIsKeyPresent",
    "MinCryptParseRevocationList",
    "MinCryptSetRevocationList",
    "MinCryptVerifyCertificateWithPolicy2",
    "MinCryptVerifySignedFileKMode",
    "MinCryptVerifySignedHash",
    "MincrypK_SelfTest",
    "MincrypK_TestPKCS1SignVerify",
    "MincryptAlloc",
    "MincryptCalculatePackedPolicyInfoSize",
    "MincryptCopyPolicyInfo",
    "MincryptFree",
    "MincryptFreePolicyInfo",
    "MincryptGetEncodedOpusInfo",
    "MincryptIsEKUInPolicy",
    "MincryptIsMarkedForFlightRootTrust",
    "MincryptIsWeakCertHashAllowed",
    "MincryptPackPolicyInfo",
    "MincryptStringToUnicodeString",
    "PETrustedBlob",
    "PackageNameBlob",
    "RootTable",
    "SIPolicyAddPolicy",
    "SIPolicyAggregatePolicyValidationResult",
    "SIPolicyAlloc",
    "SIPolicyAreCustomKernelSignersAllowed",
    "SIPolicyAuditModeEnabled",
    "SIPolicyBlockErrorCodePerPolicy",
    "SIPolicyCheckPolicyCustomizedSigned",
    "SIPolicyCompare",
    "SIPolicyComparePersistentEntry",
    "SIPolicyConcatenateString",
    "SIPolicyConvertChainInfo",
    "SIPolicyConvertData",
    "SIPolicyDeletePersistentVariable",
    "SIPolicyEnforceSupplementalPolicyOptions",
    "SIPolicyFilePathRulesPresent",
    "SIPolicyFileRuleSearchCompare",
    "SIPolicyFindEkuBuffer",
    "SIPolicyFindPolicy",
    "SIPolicyFindScenarioAllowSigners",
    "SIPolicyFindScenarioExceptionRules",
    "SIPolicyFindScenarioFileRules",
    "SIPolicyFlightRootTrustDisabled",
    "SIPolicyFree",
    "SIPolicyFreeSIChainInfo",
    "SIPolicyGetCiSigners",
    "SIPolicyGetNumberOfPolicies",
    "SIPolicyGetOptions",
    "SIPolicyGetOriginalFilenameAndVersionFromVersionResource",
    "SIPolicyGetPersistentVariable",
    "SIPolicyGetPolicyContext",
    "SIPolicyGetPolicyHandles",
    "SIPolicyGetPolicyID",
    "SIPolicyGetPolicyIDs",
    "SIPolicyGetPolicyInfoFromType",
    "SIPolicyGetTestsigningPolicy",
    "SIPolicyHasPerAppPolicy",
    "SIPolicyHashActiveCodeExecutionPolicies",
    "SIPolicyInitialize",
    "SIPolicyInitializeFromSerializedPolicies",
    "SIPolicyInitializeSessionStore",
    "SIPolicyInsertPolicyNode",
    "SIPolicyIsOEMIDRequired",
    "SIPolicyIsPolicyActive",
    "SIPolicyIsSamePolicyID",
    "SIPolicyIsSignedPolicyRequired",
    "SIPolicyIsWinPolicyIgnoreIfNotLockedConditionMet",
    "SIPolicyIsWinPolicyUnlockConditionMet",
    "SIPolicyMatchFileRefRule",
    "SIPolicyMatchFileRules",
    "SIPolicyMatchOneFileRule",
    "SIPolicyMatchUnicodeStringsWithWildCards",
    "SIPolicyObjectValidationEngine",
    "SIPolicyPackagePolicySigners",
    "SIPolicyParseBinary",
    "SIPolicyParseDeniedSigners",
    "SIPolicyParsePolicyData",
    "SIPolicyParsePolicySigners",
    "SIPolicyParseSecureSettings",
    "SIPolicyParseSigningScenarios",
    "SIPolicyParseString",
    "SIPolicyParseV3Data",
    "SIPolicyParseV4Data",
    "SIPolicyParseV5Data",
    "SIPolicyParseV6Data",
    "SIPolicyPolicyIDString",
    "SIPolicyQueryOneSecurityPolicy",
    "SIPolicyRemoveNode",
    "SIPolicySearchFileRules",
    "SIPolicySecureSettingSearchCompare",
    "SIPolicySetActivePolicy",
    "SIPolicySetFileRuleTypesPresent",
    "SIPolicySetOptions",
    "SIPolicySetPersistentVariable",
    "SIPolicySetPersistentVariableWearingConscious",
    "SIPolicySetUEFIVariable",
    "SIPolicyUninitialize",
    "SIPolicyUpdatePersistentVariable",
    "SIPolicyValidateChainAgainstSigner",
    "SIPolicyValidateImageInternal",
    "SIPolicyValidatePolicyEkuBuffer",
    "SIPolicyVerifyPolicyIsWindowsSigned",
    "SIPolicyVerifySignedData",
    "SIPolicyVerifySupplementalPolicyAuthorization",
    "SIPolicyVersionsMatched",
    "SkciCatalogType",
    "SkciCheckNtHeaderForCompliance",
    "SkciCreateCodeCatalog",
    "SkciCreateSecureImage",
    "SkciDeleteCatalog",
    "SkciDetermineAuthorizedPageUse",
    "SkciDuplicatePageHashes",
    "SkciFinalizeSecureImageHash",
    "SkciFinishImageValidation",
    "SkciFreeImageContext",
    "SkciInitialize",
    "SkciMatchHotPatch",
    "SkciQueryImageAuthorID",
    "SkciQueryImageUniqueID",
    "SkciQueryInformation",
    "SkciReturnPolicyInfo",
    "SkciSetCodeIntegrityPolicy",
    "SkciTransferVersionResource",
    "SkciValidateDynamicCodePages",
    "SkciValidateImageData",
    "SymCryptCallbackAlloc",
    "SymCryptCallbackFree",
    "SymCryptCallbackRandom",
    "SymCryptDetectCpuFeaturesByCpuid",
    "SymCryptDigitsFromBits",
    "SymCryptEcDsaTruncateHash",
    "SymCryptEcDsaVerify",
    "SymCryptEckeyAllocate",
    "SymCryptEckeyFree",
    "SymCryptEckeySetValue",
    "SymCryptEcpointCreateEx",
    "SymCryptEcpointDouble",
    "SymCryptEcpointGenericSetRandom",
    "SymCryptEcpointGetValue",
    "SymCryptEcpointMaskedCopy",
    "SymCryptEcpointMultiScalarMulWnafWithInterleaving",
    "SymCryptEcpointScalarMulFixedWindow",
    "SymCryptEcpointSetValue",
    "SymCryptEcpointTransform",
    "SymCryptEcurveAllFunctionPointers",
    "SymCryptEcurveAllocate",
    "SymCryptEcurveFree",
    "SymCryptEqual",
    "SymCryptFatal",
    "SymCryptFatalEnvWindowsKernelmodeWin8_1nLater",
    "SymCryptFdef369MaskedCopyAsm",
    "SymCryptFdef369ModAddGeneric",
    "SymCryptFdef369ModInvMontgomery",
    "SymCryptFdef369ModMulMontgomery",
    "SymCryptFdef369ModPreGetMontgomery",
    "SymCryptFdef369ModSetPostMontgomery",
    "SymCryptFdef369ModSquareMontgomery",
    "SymCryptFdef369ModSubGeneric",
    "SymCryptFdef369ModulusInitMontgomery",
    "SymCryptFdef369MontgomeryReduceAsm",
    "SymCryptFdef369RawAddAsm",
    "SymCryptFdef369RawMulAsm",
    "SymCryptFdef369RawSubAsm",
    "SymCryptFdefConditionalSwap",
    "SymCryptFdefDivisorCreate",
    "SymCryptFdefIntToModulus",
    "SymCryptFdefMaskedCopyAsm",
    "SymCryptFdefModAdd256Asm",
    "SymCryptFdefModAddGeneric",
    "SymCryptFdefModInvGeneric",
    "SymCryptFdefModInvMontgomery",
    "SymCryptFdefModInvMontgomery256",
    "SymCryptFdefModMulGeneric",
    "SymCryptFdefModMulMontgomery",
    "SymCryptFdefModMulMontgomery1024",
    "SymCryptFdefModMulMontgomery256Asm",
    "SymCryptFdefModMulMontgomery512",
    "SymCryptFdefModMulMontgomeryMulx",
    "SymCryptFdefModMulMontgomeryMulx1024",
    "SymCryptFdefModNegGeneric",
    "SymCryptFdefModPreGetGeneric",
    "SymCryptFdefModPreGetMontgomery",
    "SymCryptFdefModPreGetMontgomery256",
    "SymCryptFdefModSetPostGeneric",
    "SymCryptFdefModSetPostMontgomery",
    "SymCryptFdefModSetPostMontgomery256",
    "SymCryptFdefModSetRandomGeneric",
    "SymCryptFdefModSquareGeneric",
    "SymCryptFdefModSquareMontgomery",
    "SymCryptFdefModSquareMontgomery1024",
    "SymCryptFdefModSquareMontgomery256Asm",
    "SymCryptFdefModSquareMontgomery512",
    "SymCryptFdefModSquareMontgomeryMulx",
    "SymCryptFdefModSquareMontgomeryMulx1024",
    "SymCryptFdefModSub256Asm",
    "SymCryptFdefModSubGeneric",
    "SymCryptFdefModulusCopyFixupGeneric",
    "SymCryptFdefModulusCopyFixupMontgomery",
    "SymCryptFdefModulusCreate",
    "SymCryptFdefModulusInitGeneric",
    "SymCryptFdefModulusInitMontgomery",
    "SymCryptFdefModulusInitMontgomery256",
    "SymCryptFdefModulusInitMontgomeryInternal",
    "SymCryptFdefMontgomerReduce256AsmInternal",
    "SymCryptFdefMontgomeryReduce1024Asm",
    "SymCryptFdefMontgomeryReduce256Asm",
    "SymCryptFdefMontgomeryReduce512Asm",
    "SymCryptFdefMontgomeryReduceAsm",
    "SymCryptFdefMontgomeryReduceMulx",
    "SymCryptFdefMontgomeryReduceMulx1024",
    "SymCryptFdefRawAddAsm",
    "SymCryptFdefRawDivMod",
    "SymCryptFdefRawGetValue",
    "SymCryptFdefRawIsLessThan",
    "SymCryptFdefRawMul1024Asm",
    "SymCryptFdefRawMul512Asm",
    "SymCryptFdefRawMulAsm",
    "SymCryptFdefRawMulMulx",
    "SymCryptFdefRawMulMulx1024",
    "SymCryptFdefRawSetValue",
    "SymCryptFdefRawSquare1024Asm",
    "SymCryptFdefRawSquare512Asm",
    "SymCryptFdefRawSquareAsm",
    "SymCryptFdefRawSquareMulx",
    "SymCryptFdefRawSquareMulx1024",
    "SymCryptFdefRawSubAsm",
    "SymCryptHashAppendInternal",
    "SymCryptInit",
    "SymCryptIntBitsizeOfValue",
    "SymCryptIntCreate",
    "SymCryptIntDivPow2",
    "SymCryptIntGetBits",
    "SymCryptIntIsEqualUint32",
    "SymCryptIntIsLessThan",
    "SymCryptIntSetValue",
    "SymCryptIntSetValueUint64",
    "SymCryptIntSubUint32",
    "SymCryptIntToDivisor",
    "SymCryptIntToModElement",
    "SymCryptIntToModulus",
    "SymCryptIntWipe",
    "SymCryptLoadMsbFirstUint64",
    "SymCryptMd5Algorithm_default",
    "SymCryptMd5Append",
    "SymCryptMd5AppendBlocks",
    "SymCryptMd5Init",
    "SymCryptMd5OidList",
    "SymCryptMd5Result",
    "SymCryptModDivPow2",
    "SymCryptModElementCreate",
    "SymCryptModElementGetValue",
    "SymCryptModElementIsEqual",
    "SymCryptModElementSetValue",
    "SymCryptModElementSetValueUint32",
    "SymCryptModElementToInt",
    "SymCryptModExp",
    "SymCryptModExpSquareAndMultiply32",
    "SymCryptModExpWindowed",
    "SymCryptModSetRandom",
    "SymCryptModulusTypeSelections",
    "SymCryptMontgomeryDoubleAndAdd",
    "SymCryptMontgomeryFillScratchSpaces",
    "SymCryptMontgomeryIsZero",
    "SymCryptMontgomeryPointScalarMul",
    "SymCryptMontgomerySetDistinguished",
    "SymCryptParallelHashProcess",
    "SymCryptParallelHashProcess_serial",
    "SymCryptParallelHashSetNextWork",
    "SymCryptParallelSha256Algorithm_default",
    "SymCryptParallelSha256Append",
    "SymCryptParallelSha256AppendBlocks_xmm",
    "SymCryptParallelSha256AppendBlocks_ymm",
    "SymCryptParallelSha256Init",
    "SymCryptParallelSha256Process",
    "SymCryptParallelSha256Result1",
    "SymCryptParallelSha256Result2",
    "SymCryptParallelSha256ResultDone",
    "SymCryptParallelSha256Selftest",
    "SymCryptPrecomputation",
    "SymCryptRsaCoreEnc",
    "SymCryptRsaCoreVerifyInput",
    "SymCryptRsaPkcs1ApplySignaturePadding",
    "SymCryptRsaPkcs1CheckSignaturePadding",
    "SymCryptRsaPkcs1Verify",
    "SymCryptRsaPkcs1VerifySignaturePadding",
    "SymCryptRsakeyCreate",
    "SymCryptRsakeySetValue",
    "SymCryptRsakeySizeofModulus",
    "SymCryptRsakeyWipe",
    "SymCryptScsTableLoad128Xmm",
    "SymCryptScsTableLoadC",
    "SymCryptScsTableStore",
    "SymCryptSha1",
    "SymCryptSha1Algorithm_default",
    "SymCryptSha1Append",
    "SymCryptSha1AppendBlocks",
    "SymCryptSha1Init",
    "SymCryptSha1OidList",
    "SymCryptSha1Result",
    "SymCryptSha256",
    "SymCryptSha256Algorithm_default",
    "SymCryptSha256Append",
    "SymCryptSha256AppendBlocks",
    "SymCryptSha256AppendBlocks_shani",
    "SymCryptSha256AppendBlocks_ul1",
    "SymCryptSha256Init",
    "SymCryptSha256K",
    "SymCryptSha256KATAnswer",
    "SymCryptSha256OidList",
    "SymCryptSha256Result",
    "SymCryptSha384Append",
    "SymCryptSha384Init",
    "SymCryptSha384InitialState",
    "SymCryptSha384OidList",
    "SymCryptSha384Result",
    "SymCryptSha512",
    "SymCryptSha512Append",
    "SymCryptSha512AppendBlocks_ull",
    "SymCryptSha512Init",
    "SymCryptSha512InitialState",
    "SymCryptSha512K",
    "SymCryptSha512KATAnswer",
    "SymCryptSha512OidList",
    "SymCryptSha512Result",
    "SymCryptShortWeierstrassAdd",
    "SymCryptShortWeierstrassAddDiffNonZero",
    "SymCryptShortWeierstrassAddSideChannelUnsafe",
    "SymCryptShortWeierstrassDouble",
    "SymCryptShortWeierstrassFillScratchSpaces",
    "SymCryptShortWeierstrassIsEqual",
    "SymCryptShortWeierstrassIsZero",
    "SymCryptShortWeierstrassNegate",
    "SymCryptShortWeierstrassOnCurve",
    "SymCryptShortWeierstrassSetDistinguished",
    "SymCryptShortWeierstrassSetZero",
    "SymCryptSizeofEcpointFromCurve",
    "SymCryptSizeofIntFromDigits",
    "SymCryptSizeofRsakeyFromParams",
    "SymCryptTestMsg3",
    "SymCryptTwistedEdwardsAdd",
    "SymCryptTwistedEdwardsAddDiffNonZero",
    "SymCryptTwistedEdwardsDouble",
    "SymCryptTwistedEdwardsFillScratchSpaces",
    "SymCryptTwistedEdwardsIsEqual",
    "SymCryptTwistedEdwardsIsZero",
    "SymCryptTwistedEdwardsNegate",
    "SymCryptTwistedEdwardsOnCurve",
    "SymCryptTwistedEdwardsSetDistinguished",
    "SymCryptTwistedEdwardsSetZero",
    "SymCryptWipe",
    "SymCryptWipeAsm",
    "__C_specific_handler",
    "__GSHandlerCheck",
    "__IMPORT_DESCRIPTOR_securekernel",
    "__NULL_IMPORT_DESCRIPTOR",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_KeBugCheckEx",
    "__imp_KeRestoreExtendedProcessorState",
    "__imp_KeSaveExtendedProcessorState",
    "__imp_RtlAnsiStringToUnicodeString",
    "__imp_RtlAvlInsertNodeEx",
    "__imp_RtlAvlRemoveNode",
    "__imp_RtlCompareMemory",
    "__imp_RtlCompareUnicodeString",
    "__imp_RtlDuplicateUnicodeString",
    "__imp_RtlEqualUnicodeString",
    "__imp_RtlFreeUnicodeString",
    "__imp_RtlGetEnabledExtendedFeatures",
    "__imp_RtlGetVersion",
    "__imp_RtlImageNtHeaderEx",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlPrefixUnicodeString",
    "__imp_RtlTimeFieldsToTime",
    "__imp_RtlUTF8ToUnicodeN",
    "__imp_RtlUnicodeToUTF8N",
    "__imp_SeQuerySecureBootPlatformManifest",
    "__imp_SeQuerySecureBootPolicyValue",
    "__imp_SkAcquirePushLockExclusive",
    "__imp_SkAcquirePushLockShared",
    "__imp_SkAllocateNormalModePool",
    "__imp_SkAllocatePool",
    "__imp_SkFreeNormalModePool",
    "__imp_SkFreePool",
    "__imp_SkInitializePushLock",
    "__imp_SkQuerySecureKernelInformation",
    "__imp_SkQuerySystemTime",
    "__imp_SkReleasePushLockExclusive",
    "__imp_SkReleasePushLockShared",
    "__imp_SkSystemExceptionFilter",
    "__imp_SkmmFreeSecureAllocation",
    "__imp_SkobCreateHandle",
    "__imp_SkobCreateObject",
    "__imp_SkobDereferenceObject",
    "__imp___C_specific_handler",
    "__imp___GSHandlerCheck",
    "__imp__local_unwind",
    "__imp__ultow_s",
    "__imp_atoi",
    "__imp_bsearch",
    "__imp_bsearch_s",
    "__imp_isdigit",
    "__imp_memcmp",
    "__imp_memcpy",
    "__imp_memmove",
    "__imp_memset",
    "__imp_qsort",
    "__imp_wcscmp",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "__xmm@00000001000000010000000100000001",
    "__xmm@0c0d0e0f08090a0b0405060700010203",
    "__ymm@0c0d0e0f08090a0b04050607000102030c0d0e0f08090a0b0405060700010203",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "_local_unwind",
    "compareRequestSize",
    "cpuidBitInfo",
    "g_AnyFileWildCardString",
    "g_BioEncodedOid",
    "g_BioEncodedOidBuffer",
    "g_CatalogFileHashAlgorithm",
    "g_CatalogFileHashLength",
    "g_CiDeveloperMode",
    "g_CiIsWinPE",
    "g_CiMinimumHashAlgorithm",
    "g_CiOptions",
    "g_CiParallelPageHashContexts",
    "g_CiParallelPageHashContextsAvailableMask",
    "g_CiPolicyState",
    "g_CiScenarios",
    "g_CiSignerIdMicrosoft",
    "g_CiSignerTypeMax",
    "g_CiSigners",
    "g_CiSignersCount",
    "g_CiSysDevWhqlEnforcementDateTime",
    "g_CiUpgradeInProgress",
    "g_CiWeakCryptoPolicies",
    "g_CiWeakCryptoPolicy",
    "g_CipCheckedPlatformManifestActive",
    "g_CipCustomLevelComparisons",
    "g_CipIsPlatformManifestActive",
    "g_CipMinimumTimeOfTrustForDriverStl",
    "g_CipPolicyHashLock",
    "g_CipPolicyLock",
    "g_CipRuntimeSignersCount",
    "g_CipRuntimeSignersList",
    "g_CipRuntimeSignersLock",
    "g_CipWhichLevelComparisons",
    "g_DebugPolicyPublisher",
    "g_EmptyString",
    "g_EnclaveEncodedOid",
    "g_EnclaveEncodedOidBuffer",
    "g_FlightSignedNotBefore",
    "g_GlobalState",
    "g_IgnoreFlightSigningEKU",
    "g_IgnoreLifetimeSigningEKU",
    "g_IumEncodedOid",
    "g_IumEncodedOidBuffer",
    "g_MobilePlatform",
    "g_MsitTestCodeSignCA3Hash",
    "g_NumberOfSiPolicies",
    "g_SiPolicyCtx",
    "g_SiPolicyDebuggingFlags",
    "g_SiPolicyHandles",
    "g_SiPolicyHash",
    "g_SiPolicyIsUefiSystem",
    "g_SiPolicyLegacyIDs",
    "g_SiSessionStore",
    "g_SymCryptCpuFeaturesNotPresent",
    "g_SymCryptCpuFeaturesPresentCheck",
    "g_SymCryptCpuid1",
    "g_SymCryptFlags",
    "g_SymCryptModFns",
    "g_TrustFlightSigning",
    "g_V1CatalogsSupported",
    "g_WeakCryptoPolicies",
    "memcmp",
    "memcpy",
    "memmove",
    "memset",
    "rgbOID_CTL",
    "rgbOID_KMOD_REVOCATION_LIST",
    "rgbPACKAGE_NAME_AUTHENTICATED_ATTRIBUTE",
    "rgbPETrustedAttribute",
    "rgbPE_AUTHENTICATED_ATTRIBUTE",
    "ulRoots",
    "wcscmp",
    "\u007fsecurekernel_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}