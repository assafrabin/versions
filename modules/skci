{
  "symbols": [
    "??_C@_01LOCGONAA@?$AA?$AA@LBKOJDO@",
    "??_C@_0BB@KHPIDOIH@?$AP0?$CB0?7?$AG?$AF?$CL?$AO?$AD?$AC?$BK?$AF?$AA?$AE?$BE?$AA@LBKOJDO@",
    "??_C@_0BC@ECLGBJGA@1?43?46?41?45?45?47?43?43?$AA@",
    "??_C@_0BC@ECLGBJGA@1?43?46?41?45?45?47?43?43?$AA@LBKOJDO@",
    "??_C@_0BC@JDMNFAHA@?$BA0?$BO0?6?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF?$AE?$BA?$AA@LBKOJDO@",
    "??_C@_0BC@KBECMAKL@1?43?46?41?45?45?47?43?48?$AA@LBKOJDO@",
    "??_C@_0BD@CKJNGAKI@?$BB0?$DP0?$AL?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC?$AE0?$AA@LBKOJDO@",
    "??_C@_0BD@GFLLEEGK@?$BB0?10?$AL?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB?$AE?5?$AA@LBKOJDO@",
    "??_C@_0BD@NJKKLAEI@?$BB0O0?$AL?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD?$AE?$EA?$AA@LBKOJDO@",
    "??_C@_0BE@JHHBJGKE@?$BC0?50?$AM?$AG?$AI?$CK?$IGH?$IG?w?$AN?$AC?$AF?$AF?$AA?$AE?$BA?$AA@LBKOJDO@",
    "??_C@_0BF@CFLDPCAG@?$BD010?$AN?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AB?$AF?$AA?$AE?5?$AA@LBKOJDO@",
    "??_C@_0BF@GGAKKCJG@?$BD0Q0?$AN?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AD?$AF?$AA?$AE?$EA?$AA@LBKOJDO@",
    "??_C@_0BF@JBCLDDMP@?$BD0A0?$AN?$AG?7?$GA?$IGH?$ABe?$AD?$AE?$AC?$AC?$AF?$AA?$AE0?$AA@LBKOJDO@",
    "??_C@_0BH@BJBPIJJA@1?43?46?41?44?41?4311?410?43?45?$AA@NNGAKEGL@",
    "??_C@_0BH@BPPLBNLC@1?43?46?41?44?41?4311?476?48?41?$AA@NNGAKEGL@",
    "??_C@_0BH@DCDCNKFD@1?43?46?41?44?41?4311?410?43?46?$AA@NNGAKEGL@",
    "??_C@_0BH@MIPKJKLD@1?43?46?41?44?41?4311?476?43?41?$AA@NNGAKEGL@",
    "??_C@_0BH@ONJBMFGP@1?43?46?41?44?41?4311?476?45?41?$AA@NNGAKEGL@",
    "??_C@_0BH@OOFPJJAG@1?43?46?41?44?41?4311?461?44?41?$AA@NNGAKEGL@",
    "??_C@_0BI@BDCPPHI@1?43?46?41?44?41?4311?410?43?423?$AA@NNGAKEGL@",
    "??_C@_0BI@BICJMODJ@1?43?46?41?44?41?4311?410?43?422?$AA@NNGAKEGL@",
    "??_C@_0BI@CKBPKMLL@1?43?46?41?44?41?4311?410?43?420?$AA@NNGAKEGL@",
    "??_C@_0BI@EOHDGJLP@1?43?46?41?44?41?4311?410?43?424?$AA@NNGAKEGL@",
    "??_C@_0BI@FHGIFIPO@1?43?46?41?44?41?4311?410?43?425?$AA@NNGAKEGL@",
    "??_C@_0BI@GEJMFAEL@1?43?46?41?44?41?4311?410?43?437?$AA@NNGAKEGL@",
    "??_C@_0BI@HMEFALDN@1?43?46?41?44?41?4311?410?43?426?$AA@NNGAKEGL@",
    "??_C@_0BI@PJJLKJKL@1?43?46?41?44?41?4311?410?43?419?$AA@NNGAKEGL@",
    "??_C@_0BI@PKBPHNMF@1?43?46?41?44?41?4311?410?43?439?$AA@NNGAKEGL@",
    "??_C@_0P@IIGMEDCB@?$AN0?$BP0?$AH?$AG?$AF?$CL?$AO?$AD?$AC?$BK?$AE?$BE?$AA@LBKOJDO@",
    "??_C@_13BBDEGPLJ@?$AA?$CK?$AA?$AA@",
    "??_C@_15ICAJJMIM@?$AAS?$AAi?$AA?$AA@",
    "??_C@_17NAJJNGIB@?$AAT?$AAB?$AAS?$AA?$AA@",
    "??_C@_19DFNIBDOA@?$AAE?$AAK?$AAU?$AAs?$AA?$AA@",
    "??_C@_19POHNNAHL@?$AAH?$AAa?$AAs?$AAh?$AA?$AA@",
    "??_C@_1BC@HPFFLPNK@?$AAR?$AAe?$AAv?$AAo?$AAk?$AAe?$AAS?$AAi?$AA?$AA@",
    "??_C@_1BC@POKDNDGF@?$AAP?$AAl?$AAa?$AAt?$AAf?$AAo?$AAr?$AAm?$AA?$AA@",
    "??_C@_1BE@FJPJKHMN@?$AAK?$AAn?$AAo?$AAw?$AAn?$AAR?$AAo?$AAo?$AAt?$AA?$AA@",
    "??_C@_1BG@BGOGGINE@?$AAC?$AAI?$AA?2?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BI@CHOGEPIN@?$AAC?$AAI?$AA?2?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?2?$AA?$AA@NNGAKEGL@",
    "??_C@_1BI@DAOJINKM@?$AAT?$AAe?$AAs?$AAt?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1BI@LJHFMFCG@?$AAV?$AAa?$AAr?$AAF?$AAi?$AAl?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$AA@FNODOBFM@",
    "??_C@_1BK@FEAPKNHI@?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?4?$AAp?$AA7?$AAb?$AA?$AA@",
    "??_C@_1BO@DGJAOBID@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA8?$AA?$AA@",
    "??_C@_1BO@FJCNABOH@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA2?$AA?$AA@",
    "??_C@_1BO@GOPDPBNF@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA7?$AA?$AA@",
    "??_C@_1BO@HMEGFODL@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA4?$AA?$AA@",
    "??_C@_1BO@IOCMIGOG@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA9?$AA?$AA@",
    "??_C@_1BO@MEPKDJFO@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA5?$AA?$AA@",
    "??_C@_1BO@NGEPJGLA@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA6?$AA?$AA@",
    "??_C@_1BO@OBJBGGIC@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA3?$AA?$AA@",
    "??_C@_1BO@PBBNDBNF@?$AAS?$AAt?$AAr?$AAi?$AAn?$AAg?$AAF?$AAi?$AAl?$AAe?$AAI?$AAn?$AAf?$AAo?$AA?$AA@FNODOBFM@",
    "??_C@_1CA@BAIHIGJP@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA0?$AA?$AA@",
    "??_C@_1CA@CDCCJHB@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA?$AA@",
    "??_C@_1CA@CHFJHGKN@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA5?$AA?$AA@",
    "??_C@_1CA@FOECMPGO@?$AAV?$AAS?$AA_?$AAV?$AAE?$AAR?$AAS?$AAI?$AAO?$AAN?$AA_?$AAI?$AAN?$AAF?$AAO?$AA?$AA@FNODOBFM@",
    "??_C@_1CA@IBPJBCBI@?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?4?$AAp?$AA7?$AAb?$AA?$AA@",
    "??_C@_1CA@JPCHJAPP@?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@",
    "??_C@_1CA@JPOFBBMI@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA4?$AA?$AA@",
    "??_C@_1CA@KIDLOBPK@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA1?$AA?$AA@",
    "??_C@_1CA@LKIOEOBE@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA2?$AA?$AA@",
    "??_C@_1CC@BJGKBCPB@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA7?$AA?$AA@",
    "??_C@_1CC@CHBCEHAO@?$AAO?$AAr?$AAi?$AAg?$AAi?$AAn?$AAa?$AAl?$AAF?$AAi?$AAl?$AAe?$AAn?$AAa?$AAm?$AAe?$AA?$AA@FNODOBFM@",
    "??_C@_1CC@DMABENCN@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA1?$AA?$AA@",
    "??_C@_1CC@IELNCKEI@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA0?$AA?$AA@",
    "??_C@_1CC@JGAIIFKG@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA3?$AA?$AA@",
    "??_C@_1CC@LDGDNKHK@?$AAC?$AAI?$AA?2?$AAS?$AAc?$AAe?$AAn?$AAa?$AAr?$AAi?$AAo?$AAs?$AA?2?$AA1?$AA3?$AA5?$AA?$AA@",
    "??_C@_1CE@GMLFPMDI@?$AAP?$AAr?$AAo?$AAd?$AAu?$AAc?$AAt?$AAi?$AAo?$AAn?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1CG@CNALLOMA@?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@",
    "??_C@_1CG@JLKGFBBD@?$AAT?$AAe?$AAs?$AAt?$AAs?$AAi?$AAg?$AAn?$AAi?$AAn?$AAg?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1CG@MEJBDINI@?$AAR?$AAe?$AAv?$AAo?$AAk?$AAe?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?4?$AAp?$AA7?$AAb?$AA?$AA@",
    "??_C@_1CM@DPFBAHBG@?$AAR?$AAe?$AAv?$AAo?$AAk?$AAe?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@",
    "??_C@_1CM@NABDHEDK@?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1CM@PJNHIFEH@?$AA?2?$AAB?$AAo?$AAo?$AAt?$AA?2?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?4?$AAp?$AA7?$AAb?$AA?$AA@",
    "??_C@_1CO@JFPCPMII@?$AAD?$AAi?$AAs?$AAa?$AAb?$AAl?$AAe?$AAL?$AAi?$AAf?$AAe?$AAt?$AAi?$AAm?$AAe?$AAS?$AAi?$AAg?$AAn?$AAi?$AAn?$AAg?$AA?$AA@",
    "??_C@_1DC@FBLHHCNL@?$AAS?$AAk?$AAu?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1DI@OKPANOKH@?$AAR?$AAe?$AAv?$AAo?$AAk?$AAe?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AAU?$AAp?$AAd?$AAa?$AAt?$AAe?$AAS?$AAi?$AAg?$AAn?$AAe?$AAr?$AAs?$AA?$AA@",
    "??_C@_1EI@GICELIG@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA3?$AA2?$AA?2?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAt?$AAe?$AAg?$AAr?$AAi?$AAt?$AAy?$AA?2?$AAS?$AAi?$AAP?$AAo?$AAl?$AAi?$AAc?$AAy?$AA?4@",
    "??_C@_1FE@OJPCIHHH@?$AAS?$AAy?$AAs?$AAt?$AAe?$AAm?$AA3?$AA2?$AA?2?$AAC?$AAo?$AAd?$AAe?$AAI?$AAn?$AAt?$AAe?$AAg?$AAr?$AAi?$AAt?$AAy?$AA?2?$AAR?$AAe?$AAv?$AAo?$AAk?$AAe?$AAS?$AAi?$AAP@",
    "??_C@_1M@MOEMBDMP@?$AAS?$AAk?$AAu?$AAS?$AAi?$AA?$AA@",
    "??_C@_1M@NBCIMFHI@?$AAC?$AAo?$AAu?$AAn?$AAt?$AA?$AA@",
    "??_C@_1O@JABJGAKP@?$AAL?$AAe?$AAv?$AAe?$AAl?$AAs?$AA?$AA@",
    "CatNameValueOIDBlob",
    "CiAddPagesToPageHashContext",
    "CiAddSectionDataToVerificationContext",
    "CiCalculateFirstPageHash",
    "CiCheckPolicyBits",
    "CiCleanupCatalogs",
    "CiCompareSigningLevels",
    "CiCreateImageHashContext",
    "CiCreatePageHashContextForImageMapping",
    "CiCreateVerificationContextForImageGeneratedPageHashes",
    "CiDeleteCatalogEntry",
    "CiEvaluatePolicyInfo",
    "CiFindFileOrHeaderHashInLoadedCatalogs",
    "CiFipsCheck",
    "CiFreeImageVerificationInfo",
    "CiFreeParallelHashingContexts",
    "CiGetCurrentSiloState",
    "CiGetFileOffsetAfterLastRawSectionData",
    "CiGetNextSignatureVerification",
    "CiInitializeCatalogs",
    "CiInitializeParallelHashingContexts",
    "CiInitializePolicyFromPolicies",
    "CiInitializeValidationContext",
    "CiIsFlightRootTrustDisabled",
    "CiIsSignatureTrustedForIum",
    "CiParseRevocationList",
    "CiSortAndCopyImageSectionTable",
    "CiValidateAndSetRevocationList",
    "CiValidateFullImagePages",
    "CiValidateImageHeaderMapping",
    "CiValidateImagePages",
    "CiVerifyAndAddCatalogToLoadedListWithID",
    "CiVerifyFileHashInLoadedCatalogs",
    "CiVerifyFileHashSignedFile",
    "CiVerifyPageHashInLoadedCatalogs",
    "CiVerifyPageHashSignedFile",
    "CipAllocateAndQuerySecureBootPolicyValue",
    "CipApplySiPolicyEx",
    "CipCompareCatalogListEntryByID",
    "CipComparePageHashes",
    "CipDeserializeWeakCryptoPolicies",
    "CipFileHashSearchCompareRoutineSHA1",
    "CipFileHashSearchCompareRoutineSHA256",
    "CipFileHashSortCompareRoutineSHA1",
    "CipFileHashSortCompareRoutineSHA256",
    "CipFreeCatalog",
    "CipGetAcceptedRootKeys",
    "CipGetHashAlgorithmForLegacyScenario",
    "CipGetMinimumAlgorithmForAllScenarios",
    "CipInitializePolicy",
    "CipInitializeSiPolicy",
    "CipInsertCatalogIntoTable",
    "CipIsCustomSigningPolicyActive",
    "CipIsFileHashPossiblyWeak",
    "CipIsRuntimeSignerAlreadyRegistered",
    "CipMinCryptToSigningLevel",
    "CipPerformPlatformManifestCheckIfRequired",
    "CipReadCustomSigningPolicy",
    "CipRegisterSiPolicySigners",
    "CipRegisterSigningInformationEx",
    "CipRemoveCatalogFromTable",
    "CipSetPlatformManifestFromPackageName",
    "CipV1PageHashSearchCompareRoutine",
    "CipV1PageHashSortCompareRoutine",
    "CipValidateChainAgainstSigner",
    "CipValidateFirstPage",
    "CipValidateSigningPolicyForRuntimeSigners",
    "CipValidateSigningPolicyForScenario",
    "CipValidateSigningPolicyForSigningLevel",
    "GsDriverEntry",
    "HashKComputeFirstPageHash",
    "HashKComputeMemoryHash",
    "HashKGetCertificateInfo",
    "HashKGetHashLength",
    "HashKGetHashLengthLegacyCrypto",
    "HashpAddExcludeRange",
    "HashpEmitExcludeRange",
    "HashpFinalizeHash",
    "HashpHashBytes",
    "HashpInitHash",
    "HashpPadHash",
    "HashpParsePEHeader",
    "I_AllocatePageHashes",
    "I_Base64Decode",
    "I_FindFileOrHeaderHashInLoadedCatalogs",
    "I_FindPETrustedAttribute",
    "I_GetNamedCatalogAttributeValue",
    "I_HashSearchCompareRoutineSHA256",
    "I_LocateCatalogPageHashesBlob",
    "I_MapFileHashes",
    "I_MapPageHashes",
    "I_MinCryptBuildErrorPolicy",
    "I_MinCryptCheckCertHashWeakCrypto",
    "I_MinCryptCheckEKU",
    "I_MinCryptCheckEKURequirements",
    "I_MinCryptFindSignerCertificateByIssuerAndSerialNumber",
    "I_MinCryptGetCertificateEKUs",
    "I_MinCryptGetHashAlgorithmFromSignature",
    "I_MinCryptGetPlatformManifestBinaryIDAttribute",
    "I_MinCryptGetSigningTime",
    "I_MinCryptIsHashAlgPossiblyWeak",
    "I_MinCryptVerifyAuthenticodeTimeStamp",
    "I_MinCryptVerifyRFC3161TimeStamp",
    "I_MinCryptVerifySignerAuthenticatedAttributes",
    "I_MincryptAddChainInfo",
    "I_MincryptRebaseChainInfo",
    "I_ParseCatalog",
    "I_ParseCatalogAndMapHashes",
    "I_TruncatePageHashesBlob",
    "I_ValidatePageHashesBlob",
    "I_VerifyPKCS1SigningFormat",
    "IndirectDataEncodedOIDBlob",
    "MinAsn1DecodeGeneralizedTime",
    "MinAsn1DecodeTime",
    "MinAsn1DecodeUtcTime",
    "MinAsn1ExtractContent",
    "MinAsn1ExtractValues",
    "MinAsn1FindAttribute",
    "MinAsn1FindExtension",
    "MinAsn1FindExtensionMatchingValue",
    "MinAsn1FindPageHashesAttribute",
    "MinAsn1ParseAlgorithmIdentifier",
    "MinAsn1ParseAndDecodeRDNComponent",
    "MinAsn1ParseAttributes",
    "MinAsn1ParseExtensions",
    "MinAsn1ParseIndirectData",
    "MinAsn1ParseNestedSignature",
    "MinAsn1ParseOIDSequence",
    "MinAsn1ParsePublicKeyInfo",
    "MinAsn1ParseRSAPublicKey",
    "MinAsn1ParseRfc3161TimeStampToken",
    "MinAsn1ParseSignedData",
    "MinAsn1ParseSignedDataCertificatesEx",
    "MinAsn1ParseSignerInfo",
    "MinAsn1ParseSpcOpusInfo",
    "MinAsn1StringToOid",
    "MinCrypK_FindPageHashesInSignedCert",
    "MinCrypK_GetHashLength",
    "MinCrypK_GetHashLengthLegacyCrypto",
    "MinCrypK_Initialize",
    "MinCrypK_VerifySignedDataKMode",
    "MinCrypK_VerifySignedDataKModeEx",
    "MinCryptDecodeHashAlgorithmIdentifier",
    "MinCryptFreeSignature",
    "MinCryptGetHashAlgorithmFromSignature",
    "MinCryptGetHashAlgorithmFromWinCertificate",
    "MinCryptGetNextSignature",
    "MinCryptHashMemory",
    "MinCryptIsFileRevoked",
    "MinCryptParseRevocationList",
    "MinCryptSetRevocationList",
    "MinCryptVerifyCertificateWithPolicy2",
    "MinCryptVerifySignedFileKMode",
    "MinCryptVerifySignedHash",
    "MincrypK_SelfTest",
    "MincrypK_TestPKCS1SignVerify",
    "MincryptCopyPolicyInfo",
    "MincryptFreePolicyInfo",
    "MincryptGetOpusProgramNameFromAuthenticatedAttributes",
    "MincryptIsEKUInPolicy",
    "MincryptIsWeakCertHashAllowed",
    "MincryptPackPolicyInfo",
    "MincryptStringToUnicodeString",
    "ModularMultiplication_amd64_asm",
    "ModularMultiplication_amd64_asm_1024",
    "ModularMultiplication_amd64_asm_256",
    "Multiply_256x256_amd64_asm",
    "PETrustedBlob",
    "PackageNameBlob",
    "RootTable",
    "SIPolicyAlloc",
    "SIPolicyAuditModeEnabled",
    "SIPolicyConvertChainInfo",
    "SIPolicyConvertData",
    "SIPolicyFileRuleSearchCompare",
    "SIPolicyFindEkuBuffer",
    "SIPolicyFindScenarioExceptionRules",
    "SIPolicyFindScenarioFileRules",
    "SIPolicyFlightRootTrustDisabled",
    "SIPolicyFree",
    "SIPolicyFreeSIChainInfo",
    "SIPolicyGetCiSigners",
    "SIPolicyGetOptions",
    "SIPolicyGetOriginalFilenameAndVersionFromVersionResource",
    "SIPolicyGetPolicyType",
    "SIPolicyInitialize",
    "SIPolicyIsOEMIDRequired",
    "SIPolicyIsPolicyActive",
    "SIPolicyMatchFileRefRule",
    "SIPolicyMatchFileRules",
    "SIPolicyMatchOneFileRule",
    "SIPolicyParseBinary",
    "SIPolicyParseDeniedSigners",
    "SIPolicyParsePolicySigners",
    "SIPolicyParseSecureSettings",
    "SIPolicyParseSigningScenarios",
    "SIPolicyParseString",
    "SIPolicySetActivePolicy",
    "SIPolicyUninitialize",
    "SIPolicyValidateChainAgainstSigner",
    "SIPolicyValidateImage",
    "SIPolicyValidatePolicyEkuBuffer",
    "SetMpErrno_clue1",
    "SkciCatalogType",
    "SkciCheckNtHeaderForCompliance",
    "SkciCreateCodeCatalog",
    "SkciCreateSecureImage",
    "SkciDeleteCatalog",
    "SkciDuplicatePageHashes",
    "SkciFinalizeSecureImageHash",
    "SkciFinishImageValidation",
    "SkciFreeImageContext",
    "SkciInitialize",
    "SkciTransferVersionResource",
    "SkciValidateDynamicCodePages",
    "SkciValidateImageData",
    "SymCryptDetectCpuFeaturesByCpuid",
    "SymCryptFatal",
    "SymCryptFatalEnvWindowsKernelmodeWin8_1nLater",
    "SymCryptHashAppendInternal",
    "SymCryptMd5Algorithm_default",
    "SymCryptMd5Append",
    "SymCryptMd5AppendBlocks",
    "SymCryptMd5Init",
    "SymCryptMd5Result",
    "SymCryptParallelHashProcess",
    "SymCryptParallelHashProcess_serial",
    "SymCryptParallelHashSetNextWork",
    "SymCryptParallelSha256Algorithm_default",
    "SymCryptParallelSha256Append",
    "SymCryptParallelSha256AppendBlocks_xmm",
    "SymCryptParallelSha256AppendBlocks_ymm",
    "SymCryptParallelSha256Init",
    "SymCryptParallelSha256Process",
    "SymCryptParallelSha256Result1",
    "SymCryptParallelSha256Result2",
    "SymCryptParallelSha256ResultDone",
    "SymCryptSha1",
    "SymCryptSha1Algorithm_default",
    "SymCryptSha1Append",
    "SymCryptSha1AppendBlocks",
    "SymCryptSha1Init",
    "SymCryptSha1Result",
    "SymCryptSha256",
    "SymCryptSha256Algorithm_default",
    "SymCryptSha256Append",
    "SymCryptSha256AppendBlocks",
    "SymCryptSha256AppendBlocks_shani",
    "SymCryptSha256AppendBlocks_ul1",
    "SymCryptSha256Init",
    "SymCryptSha256K",
    "SymCryptSha256KATAnswer",
    "SymCryptSha256Result",
    "SymCryptSha384Append",
    "SymCryptSha384Init",
    "SymCryptSha384InitialState",
    "SymCryptSha384Result",
    "SymCryptSha512",
    "SymCryptSha512Append",
    "SymCryptSha512AppendBlocks_ull",
    "SymCryptSha512Init",
    "SymCryptSha512InitialState",
    "SymCryptSha512K",
    "SymCryptSha512KATAnswer",
    "SymCryptSha512Result",
    "SymCryptTestMsg3",
    "SymCryptWipeAsm",
    "SymCryptWipeAsmT0",
    "SymCryptWipeAsmT1",
    "SymCryptWipeAsmT10",
    "SymCryptWipeAsmT11",
    "SymCryptWipeAsmT12",
    "SymCryptWipeAsmT13",
    "SymCryptWipeAsmT14",
    "SymCryptWipeAsmT15",
    "SymCryptWipeAsmT2",
    "SymCryptWipeAsmT3",
    "SymCryptWipeAsmT4",
    "SymCryptWipeAsmT5",
    "SymCryptWipeAsmT6",
    "SymCryptWipeAsmT7",
    "SymCryptWipeAsmT8",
    "SymCryptWipeAsmT9",
    "__C_specific_handler",
    "__GSHandlerCheck",
    "__IMPORT_DESCRIPTOR_securekernel",
    "__NULL_IMPORT_DESCRIPTOR",
    "__chkstk",
    "__dynamic_value_reloc_table",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_KeBugCheckEx",
    "__imp_KeRestoreExtendedProcessorState",
    "__imp_KeSaveExtendedProcessorState",
    "__imp_RtlAnsiStringToUnicodeString",
    "__imp_RtlAvlInsertNodeEx",
    "__imp_RtlAvlRemoveNode",
    "__imp_RtlCompareMemory",
    "__imp_RtlCompareUnicodeString",
    "__imp_RtlDuplicateUnicodeString",
    "__imp_RtlEqualUnicodeString",
    "__imp_RtlFreeUnicodeString",
    "__imp_RtlGetEnabledExtendedFeatures",
    "__imp_RtlGetVersion",
    "__imp_RtlImageNtHeaderEx",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlTimeFieldsToTime",
    "__imp_RtlUTF8ToUnicodeN",
    "__imp_RtlUnicodeToUTF8N",
    "__imp_SeQuerySecureBootPlatformManifest",
    "__imp_SeQuerySecureBootPolicyValue",
    "__imp_SkAcquirePushLockExclusive",
    "__imp_SkAcquirePushLockShared",
    "__imp_SkAllocateNormalModePool",
    "__imp_SkAllocatePool",
    "__imp_SkFreeNormalModePool",
    "__imp_SkFreePool",
    "__imp_SkInitializePushLock",
    "__imp_SkQuerySecureKernelInformation",
    "__imp_SkQuerySystemTime",
    "__imp_SkReleasePushLockExclusive",
    "__imp_SkReleasePushLockShared",
    "__imp_SkmmFreeSecureAllocation",
    "__imp_SkobCreateHandle",
    "__imp_SkobCreateObject",
    "__imp_SkobDereferenceObject",
    "__imp___C_specific_handler",
    "__imp___GSHandlerCheck",
    "__imp___chkstk",
    "__imp__local_unwind",
    "__imp__ultow_s",
    "__imp_atoi",
    "__imp_atol",
    "__imp_bsearch",
    "__imp_bsearch_s",
    "__imp_isdigit",
    "__imp_memcmp",
    "__imp_memcpy",
    "__imp_memmove",
    "__imp_memset",
    "__imp_qsort",
    "__imp_wcscmp",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_init_cookie",
    "__xmm@00000001000000010000000100000001",
    "__xmm@0c0d0e0f08090a0b0405060700010203",
    "__ymm@0c0d0e0f08090a0b04050607000102030c0d0e0f08090a0b0405060700010203",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "_local_unwind",
    "accumulate",
    "add_256_amd64_asm",
    "add_mod",
    "add_mod_256_amd64_asm",
    "add_same_amd64_asm",
    "compareRequestSize",
    "compare_diff",
    "compare_same",
    "cpuidBitInfo",
    "create_modulus",
    "create_modulus_select_arithmetic",
    "decumulate",
    "digit_allocate_named",
    "digits_to_endian_bytes",
    "div21",
    "divide",
    "divide_immediate",
    "divide_precondition_1",
    "endian_bytes_to_digits",
    "estimated_quotient_1",
    "g_AnyFileWildCardString",
    "g_CatalogFileHashAlgorithm",
    "g_CatalogFileHashLength",
    "g_CiDeveloperMode",
    "g_CiIsWinPE",
    "g_CiMinimumHashAlgorithm",
    "g_CiOptions",
    "g_CiParallelPageHashContexts",
    "g_CiParallelPageHashContextsAvailableMask",
    "g_CiScenarios",
    "g_CiSignerTypeMax",
    "g_CiSigners",
    "g_CiSignersCount",
    "g_CiSysDevWhqlEnforcementDateTime",
    "g_CiUpgradeInProgress",
    "g_CiWeakCryptoPolicies",
    "g_CiWeakCryptoPolicy",
    "g_CipCheckedPlatformManifestActive",
    "g_CipCustomLevelComparisons",
    "g_CipIsPlatformManifestActive",
    "g_CipMinimumTimeOfTrustForDriverStl",
    "g_CipRuntimeSignersCount",
    "g_CipRuntimeSignersList",
    "g_CipRuntimeSignersLock",
    "g_CipWhichLevelComparisons",
    "g_DebugPolicyPublisher",
    "g_FlightSignedNotBefore",
    "g_GlobalState",
    "g_IgnoreFlightSigningEKU",
    "g_IgnoreLifetimeSigningEKU",
    "g_MobilePlatform",
    "g_MsitTestCodeSignCA3Hash",
    "g_NumberOfSiPolicies",
    "g_SiPolicyHandles",
    "g_SiPolicyHash",
    "g_SiPolicyTypeInfo",
    "g_SymCryptCpuFeaturesNotPresent",
    "g_SymCryptCpuFeaturesPresentCheck",
    "g_SymCryptCpuid1",
    "g_SymCryptFlags",
    "g_TrustFlightSigning",
    "g_V1CatalogsSupported",
    "g_WeakCryptoPolicies",
    "memcmp",
    "memcpy",
    "memset",
    "mod_exp2006",
    "mod_exp_x64",
    "mod_exp_x64_1024",
    "mod_exp_x64_2048",
    "mod_mul_no_range_checks",
    "mod_shift",
    "modmul_choices1",
    "modmul_from_right_CIOS",
    "modular_exponentiation",
    "mp_copybits",
    "mp_free_temp",
    "mp_population_count",
    "mp_scrambled_fetch",
    "mp_scrambled_setup",
    "mp_scrambled_store",
    "mp_shift_lost",
    "mp_significant_bit_count",
    "multiply",
    "possible_digit_allocate_named",
    "rgbOID_CTL",
    "rgbOID_KMOD_REVOCATION_LIST",
    "rgbPACKAGE_NAME_AUTHENTICATED_ATTRIBUTE",
    "rgbPETrustedAttribute",
    "rgbPE_AUTHENTICATED_ATTRIBUTE",
    "rsa_allocate_fields",
    "rsa_destruction",
    "rsa_encryption",
    "rsa_import",
    "significant_bit_count",
    "sub_256_amd64_asm",
    "sub_mod_256_amd64_asm",
    "sub_same_amd64_asm",
    "to_modular",
    "two_adic_inverse",
    "ulRoots",
    "uncreate_modulus",
    "validate_modular_data1a",
    "wcscmp",
    "\u007fsecurekernel_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}