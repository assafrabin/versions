{
  "symbols": [
    "??_C@_0BN@JBPCKAPI@Reading?5?$CFd?5arenas?5on?5lane?5?$CFd@",
    "??_C@_0CD@DJBNFDGM@BTT?3?5read_layout?3?5nfree?5can?8t?5b@",
    "??_C@_0CL@PMOICIEE@BTT?3?5read_layout?3?5external_nlba@",
    "??_C@_0CN@LFLDPELI@BTT?3?5read_flog_pair?3?5invalid?5fl@",
    "??_C@_0CO@ICNMGMA@BTT?3?5invalid_lba?3?5lba?5out?5of?5ra@",
    "??_C@_0DE@BNIAJLEF@BTT?3?5btt_init?3?5rawsize?5smaller?5@",
    "??_C@_0DE@CBNDMFCA@BTT?3?5read_flog_pair?3?5invalid?5la@",
    "??_C@_0DE@IMBODDDP@Bad?5range?5length?5overflows?3?50x?$CF@",
    "??_C@_0DJ@FEONACJI@BTT?3?5write_layout?3?5Invalid?5lba?5@",
    "??_C@_0DK@NHIDLFDL@BTT?3?5invalid_arena_lba?3?5arena?5l@",
    "??_C@_0DL@BEOJJOPA@BTT?3?5read_layout?3?5next?5arena?5of@",
    "??_C@_0DN@BJKMOAHE@BTT?3?5pmemblk_load_mapped_pool?3?5@",
    "??_C@_0DN@OMIGDBHM@BTT?3?5pmemblk_load_mapped_pool?3?5@",
    "??_C@_0DO@CHCIHBDL@BTT?3?5read_flog_pair?3?5flog?5layou@",
    "??_C@_0DO@PKDBNOBC@BTT?3?5nsmap?3?5offset?5?$CL?5count?5?$CI?$CFll@",
    "??_C@_0DP@JOHMLBNO@BTT?3?5nsread?3?5offset?5?$CL?5count?5?$CI?$CFl@",
    "??_C@_0DP@KJCOBAJF@BTT?3?5nszero?3?5offset?5?$CL?5count?5?$CI?$CFl@",
    "??_C@_0EA@KGHMDMBA@BTT?3?5nswrite?3?5offset?5?$CL?5count?5?$CI?$CF@",
    "??_C@_0EH@MJLLICNB@BTT?3?5write_layout?3?5number?5of?5in@",
    "??_C@_0EM@GGFIFMDA@BTT?3?5nis_memory_range_good?3?5off@",
    "??_C@_0EP@DCGBEEJG@BTT?3?5nsis_memory_range_good?3?5of@",
    "??_C@_0FH@LMGHFHEG@BTT?3?5read_layout?3?5inconsistent?5@",
    "??_C@_1BK@DHLDGJM@?$AAP?$AAs?$AAG?$AAe?$AAt?$AAV?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn@",
    "??_C@_1BM@CJMKDOJH@?$AAE?$AAt?$AAw?$AAU?$AAn?$AAr?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr@",
    "??_C@_1CA@OFIBBPKJ@?$AAW?$AAm?$AAi?$AAT?$AAr?$AAa?$AAc?$AAe?$AAM?$AAe?$AAs?$AAs?$AAa?$AAg?$AAe@",
    "??_C@_1DC@DOCOAJH@?$AAW?$AAm?$AAi?$AAQ?$AAu?$AAe?$AAr?$AAy?$AAT?$AAr?$AAa?$AAc?$AAe?$AAI?$AAn@",
    "??_C@_1DG@PFOPAIND@?$AAE?$AAt?$AAw?$AAR?$AAe?$AAg?$AAi?$AAs?$AAt?$AAe?$AAr?$AAC?$AAl?$AAa?$AAs@",
    "AllocateAndFillInPremappedVirtualAddresses",
    "BTTFLT_BTT_SIGNATURE",
    "BttFltAddDevice",
    "BttFltAlignOffsets",
    "BttFltAllocateAndInitializeSrbContext",
    "BttFltBttIoRoutines",
    "BttFltCompleteIoOperation",
    "BttFltContainsBttAddressAbstraction",
    "BttFltContinueIoOperation",
    "BttFltFreeSrbContext",
    "BttFltFreeWorkItem",
    "BttFltGetBadMemoryRangeCount",
    "BttFltGlobalData",
    "BttFltInvokeIoctl",
    "BttFltIoctl",
    "BttFltIsBttMetadataPresent",
    "BttFltIsPhysicalMemoryRangeGood",
    "BttFltLinkDevice",
    "BttFltNsIsMemoryRangeGood",
    "BttFltNsMap",
    "BttFltNsRead",
    "BttFltNsReadMapped",
    "BttFltNsUnmap",
    "BttFltNsWrite",
    "BttFltNsWriteMapped",
    "BttFltNsZero",
    "BttFltPassThrough",
    "BttFltPnp",
    "BttFltProcessReadWrite",
    "BttFltProcessScsi",
    "BttFltQueryDiskGeometry",
    "BttFltSetReadWriteOffsets",
    "BttFltSetSrbOpCode",
    "BttFltStartDevice",
    "BttFltStartNextIoOperation",
    "BttFltSynchronousReadWrite",
    "BttFltUnlinkDevice",
    "BttFltUnload",
    "DriverEntry",
    "FillInPremappedVirtualAddresses",
    "FreePremappedVirtualAddresses",
    "GetPremappedAreaAddress",
    "GsDriverEntry",
    "ScmBttClose",
    "ScmBttCreateMappedPool",
    "ScmBttGetDataOffsetForBlock",
    "ScmBttGetPoolIoCallbackContext",
    "ScmBttGetUsableBlockCount",
    "ScmBttInitializeLayout",
    "ScmBttOpenMappedPool",
    "ScmBttWriteTraceEvent",
    "VHD_PMEM_ADDRESS_ABSTRACTION_BTT",
    "VHD_PMEM_ADDRESS_ABSTRACTION_NONE",
    "WPPTraceSuite",
    "WPP_GLOBAL_Control",
    "WPP_MAIN_CB",
    "WPP_SF_Dqd",
    "WPP_SF_IId",
    "WPP_SF_Iq",
    "WPP_SF_Iqd",
    "WPP_SF__guid_d",
    "WPP_SF_d",
    "WPP_SF_q",
    "WPP_SF_qDII",
    "WPP_SF_qII",
    "WPP_SF_qd",
    "WPP_SF_qq",
    "WPP_SF_qqq",
    "WPP_ThisDir_CTLGUID_BttFltTraceGuid",
    "WPP_f1d66ef65f5c378318982791487e82b4_Traceguids",
    "WppClassicProviderCallback",
    "WppCleanupKm",
    "WppInitKm",
    "WppLoadTracingSupport",
    "WppTraceCallback",
    "__GSHandlerCheck",
    "__GSHandlerCheckCommon",
    "__IMPORT_DESCRIPTOR_ntoskrnl",
    "__NULL_IMPORT_DESCRIPTOR",
    "__chkstk",
    "__guard_check_icall_fptr",
    "__guard_dispatch_icall_fptr",
    "__guard_fids_count",
    "__guard_fids_table",
    "__guard_flags",
    "__guard_iat_count",
    "__guard_iat_table",
    "__guard_longjmp_count",
    "__guard_longjmp_table",
    "__imp_ExAllocatePoolWithTag",
    "__imp_ExDeleteLookasideListEx",
    "__imp_ExFreePoolWithTag",
    "__imp_ExInitializeLookasideListEx",
    "__imp_ExQueryDepthSList",
    "__imp_ExpInterlockedPopEntrySList",
    "__imp_ExpInterlockedPushEntrySList",
    "__imp_IoAllocateIrpEx",
    "__imp_IoAllocateMdl",
    "__imp_IoAttachDeviceToDeviceStack",
    "__imp_IoBuildDeviceIoControlRequest",
    "__imp_IoBuildPartialMdl",
    "__imp_IoCreateDevice",
    "__imp_IoDeleteDevice",
    "__imp_IoDetachDevice",
    "__imp_IoForwardIrpSynchronously",
    "__imp_IoFreeIrp",
    "__imp_IoFreeMdl",
    "__imp_IoSynchronousCallDriver",
    "__imp_IoWMIRegistrationControl",
    "__imp_IofCallDriver",
    "__imp_IofCompleteRequest",
    "__imp_KeAcquireSpinLockRaiseToDpc",
    "__imp_KeGetCurrentProcessorNumberEx",
    "__imp_KeInitializeEvent",
    "__imp_KeInitializeSpinLock",
    "__imp_KeQueryActiveProcessorCountEx",
    "__imp_KeReleaseSpinLock",
    "__imp_KeWaitForSingleObject",
    "__imp_MmBuildMdlForNonPagedPool",
    "__imp_MmGetPhysicalAddress",
    "__imp_MmGetSystemRoutineAddress",
    "__imp_MmMapIoSpaceEx",
    "__imp_MmUnmapIoSpace",
    "__imp_MmUnmapLockedPages",
    "__imp_RtlCompareMemory",
    "__imp_RtlFlushNonVolatileMemory",
    "__imp_RtlInitUnicodeString",
    "__imp_RtlWriteNonVolatileMemory",
    "__imp___chkstk",
    "__report_gsfailure",
    "__security_check_cookie",
    "__security_cookie",
    "__security_cookie_complement",
    "__security_init_cookie",
    "_guard_check_icall_nop",
    "_guard_dispatch_icall_nop",
    "_load_config_used",
    "btt_fini",
    "btt_get_data_block_offset_for_lba",
    "btt_init",
    "g_writeTraceEvent",
    "memcpy",
    "memmove",
    "memset",
    "nsio_callout",
    "nsunmap",
    "pfnEtwRegisterClassicProvider",
    "pfnEtwUnregister",
    "pfnWppGetVersion",
    "pfnWppQueryTraceInformation",
    "pfnWppTraceMessage",
    "read_map_entry",
    "util_checksum",
    "\u007fntoskrnl_NULL_THUNK_DATA"
  ],
  "hash": "TODO"
}